// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20231115008/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// ServerlessPrivateEndpointsApi is an autogenerated mock type for the ServerlessPrivateEndpointsApi type
type ServerlessPrivateEndpointsApi struct {
	mock.Mock
}

type ServerlessPrivateEndpointsApi_Expecter struct {
	mock *mock.Mock
}

func (_m *ServerlessPrivateEndpointsApi) EXPECT() *ServerlessPrivateEndpointsApi_Expecter {
	return &ServerlessPrivateEndpointsApi_Expecter{mock: &_m.Mock}
}

// CreateServerlessPrivateEndpoint provides a mock function with given fields: ctx, groupId, instanceName, serverlessTenantCreateRequest
func (_m *ServerlessPrivateEndpointsApi) CreateServerlessPrivateEndpoint(ctx context.Context, groupId string, instanceName string, serverlessTenantCreateRequest *admin.ServerlessTenantCreateRequest) admin.CreateServerlessPrivateEndpointApiRequest {
	ret := _m.Called(ctx, groupId, instanceName, serverlessTenantCreateRequest)

	if len(ret) == 0 {
		panic("no return value specified for CreateServerlessPrivateEndpoint")
	}

	var r0 admin.CreateServerlessPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.ServerlessTenantCreateRequest) admin.CreateServerlessPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, groupId, instanceName, serverlessTenantCreateRequest)
	} else {
		r0 = ret.Get(0).(admin.CreateServerlessPrivateEndpointApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateServerlessPrivateEndpoint'
type ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call struct {
	*mock.Call
}

// CreateServerlessPrivateEndpoint is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - instanceName string
//   - serverlessTenantCreateRequest *admin.ServerlessTenantCreateRequest
func (_e *ServerlessPrivateEndpointsApi_Expecter) CreateServerlessPrivateEndpoint(ctx interface{}, groupId interface{}, instanceName interface{}, serverlessTenantCreateRequest interface{}) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call {
	return &ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call{Call: _e.mock.On("CreateServerlessPrivateEndpoint", ctx, groupId, instanceName, serverlessTenantCreateRequest)}
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call) Run(run func(ctx context.Context, groupId string, instanceName string, serverlessTenantCreateRequest *admin.ServerlessTenantCreateRequest)) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.ServerlessTenantCreateRequest))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call) Return(_a0 admin.CreateServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call) RunAndReturn(run func(context.Context, string, string, *admin.ServerlessTenantCreateRequest) admin.CreateServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// CreateServerlessPrivateEndpointExecute provides a mock function with given fields: r
func (_m *ServerlessPrivateEndpointsApi) CreateServerlessPrivateEndpointExecute(r admin.CreateServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateServerlessPrivateEndpointExecute")
	}

	var r0 *admin.ServerlessTenantEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateServerlessPrivateEndpointApiRequest) *admin.ServerlessTenantEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ServerlessTenantEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateServerlessPrivateEndpointApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateServerlessPrivateEndpointApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateServerlessPrivateEndpointExecute'
type ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call struct {
	*mock.Call
}

// CreateServerlessPrivateEndpointExecute is a helper method to define mock.On call
//   - r admin.CreateServerlessPrivateEndpointApiRequest
func (_e *ServerlessPrivateEndpointsApi_Expecter) CreateServerlessPrivateEndpointExecute(r interface{}) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call {
	return &ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call{Call: _e.mock.On("CreateServerlessPrivateEndpointExecute", r)}
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call) Run(run func(r admin.CreateServerlessPrivateEndpointApiRequest)) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateServerlessPrivateEndpointApiRequest))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call) Return(_a0 *admin.ServerlessTenantEndpoint, _a1 *http.Response, _a2 error) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call) RunAndReturn(run func(admin.CreateServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error)) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateServerlessPrivateEndpointWithParams provides a mock function with given fields: ctx, args
func (_m *ServerlessPrivateEndpointsApi) CreateServerlessPrivateEndpointWithParams(ctx context.Context, args *admin.CreateServerlessPrivateEndpointApiParams) admin.CreateServerlessPrivateEndpointApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateServerlessPrivateEndpointWithParams")
	}

	var r0 admin.CreateServerlessPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateServerlessPrivateEndpointApiParams) admin.CreateServerlessPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateServerlessPrivateEndpointApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateServerlessPrivateEndpointWithParams'
type ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call struct {
	*mock.Call
}

// CreateServerlessPrivateEndpointWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateServerlessPrivateEndpointApiParams
func (_e *ServerlessPrivateEndpointsApi_Expecter) CreateServerlessPrivateEndpointWithParams(ctx interface{}, args interface{}) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call {
	return &ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call{Call: _e.mock.On("CreateServerlessPrivateEndpointWithParams", ctx, args)}
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateServerlessPrivateEndpointApiParams)) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateServerlessPrivateEndpointApiParams))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call) Return(_a0 admin.CreateServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateServerlessPrivateEndpointApiParams) admin.CreateServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_CreateServerlessPrivateEndpointWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteServerlessPrivateEndpoint provides a mock function with given fields: ctx, groupId, instanceName, endpointId
func (_m *ServerlessPrivateEndpointsApi) DeleteServerlessPrivateEndpoint(ctx context.Context, groupId string, instanceName string, endpointId string) admin.DeleteServerlessPrivateEndpointApiRequest {
	ret := _m.Called(ctx, groupId, instanceName, endpointId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteServerlessPrivateEndpoint")
	}

	var r0 admin.DeleteServerlessPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.DeleteServerlessPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, groupId, instanceName, endpointId)
	} else {
		r0 = ret.Get(0).(admin.DeleteServerlessPrivateEndpointApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteServerlessPrivateEndpoint'
type ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call struct {
	*mock.Call
}

// DeleteServerlessPrivateEndpoint is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - instanceName string
//   - endpointId string
func (_e *ServerlessPrivateEndpointsApi_Expecter) DeleteServerlessPrivateEndpoint(ctx interface{}, groupId interface{}, instanceName interface{}, endpointId interface{}) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call {
	return &ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call{Call: _e.mock.On("DeleteServerlessPrivateEndpoint", ctx, groupId, instanceName, endpointId)}
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call) Run(run func(ctx context.Context, groupId string, instanceName string, endpointId string)) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call) Return(_a0 admin.DeleteServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call) RunAndReturn(run func(context.Context, string, string, string) admin.DeleteServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteServerlessPrivateEndpointExecute provides a mock function with given fields: r
func (_m *ServerlessPrivateEndpointsApi) DeleteServerlessPrivateEndpointExecute(r admin.DeleteServerlessPrivateEndpointApiRequest) (map[string]interface{}, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for DeleteServerlessPrivateEndpointExecute")
	}

	var r0 map[string]interface{}
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.DeleteServerlessPrivateEndpointApiRequest) (map[string]interface{}, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.DeleteServerlessPrivateEndpointApiRequest) map[string]interface{}); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	if rf, ok := ret.Get(1).(func(admin.DeleteServerlessPrivateEndpointApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.DeleteServerlessPrivateEndpointApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteServerlessPrivateEndpointExecute'
type ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call struct {
	*mock.Call
}

// DeleteServerlessPrivateEndpointExecute is a helper method to define mock.On call
//   - r admin.DeleteServerlessPrivateEndpointApiRequest
func (_e *ServerlessPrivateEndpointsApi_Expecter) DeleteServerlessPrivateEndpointExecute(r interface{}) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call {
	return &ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call{Call: _e.mock.On("DeleteServerlessPrivateEndpointExecute", r)}
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call) Run(run func(r admin.DeleteServerlessPrivateEndpointApiRequest)) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.DeleteServerlessPrivateEndpointApiRequest))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call) Return(_a0 map[string]interface{}, _a1 *http.Response, _a2 error) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call) RunAndReturn(run func(admin.DeleteServerlessPrivateEndpointApiRequest) (map[string]interface{}, *http.Response, error)) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointExecute_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteServerlessPrivateEndpointWithParams provides a mock function with given fields: ctx, args
func (_m *ServerlessPrivateEndpointsApi) DeleteServerlessPrivateEndpointWithParams(ctx context.Context, args *admin.DeleteServerlessPrivateEndpointApiParams) admin.DeleteServerlessPrivateEndpointApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for DeleteServerlessPrivateEndpointWithParams")
	}

	var r0 admin.DeleteServerlessPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.DeleteServerlessPrivateEndpointApiParams) admin.DeleteServerlessPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.DeleteServerlessPrivateEndpointApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteServerlessPrivateEndpointWithParams'
type ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call struct {
	*mock.Call
}

// DeleteServerlessPrivateEndpointWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.DeleteServerlessPrivateEndpointApiParams
func (_e *ServerlessPrivateEndpointsApi_Expecter) DeleteServerlessPrivateEndpointWithParams(ctx interface{}, args interface{}) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call {
	return &ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call{Call: _e.mock.On("DeleteServerlessPrivateEndpointWithParams", ctx, args)}
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call) Run(run func(ctx context.Context, args *admin.DeleteServerlessPrivateEndpointApiParams)) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.DeleteServerlessPrivateEndpointApiParams))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call) Return(_a0 admin.DeleteServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call) RunAndReturn(run func(context.Context, *admin.DeleteServerlessPrivateEndpointApiParams) admin.DeleteServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_DeleteServerlessPrivateEndpointWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetServerlessPrivateEndpoint provides a mock function with given fields: ctx, groupId, instanceName, endpointId
func (_m *ServerlessPrivateEndpointsApi) GetServerlessPrivateEndpoint(ctx context.Context, groupId string, instanceName string, endpointId string) admin.GetServerlessPrivateEndpointApiRequest {
	ret := _m.Called(ctx, groupId, instanceName, endpointId)

	if len(ret) == 0 {
		panic("no return value specified for GetServerlessPrivateEndpoint")
	}

	var r0 admin.GetServerlessPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.GetServerlessPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, groupId, instanceName, endpointId)
	} else {
		r0 = ret.Get(0).(admin.GetServerlessPrivateEndpointApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetServerlessPrivateEndpoint'
type ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call struct {
	*mock.Call
}

// GetServerlessPrivateEndpoint is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - instanceName string
//   - endpointId string
func (_e *ServerlessPrivateEndpointsApi_Expecter) GetServerlessPrivateEndpoint(ctx interface{}, groupId interface{}, instanceName interface{}, endpointId interface{}) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call {
	return &ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call{Call: _e.mock.On("GetServerlessPrivateEndpoint", ctx, groupId, instanceName, endpointId)}
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call) Run(run func(ctx context.Context, groupId string, instanceName string, endpointId string)) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call) Return(_a0 admin.GetServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call) RunAndReturn(run func(context.Context, string, string, string) admin.GetServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// GetServerlessPrivateEndpointExecute provides a mock function with given fields: r
func (_m *ServerlessPrivateEndpointsApi) GetServerlessPrivateEndpointExecute(r admin.GetServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetServerlessPrivateEndpointExecute")
	}

	var r0 *admin.ServerlessTenantEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetServerlessPrivateEndpointApiRequest) *admin.ServerlessTenantEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ServerlessTenantEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetServerlessPrivateEndpointApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetServerlessPrivateEndpointApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetServerlessPrivateEndpointExecute'
type ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call struct {
	*mock.Call
}

// GetServerlessPrivateEndpointExecute is a helper method to define mock.On call
//   - r admin.GetServerlessPrivateEndpointApiRequest
func (_e *ServerlessPrivateEndpointsApi_Expecter) GetServerlessPrivateEndpointExecute(r interface{}) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call {
	return &ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call{Call: _e.mock.On("GetServerlessPrivateEndpointExecute", r)}
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call) Run(run func(r admin.GetServerlessPrivateEndpointApiRequest)) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetServerlessPrivateEndpointApiRequest))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call) Return(_a0 *admin.ServerlessTenantEndpoint, _a1 *http.Response, _a2 error) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call) RunAndReturn(run func(admin.GetServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error)) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetServerlessPrivateEndpointWithParams provides a mock function with given fields: ctx, args
func (_m *ServerlessPrivateEndpointsApi) GetServerlessPrivateEndpointWithParams(ctx context.Context, args *admin.GetServerlessPrivateEndpointApiParams) admin.GetServerlessPrivateEndpointApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetServerlessPrivateEndpointWithParams")
	}

	var r0 admin.GetServerlessPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetServerlessPrivateEndpointApiParams) admin.GetServerlessPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetServerlessPrivateEndpointApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetServerlessPrivateEndpointWithParams'
type ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call struct {
	*mock.Call
}

// GetServerlessPrivateEndpointWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetServerlessPrivateEndpointApiParams
func (_e *ServerlessPrivateEndpointsApi_Expecter) GetServerlessPrivateEndpointWithParams(ctx interface{}, args interface{}) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call {
	return &ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call{Call: _e.mock.On("GetServerlessPrivateEndpointWithParams", ctx, args)}
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call) Run(run func(ctx context.Context, args *admin.GetServerlessPrivateEndpointApiParams)) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetServerlessPrivateEndpointApiParams))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call) Return(_a0 admin.GetServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetServerlessPrivateEndpointApiParams) admin.GetServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_GetServerlessPrivateEndpointWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListServerlessPrivateEndpoints provides a mock function with given fields: ctx, groupId, instanceName
func (_m *ServerlessPrivateEndpointsApi) ListServerlessPrivateEndpoints(ctx context.Context, groupId string, instanceName string) admin.ListServerlessPrivateEndpointsApiRequest {
	ret := _m.Called(ctx, groupId, instanceName)

	if len(ret) == 0 {
		panic("no return value specified for ListServerlessPrivateEndpoints")
	}

	var r0 admin.ListServerlessPrivateEndpointsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.ListServerlessPrivateEndpointsApiRequest); ok {
		r0 = rf(ctx, groupId, instanceName)
	} else {
		r0 = ret.Get(0).(admin.ListServerlessPrivateEndpointsApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListServerlessPrivateEndpoints'
type ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call struct {
	*mock.Call
}

// ListServerlessPrivateEndpoints is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - instanceName string
func (_e *ServerlessPrivateEndpointsApi_Expecter) ListServerlessPrivateEndpoints(ctx interface{}, groupId interface{}, instanceName interface{}) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call {
	return &ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call{Call: _e.mock.On("ListServerlessPrivateEndpoints", ctx, groupId, instanceName)}
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call) Run(run func(ctx context.Context, groupId string, instanceName string)) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call) Return(_a0 admin.ListServerlessPrivateEndpointsApiRequest) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call) RunAndReturn(run func(context.Context, string, string) admin.ListServerlessPrivateEndpointsApiRequest) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpoints_Call {
	_c.Call.Return(run)
	return _c
}

// ListServerlessPrivateEndpointsExecute provides a mock function with given fields: r
func (_m *ServerlessPrivateEndpointsApi) ListServerlessPrivateEndpointsExecute(r admin.ListServerlessPrivateEndpointsApiRequest) ([]admin.ServerlessTenantEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListServerlessPrivateEndpointsExecute")
	}

	var r0 []admin.ServerlessTenantEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListServerlessPrivateEndpointsApiRequest) ([]admin.ServerlessTenantEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListServerlessPrivateEndpointsApiRequest) []admin.ServerlessTenantEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]admin.ServerlessTenantEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListServerlessPrivateEndpointsApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListServerlessPrivateEndpointsApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListServerlessPrivateEndpointsExecute'
type ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call struct {
	*mock.Call
}

// ListServerlessPrivateEndpointsExecute is a helper method to define mock.On call
//   - r admin.ListServerlessPrivateEndpointsApiRequest
func (_e *ServerlessPrivateEndpointsApi_Expecter) ListServerlessPrivateEndpointsExecute(r interface{}) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call {
	return &ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call{Call: _e.mock.On("ListServerlessPrivateEndpointsExecute", r)}
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call) Run(run func(r admin.ListServerlessPrivateEndpointsApiRequest)) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListServerlessPrivateEndpointsApiRequest))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call) Return(_a0 []admin.ServerlessTenantEndpoint, _a1 *http.Response, _a2 error) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call) RunAndReturn(run func(admin.ListServerlessPrivateEndpointsApiRequest) ([]admin.ServerlessTenantEndpoint, *http.Response, error)) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListServerlessPrivateEndpointsWithParams provides a mock function with given fields: ctx, args
func (_m *ServerlessPrivateEndpointsApi) ListServerlessPrivateEndpointsWithParams(ctx context.Context, args *admin.ListServerlessPrivateEndpointsApiParams) admin.ListServerlessPrivateEndpointsApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListServerlessPrivateEndpointsWithParams")
	}

	var r0 admin.ListServerlessPrivateEndpointsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListServerlessPrivateEndpointsApiParams) admin.ListServerlessPrivateEndpointsApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListServerlessPrivateEndpointsApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListServerlessPrivateEndpointsWithParams'
type ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call struct {
	*mock.Call
}

// ListServerlessPrivateEndpointsWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListServerlessPrivateEndpointsApiParams
func (_e *ServerlessPrivateEndpointsApi_Expecter) ListServerlessPrivateEndpointsWithParams(ctx interface{}, args interface{}) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call {
	return &ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call{Call: _e.mock.On("ListServerlessPrivateEndpointsWithParams", ctx, args)}
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call) Run(run func(ctx context.Context, args *admin.ListServerlessPrivateEndpointsApiParams)) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListServerlessPrivateEndpointsApiParams))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call) Return(_a0 admin.ListServerlessPrivateEndpointsApiRequest) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListServerlessPrivateEndpointsApiParams) admin.ListServerlessPrivateEndpointsApiRequest) *ServerlessPrivateEndpointsApi_ListServerlessPrivateEndpointsWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateServerlessPrivateEndpoint provides a mock function with given fields: ctx, groupId, instanceName, endpointId, serverlessTenantEndpointUpdate
func (_m *ServerlessPrivateEndpointsApi) UpdateServerlessPrivateEndpoint(ctx context.Context, groupId string, instanceName string, endpointId string, serverlessTenantEndpointUpdate *admin.ServerlessTenantEndpointUpdate) admin.UpdateServerlessPrivateEndpointApiRequest {
	ret := _m.Called(ctx, groupId, instanceName, endpointId, serverlessTenantEndpointUpdate)

	if len(ret) == 0 {
		panic("no return value specified for UpdateServerlessPrivateEndpoint")
	}

	var r0 admin.UpdateServerlessPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, *admin.ServerlessTenantEndpointUpdate) admin.UpdateServerlessPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, groupId, instanceName, endpointId, serverlessTenantEndpointUpdate)
	} else {
		r0 = ret.Get(0).(admin.UpdateServerlessPrivateEndpointApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateServerlessPrivateEndpoint'
type ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call struct {
	*mock.Call
}

// UpdateServerlessPrivateEndpoint is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - instanceName string
//   - endpointId string
//   - serverlessTenantEndpointUpdate *admin.ServerlessTenantEndpointUpdate
func (_e *ServerlessPrivateEndpointsApi_Expecter) UpdateServerlessPrivateEndpoint(ctx interface{}, groupId interface{}, instanceName interface{}, endpointId interface{}, serverlessTenantEndpointUpdate interface{}) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call {
	return &ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call{Call: _e.mock.On("UpdateServerlessPrivateEndpoint", ctx, groupId, instanceName, endpointId, serverlessTenantEndpointUpdate)}
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call) Run(run func(ctx context.Context, groupId string, instanceName string, endpointId string, serverlessTenantEndpointUpdate *admin.ServerlessTenantEndpointUpdate)) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string), args[4].(*admin.ServerlessTenantEndpointUpdate))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call) Return(_a0 admin.UpdateServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call) RunAndReturn(run func(context.Context, string, string, string, *admin.ServerlessTenantEndpointUpdate) admin.UpdateServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateServerlessPrivateEndpointExecute provides a mock function with given fields: r
func (_m *ServerlessPrivateEndpointsApi) UpdateServerlessPrivateEndpointExecute(r admin.UpdateServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for UpdateServerlessPrivateEndpointExecute")
	}

	var r0 *admin.ServerlessTenantEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.UpdateServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.UpdateServerlessPrivateEndpointApiRequest) *admin.ServerlessTenantEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ServerlessTenantEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.UpdateServerlessPrivateEndpointApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.UpdateServerlessPrivateEndpointApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateServerlessPrivateEndpointExecute'
type ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call struct {
	*mock.Call
}

// UpdateServerlessPrivateEndpointExecute is a helper method to define mock.On call
//   - r admin.UpdateServerlessPrivateEndpointApiRequest
func (_e *ServerlessPrivateEndpointsApi_Expecter) UpdateServerlessPrivateEndpointExecute(r interface{}) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call {
	return &ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call{Call: _e.mock.On("UpdateServerlessPrivateEndpointExecute", r)}
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call) Run(run func(r admin.UpdateServerlessPrivateEndpointApiRequest)) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.UpdateServerlessPrivateEndpointApiRequest))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call) Return(_a0 *admin.ServerlessTenantEndpoint, _a1 *http.Response, _a2 error) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call) RunAndReturn(run func(admin.UpdateServerlessPrivateEndpointApiRequest) (*admin.ServerlessTenantEndpoint, *http.Response, error)) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointExecute_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateServerlessPrivateEndpointWithParams provides a mock function with given fields: ctx, args
func (_m *ServerlessPrivateEndpointsApi) UpdateServerlessPrivateEndpointWithParams(ctx context.Context, args *admin.UpdateServerlessPrivateEndpointApiParams) admin.UpdateServerlessPrivateEndpointApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for UpdateServerlessPrivateEndpointWithParams")
	}

	var r0 admin.UpdateServerlessPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.UpdateServerlessPrivateEndpointApiParams) admin.UpdateServerlessPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.UpdateServerlessPrivateEndpointApiRequest)
	}

	return r0
}

// ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateServerlessPrivateEndpointWithParams'
type ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call struct {
	*mock.Call
}

// UpdateServerlessPrivateEndpointWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.UpdateServerlessPrivateEndpointApiParams
func (_e *ServerlessPrivateEndpointsApi_Expecter) UpdateServerlessPrivateEndpointWithParams(ctx interface{}, args interface{}) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call {
	return &ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call{Call: _e.mock.On("UpdateServerlessPrivateEndpointWithParams", ctx, args)}
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call) Run(run func(ctx context.Context, args *admin.UpdateServerlessPrivateEndpointApiParams)) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.UpdateServerlessPrivateEndpointApiParams))
	})
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call) Return(_a0 admin.UpdateServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call) RunAndReturn(run func(context.Context, *admin.UpdateServerlessPrivateEndpointApiParams) admin.UpdateServerlessPrivateEndpointApiRequest) *ServerlessPrivateEndpointsApi_UpdateServerlessPrivateEndpointWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewServerlessPrivateEndpointsApi creates a new instance of ServerlessPrivateEndpointsApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServerlessPrivateEndpointsApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServerlessPrivateEndpointsApi {
	mock := &ServerlessPrivateEndpointsApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
