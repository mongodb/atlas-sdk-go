// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20250312008/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// ProgrammaticAPIKeysApi is an autogenerated mock type for the ProgrammaticAPIKeysApi type
type ProgrammaticAPIKeysApi struct {
	mock.Mock
}

type ProgrammaticAPIKeysApi_Expecter struct {
	mock *mock.Mock
}

func (_m *ProgrammaticAPIKeysApi) EXPECT() *ProgrammaticAPIKeysApi_Expecter {
	return &ProgrammaticAPIKeysApi_Expecter{mock: &_m.Mock}
}

// AddGroupApiKey provides a mock function with given fields: ctx, groupId, apiUserId, userAccessRoleAssignment
func (_m *ProgrammaticAPIKeysApi) AddGroupApiKey(ctx context.Context, groupId string, apiUserId string, userAccessRoleAssignment *[]admin.UserAccessRoleAssignment) admin.AddGroupApiKeyApiRequest {
	ret := _m.Called(ctx, groupId, apiUserId, userAccessRoleAssignment)

	if len(ret) == 0 {
		panic("no return value specified for AddGroupApiKey")
	}

	var r0 admin.AddGroupApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *[]admin.UserAccessRoleAssignment) admin.AddGroupApiKeyApiRequest); ok {
		r0 = rf(ctx, groupId, apiUserId, userAccessRoleAssignment)
	} else {
		r0 = ret.Get(0).(admin.AddGroupApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_AddGroupApiKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddGroupApiKey'
type ProgrammaticAPIKeysApi_AddGroupApiKey_Call struct {
	*mock.Call
}

// AddGroupApiKey is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - apiUserId string
//   - userAccessRoleAssignment *[]admin.UserAccessRoleAssignment
func (_e *ProgrammaticAPIKeysApi_Expecter) AddGroupApiKey(ctx any, groupId any, apiUserId any, userAccessRoleAssignment any) *ProgrammaticAPIKeysApi_AddGroupApiKey_Call {
	return &ProgrammaticAPIKeysApi_AddGroupApiKey_Call{Call: _e.mock.On("AddGroupApiKey", ctx, groupId, apiUserId, userAccessRoleAssignment)}
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKey_Call) Run(run func(ctx context.Context, groupId string, apiUserId string, userAccessRoleAssignment *[]admin.UserAccessRoleAssignment)) *ProgrammaticAPIKeysApi_AddGroupApiKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*[]admin.UserAccessRoleAssignment))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKey_Call) Return(_a0 admin.AddGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_AddGroupApiKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKey_Call) RunAndReturn(run func(context.Context, string, string, *[]admin.UserAccessRoleAssignment) admin.AddGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_AddGroupApiKey_Call {
	_c.Call.Return(run)
	return _c
}

// AddGroupApiKeyExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) AddGroupApiKeyExecute(r admin.AddGroupApiKeyApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for AddGroupApiKeyExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.AddGroupApiKeyApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.AddGroupApiKeyApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.AddGroupApiKeyApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddGroupApiKeyExecute'
type ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call struct {
	*mock.Call
}

// AddGroupApiKeyExecute is a helper method to define mock.On call
//   - r admin.AddGroupApiKeyApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) AddGroupApiKeyExecute(r any) *ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call {
	return &ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call{Call: _e.mock.On("AddGroupApiKeyExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call) Run(run func(r admin.AddGroupApiKeyApiRequest)) *ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.AddGroupApiKeyApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call) Return(_a0 *http.Response, _a1 error) *ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call) RunAndReturn(run func(admin.AddGroupApiKeyApiRequest) (*http.Response, error)) *ProgrammaticAPIKeysApi_AddGroupApiKeyExecute_Call {
	_c.Call.Return(run)
	return _c
}

// AddGroupApiKeyWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) AddGroupApiKeyWithParams(ctx context.Context, args *admin.AddGroupApiKeyApiParams) admin.AddGroupApiKeyApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for AddGroupApiKeyWithParams")
	}

	var r0 admin.AddGroupApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.AddGroupApiKeyApiParams) admin.AddGroupApiKeyApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.AddGroupApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddGroupApiKeyWithParams'
type ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call struct {
	*mock.Call
}

// AddGroupApiKeyWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.AddGroupApiKeyApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) AddGroupApiKeyWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call {
	return &ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call{Call: _e.mock.On("AddGroupApiKeyWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call) Run(run func(ctx context.Context, args *admin.AddGroupApiKeyApiParams)) *ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.AddGroupApiKeyApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call) Return(_a0 admin.AddGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call) RunAndReturn(run func(context.Context, *admin.AddGroupApiKeyApiParams) admin.AddGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_AddGroupApiKeyWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// CreateGroupApiKey provides a mock function with given fields: ctx, groupId, createAtlasProjectApiKey
func (_m *ProgrammaticAPIKeysApi) CreateGroupApiKey(ctx context.Context, groupId string, createAtlasProjectApiKey *admin.CreateAtlasProjectApiKey) admin.CreateGroupApiKeyApiRequest {
	ret := _m.Called(ctx, groupId, createAtlasProjectApiKey)

	if len(ret) == 0 {
		panic("no return value specified for CreateGroupApiKey")
	}

	var r0 admin.CreateGroupApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.CreateAtlasProjectApiKey) admin.CreateGroupApiKeyApiRequest); ok {
		r0 = rf(ctx, groupId, createAtlasProjectApiKey)
	} else {
		r0 = ret.Get(0).(admin.CreateGroupApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_CreateGroupApiKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateGroupApiKey'
type ProgrammaticAPIKeysApi_CreateGroupApiKey_Call struct {
	*mock.Call
}

// CreateGroupApiKey is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - createAtlasProjectApiKey *admin.CreateAtlasProjectApiKey
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateGroupApiKey(ctx any, groupId any, createAtlasProjectApiKey any) *ProgrammaticAPIKeysApi_CreateGroupApiKey_Call {
	return &ProgrammaticAPIKeysApi_CreateGroupApiKey_Call{Call: _e.mock.On("CreateGroupApiKey", ctx, groupId, createAtlasProjectApiKey)}
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKey_Call) Run(run func(ctx context.Context, groupId string, createAtlasProjectApiKey *admin.CreateAtlasProjectApiKey)) *ProgrammaticAPIKeysApi_CreateGroupApiKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.CreateAtlasProjectApiKey))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKey_Call) Return(_a0 admin.CreateGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_CreateGroupApiKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKey_Call) RunAndReturn(run func(context.Context, string, *admin.CreateAtlasProjectApiKey) admin.CreateGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_CreateGroupApiKey_Call {
	_c.Call.Return(run)
	return _c
}

// CreateGroupApiKeyExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) CreateGroupApiKeyExecute(r admin.CreateGroupApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateGroupApiKeyExecute")
	}

	var r0 *admin.ApiKeyUserDetails
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateGroupApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateGroupApiKeyApiRequest) *admin.ApiKeyUserDetails); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiKeyUserDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateGroupApiKeyApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateGroupApiKeyApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateGroupApiKeyExecute'
type ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call struct {
	*mock.Call
}

// CreateGroupApiKeyExecute is a helper method to define mock.On call
//   - r admin.CreateGroupApiKeyApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateGroupApiKeyExecute(r any) *ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call {
	return &ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call{Call: _e.mock.On("CreateGroupApiKeyExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call) Run(run func(r admin.CreateGroupApiKeyApiRequest)) *ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateGroupApiKeyApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call) Return(_a0 *admin.ApiKeyUserDetails, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call) RunAndReturn(run func(admin.CreateGroupApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)) *ProgrammaticAPIKeysApi_CreateGroupApiKeyExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateGroupApiKeyWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) CreateGroupApiKeyWithParams(ctx context.Context, args *admin.CreateGroupApiKeyApiParams) admin.CreateGroupApiKeyApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateGroupApiKeyWithParams")
	}

	var r0 admin.CreateGroupApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateGroupApiKeyApiParams) admin.CreateGroupApiKeyApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateGroupApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateGroupApiKeyWithParams'
type ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call struct {
	*mock.Call
}

// CreateGroupApiKeyWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateGroupApiKeyApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateGroupApiKeyWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call {
	return &ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call{Call: _e.mock.On("CreateGroupApiKeyWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateGroupApiKeyApiParams)) *ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateGroupApiKeyApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call) Return(_a0 admin.CreateGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateGroupApiKeyApiParams) admin.CreateGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_CreateGroupApiKeyWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// CreateOrgAccessEntry provides a mock function with given fields: ctx, orgId, apiUserId, userAccessListRequest
func (_m *ProgrammaticAPIKeysApi) CreateOrgAccessEntry(ctx context.Context, orgId string, apiUserId string, userAccessListRequest *[]admin.UserAccessListRequest) admin.CreateOrgAccessEntryApiRequest {
	ret := _m.Called(ctx, orgId, apiUserId, userAccessListRequest)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrgAccessEntry")
	}

	var r0 admin.CreateOrgAccessEntryApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *[]admin.UserAccessListRequest) admin.CreateOrgAccessEntryApiRequest); ok {
		r0 = rf(ctx, orgId, apiUserId, userAccessListRequest)
	} else {
		r0 = ret.Get(0).(admin.CreateOrgAccessEntryApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrgAccessEntry'
type ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call struct {
	*mock.Call
}

// CreateOrgAccessEntry is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - apiUserId string
//   - userAccessListRequest *[]admin.UserAccessListRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateOrgAccessEntry(ctx any, orgId any, apiUserId any, userAccessListRequest any) *ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call {
	return &ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call{Call: _e.mock.On("CreateOrgAccessEntry", ctx, orgId, apiUserId, userAccessListRequest)}
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call) Run(run func(ctx context.Context, orgId string, apiUserId string, userAccessListRequest *[]admin.UserAccessListRequest)) *ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*[]admin.UserAccessListRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call) Return(_a0 admin.CreateOrgAccessEntryApiRequest) *ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call) RunAndReturn(run func(context.Context, string, string, *[]admin.UserAccessListRequest) admin.CreateOrgAccessEntryApiRequest) *ProgrammaticAPIKeysApi_CreateOrgAccessEntry_Call {
	_c.Call.Return(run)
	return _c
}

// CreateOrgAccessEntryExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) CreateOrgAccessEntryExecute(r admin.CreateOrgAccessEntryApiRequest) (*admin.PaginatedApiUserAccessListResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrgAccessEntryExecute")
	}

	var r0 *admin.PaginatedApiUserAccessListResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateOrgAccessEntryApiRequest) (*admin.PaginatedApiUserAccessListResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateOrgAccessEntryApiRequest) *admin.PaginatedApiUserAccessListResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.PaginatedApiUserAccessListResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateOrgAccessEntryApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateOrgAccessEntryApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrgAccessEntryExecute'
type ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call struct {
	*mock.Call
}

// CreateOrgAccessEntryExecute is a helper method to define mock.On call
//   - r admin.CreateOrgAccessEntryApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateOrgAccessEntryExecute(r any) *ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call {
	return &ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call{Call: _e.mock.On("CreateOrgAccessEntryExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call) Run(run func(r admin.CreateOrgAccessEntryApiRequest)) *ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateOrgAccessEntryApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call) Return(_a0 *admin.PaginatedApiUserAccessListResponse, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call) RunAndReturn(run func(admin.CreateOrgAccessEntryApiRequest) (*admin.PaginatedApiUserAccessListResponse, *http.Response, error)) *ProgrammaticAPIKeysApi_CreateOrgAccessEntryExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateOrgAccessEntryWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) CreateOrgAccessEntryWithParams(ctx context.Context, args *admin.CreateOrgAccessEntryApiParams) admin.CreateOrgAccessEntryApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrgAccessEntryWithParams")
	}

	var r0 admin.CreateOrgAccessEntryApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateOrgAccessEntryApiParams) admin.CreateOrgAccessEntryApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateOrgAccessEntryApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrgAccessEntryWithParams'
type ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call struct {
	*mock.Call
}

// CreateOrgAccessEntryWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateOrgAccessEntryApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateOrgAccessEntryWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call {
	return &ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call{Call: _e.mock.On("CreateOrgAccessEntryWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateOrgAccessEntryApiParams)) *ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateOrgAccessEntryApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call) Return(_a0 admin.CreateOrgAccessEntryApiRequest) *ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateOrgAccessEntryApiParams) admin.CreateOrgAccessEntryApiRequest) *ProgrammaticAPIKeysApi_CreateOrgAccessEntryWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// CreateOrgApiKey provides a mock function with given fields: ctx, orgId, createAtlasOrganizationApiKey
func (_m *ProgrammaticAPIKeysApi) CreateOrgApiKey(ctx context.Context, orgId string, createAtlasOrganizationApiKey *admin.CreateAtlasOrganizationApiKey) admin.CreateOrgApiKeyApiRequest {
	ret := _m.Called(ctx, orgId, createAtlasOrganizationApiKey)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrgApiKey")
	}

	var r0 admin.CreateOrgApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.CreateAtlasOrganizationApiKey) admin.CreateOrgApiKeyApiRequest); ok {
		r0 = rf(ctx, orgId, createAtlasOrganizationApiKey)
	} else {
		r0 = ret.Get(0).(admin.CreateOrgApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_CreateOrgApiKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrgApiKey'
type ProgrammaticAPIKeysApi_CreateOrgApiKey_Call struct {
	*mock.Call
}

// CreateOrgApiKey is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - createAtlasOrganizationApiKey *admin.CreateAtlasOrganizationApiKey
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateOrgApiKey(ctx any, orgId any, createAtlasOrganizationApiKey any) *ProgrammaticAPIKeysApi_CreateOrgApiKey_Call {
	return &ProgrammaticAPIKeysApi_CreateOrgApiKey_Call{Call: _e.mock.On("CreateOrgApiKey", ctx, orgId, createAtlasOrganizationApiKey)}
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKey_Call) Run(run func(ctx context.Context, orgId string, createAtlasOrganizationApiKey *admin.CreateAtlasOrganizationApiKey)) *ProgrammaticAPIKeysApi_CreateOrgApiKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.CreateAtlasOrganizationApiKey))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKey_Call) Return(_a0 admin.CreateOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_CreateOrgApiKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKey_Call) RunAndReturn(run func(context.Context, string, *admin.CreateAtlasOrganizationApiKey) admin.CreateOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_CreateOrgApiKey_Call {
	_c.Call.Return(run)
	return _c
}

// CreateOrgApiKeyExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) CreateOrgApiKeyExecute(r admin.CreateOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrgApiKeyExecute")
	}

	var r0 *admin.ApiKeyUserDetails
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateOrgApiKeyApiRequest) *admin.ApiKeyUserDetails); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiKeyUserDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateOrgApiKeyApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateOrgApiKeyApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrgApiKeyExecute'
type ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call struct {
	*mock.Call
}

// CreateOrgApiKeyExecute is a helper method to define mock.On call
//   - r admin.CreateOrgApiKeyApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateOrgApiKeyExecute(r any) *ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call {
	return &ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call{Call: _e.mock.On("CreateOrgApiKeyExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call) Run(run func(r admin.CreateOrgApiKeyApiRequest)) *ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateOrgApiKeyApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call) Return(_a0 *admin.ApiKeyUserDetails, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call) RunAndReturn(run func(admin.CreateOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)) *ProgrammaticAPIKeysApi_CreateOrgApiKeyExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateOrgApiKeyWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) CreateOrgApiKeyWithParams(ctx context.Context, args *admin.CreateOrgApiKeyApiParams) admin.CreateOrgApiKeyApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrgApiKeyWithParams")
	}

	var r0 admin.CreateOrgApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateOrgApiKeyApiParams) admin.CreateOrgApiKeyApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateOrgApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrgApiKeyWithParams'
type ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call struct {
	*mock.Call
}

// CreateOrgApiKeyWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateOrgApiKeyApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) CreateOrgApiKeyWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call {
	return &ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call{Call: _e.mock.On("CreateOrgApiKeyWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateOrgApiKeyApiParams)) *ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateOrgApiKeyApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call) Return(_a0 admin.CreateOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateOrgApiKeyApiParams) admin.CreateOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_CreateOrgApiKeyWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAccessEntry provides a mock function with given fields: ctx, orgId, apiUserId, ipAddress
func (_m *ProgrammaticAPIKeysApi) DeleteAccessEntry(ctx context.Context, orgId string, apiUserId string, ipAddress string) admin.DeleteAccessEntryApiRequest {
	ret := _m.Called(ctx, orgId, apiUserId, ipAddress)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAccessEntry")
	}

	var r0 admin.DeleteAccessEntryApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.DeleteAccessEntryApiRequest); ok {
		r0 = rf(ctx, orgId, apiUserId, ipAddress)
	} else {
		r0 = ret.Get(0).(admin.DeleteAccessEntryApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_DeleteAccessEntry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAccessEntry'
type ProgrammaticAPIKeysApi_DeleteAccessEntry_Call struct {
	*mock.Call
}

// DeleteAccessEntry is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - apiUserId string
//   - ipAddress string
func (_e *ProgrammaticAPIKeysApi_Expecter) DeleteAccessEntry(ctx any, orgId any, apiUserId any, ipAddress any) *ProgrammaticAPIKeysApi_DeleteAccessEntry_Call {
	return &ProgrammaticAPIKeysApi_DeleteAccessEntry_Call{Call: _e.mock.On("DeleteAccessEntry", ctx, orgId, apiUserId, ipAddress)}
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntry_Call) Run(run func(ctx context.Context, orgId string, apiUserId string, ipAddress string)) *ProgrammaticAPIKeysApi_DeleteAccessEntry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntry_Call) Return(_a0 admin.DeleteAccessEntryApiRequest) *ProgrammaticAPIKeysApi_DeleteAccessEntry_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntry_Call) RunAndReturn(run func(context.Context, string, string, string) admin.DeleteAccessEntryApiRequest) *ProgrammaticAPIKeysApi_DeleteAccessEntry_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAccessEntryExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) DeleteAccessEntryExecute(r admin.DeleteAccessEntryApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAccessEntryExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.DeleteAccessEntryApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.DeleteAccessEntryApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.DeleteAccessEntryApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAccessEntryExecute'
type ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call struct {
	*mock.Call
}

// DeleteAccessEntryExecute is a helper method to define mock.On call
//   - r admin.DeleteAccessEntryApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) DeleteAccessEntryExecute(r any) *ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call {
	return &ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call{Call: _e.mock.On("DeleteAccessEntryExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call) Run(run func(r admin.DeleteAccessEntryApiRequest)) *ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.DeleteAccessEntryApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call) Return(_a0 *http.Response, _a1 error) *ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call) RunAndReturn(run func(admin.DeleteAccessEntryApiRequest) (*http.Response, error)) *ProgrammaticAPIKeysApi_DeleteAccessEntryExecute_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAccessEntryWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) DeleteAccessEntryWithParams(ctx context.Context, args *admin.DeleteAccessEntryApiParams) admin.DeleteAccessEntryApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAccessEntryWithParams")
	}

	var r0 admin.DeleteAccessEntryApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.DeleteAccessEntryApiParams) admin.DeleteAccessEntryApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.DeleteAccessEntryApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAccessEntryWithParams'
type ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call struct {
	*mock.Call
}

// DeleteAccessEntryWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.DeleteAccessEntryApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) DeleteAccessEntryWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call {
	return &ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call{Call: _e.mock.On("DeleteAccessEntryWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call) Run(run func(ctx context.Context, args *admin.DeleteAccessEntryApiParams)) *ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.DeleteAccessEntryApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call) Return(_a0 admin.DeleteAccessEntryApiRequest) *ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call) RunAndReturn(run func(context.Context, *admin.DeleteAccessEntryApiParams) admin.DeleteAccessEntryApiRequest) *ProgrammaticAPIKeysApi_DeleteAccessEntryWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteOrgApiKey provides a mock function with given fields: ctx, orgId, apiUserId
func (_m *ProgrammaticAPIKeysApi) DeleteOrgApiKey(ctx context.Context, orgId string, apiUserId string) admin.DeleteOrgApiKeyApiRequest {
	ret := _m.Called(ctx, orgId, apiUserId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrgApiKey")
	}

	var r0 admin.DeleteOrgApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.DeleteOrgApiKeyApiRequest); ok {
		r0 = rf(ctx, orgId, apiUserId)
	} else {
		r0 = ret.Get(0).(admin.DeleteOrgApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteOrgApiKey'
type ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call struct {
	*mock.Call
}

// DeleteOrgApiKey is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - apiUserId string
func (_e *ProgrammaticAPIKeysApi_Expecter) DeleteOrgApiKey(ctx any, orgId any, apiUserId any) *ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call {
	return &ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call{Call: _e.mock.On("DeleteOrgApiKey", ctx, orgId, apiUserId)}
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call) Run(run func(ctx context.Context, orgId string, apiUserId string)) *ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call) Return(_a0 admin.DeleteOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call) RunAndReturn(run func(context.Context, string, string) admin.DeleteOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_DeleteOrgApiKey_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteOrgApiKeyExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) DeleteOrgApiKeyExecute(r admin.DeleteOrgApiKeyApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrgApiKeyExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.DeleteOrgApiKeyApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.DeleteOrgApiKeyApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.DeleteOrgApiKeyApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteOrgApiKeyExecute'
type ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call struct {
	*mock.Call
}

// DeleteOrgApiKeyExecute is a helper method to define mock.On call
//   - r admin.DeleteOrgApiKeyApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) DeleteOrgApiKeyExecute(r any) *ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call {
	return &ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call{Call: _e.mock.On("DeleteOrgApiKeyExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call) Run(run func(r admin.DeleteOrgApiKeyApiRequest)) *ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.DeleteOrgApiKeyApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call) Return(_a0 *http.Response, _a1 error) *ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call) RunAndReturn(run func(admin.DeleteOrgApiKeyApiRequest) (*http.Response, error)) *ProgrammaticAPIKeysApi_DeleteOrgApiKeyExecute_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteOrgApiKeyWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) DeleteOrgApiKeyWithParams(ctx context.Context, args *admin.DeleteOrgApiKeyApiParams) admin.DeleteOrgApiKeyApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrgApiKeyWithParams")
	}

	var r0 admin.DeleteOrgApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.DeleteOrgApiKeyApiParams) admin.DeleteOrgApiKeyApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.DeleteOrgApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteOrgApiKeyWithParams'
type ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call struct {
	*mock.Call
}

// DeleteOrgApiKeyWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.DeleteOrgApiKeyApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) DeleteOrgApiKeyWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call {
	return &ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call{Call: _e.mock.On("DeleteOrgApiKeyWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call) Run(run func(ctx context.Context, args *admin.DeleteOrgApiKeyApiParams)) *ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.DeleteOrgApiKeyApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call) Return(_a0 admin.DeleteOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call) RunAndReturn(run func(context.Context, *admin.DeleteOrgApiKeyApiParams) admin.DeleteOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_DeleteOrgApiKeyWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetOrgAccessEntry provides a mock function with given fields: ctx, orgId, ipAddress, apiUserId
func (_m *ProgrammaticAPIKeysApi) GetOrgAccessEntry(ctx context.Context, orgId string, ipAddress string, apiUserId string) admin.GetOrgAccessEntryApiRequest {
	ret := _m.Called(ctx, orgId, ipAddress, apiUserId)

	if len(ret) == 0 {
		panic("no return value specified for GetOrgAccessEntry")
	}

	var r0 admin.GetOrgAccessEntryApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.GetOrgAccessEntryApiRequest); ok {
		r0 = rf(ctx, orgId, ipAddress, apiUserId)
	} else {
		r0 = ret.Get(0).(admin.GetOrgAccessEntryApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOrgAccessEntry'
type ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call struct {
	*mock.Call
}

// GetOrgAccessEntry is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - ipAddress string
//   - apiUserId string
func (_e *ProgrammaticAPIKeysApi_Expecter) GetOrgAccessEntry(ctx any, orgId any, ipAddress any, apiUserId any) *ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call {
	return &ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call{Call: _e.mock.On("GetOrgAccessEntry", ctx, orgId, ipAddress, apiUserId)}
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call) Run(run func(ctx context.Context, orgId string, ipAddress string, apiUserId string)) *ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call) Return(_a0 admin.GetOrgAccessEntryApiRequest) *ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call) RunAndReturn(run func(context.Context, string, string, string) admin.GetOrgAccessEntryApiRequest) *ProgrammaticAPIKeysApi_GetOrgAccessEntry_Call {
	_c.Call.Return(run)
	return _c
}

// GetOrgAccessEntryExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) GetOrgAccessEntryExecute(r admin.GetOrgAccessEntryApiRequest) (*admin.UserAccessListResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetOrgAccessEntryExecute")
	}

	var r0 *admin.UserAccessListResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetOrgAccessEntryApiRequest) (*admin.UserAccessListResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetOrgAccessEntryApiRequest) *admin.UserAccessListResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.UserAccessListResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetOrgAccessEntryApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetOrgAccessEntryApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOrgAccessEntryExecute'
type ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call struct {
	*mock.Call
}

// GetOrgAccessEntryExecute is a helper method to define mock.On call
//   - r admin.GetOrgAccessEntryApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) GetOrgAccessEntryExecute(r any) *ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call {
	return &ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call{Call: _e.mock.On("GetOrgAccessEntryExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call) Run(run func(r admin.GetOrgAccessEntryApiRequest)) *ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetOrgAccessEntryApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call) Return(_a0 *admin.UserAccessListResponse, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call) RunAndReturn(run func(admin.GetOrgAccessEntryApiRequest) (*admin.UserAccessListResponse, *http.Response, error)) *ProgrammaticAPIKeysApi_GetOrgAccessEntryExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetOrgAccessEntryWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) GetOrgAccessEntryWithParams(ctx context.Context, args *admin.GetOrgAccessEntryApiParams) admin.GetOrgAccessEntryApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetOrgAccessEntryWithParams")
	}

	var r0 admin.GetOrgAccessEntryApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetOrgAccessEntryApiParams) admin.GetOrgAccessEntryApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetOrgAccessEntryApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOrgAccessEntryWithParams'
type ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call struct {
	*mock.Call
}

// GetOrgAccessEntryWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetOrgAccessEntryApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) GetOrgAccessEntryWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call {
	return &ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call{Call: _e.mock.On("GetOrgAccessEntryWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call) Run(run func(ctx context.Context, args *admin.GetOrgAccessEntryApiParams)) *ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetOrgAccessEntryApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call) Return(_a0 admin.GetOrgAccessEntryApiRequest) *ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetOrgAccessEntryApiParams) admin.GetOrgAccessEntryApiRequest) *ProgrammaticAPIKeysApi_GetOrgAccessEntryWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetOrgApiKey provides a mock function with given fields: ctx, orgId, apiUserId
func (_m *ProgrammaticAPIKeysApi) GetOrgApiKey(ctx context.Context, orgId string, apiUserId string) admin.GetOrgApiKeyApiRequest {
	ret := _m.Called(ctx, orgId, apiUserId)

	if len(ret) == 0 {
		panic("no return value specified for GetOrgApiKey")
	}

	var r0 admin.GetOrgApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.GetOrgApiKeyApiRequest); ok {
		r0 = rf(ctx, orgId, apiUserId)
	} else {
		r0 = ret.Get(0).(admin.GetOrgApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_GetOrgApiKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOrgApiKey'
type ProgrammaticAPIKeysApi_GetOrgApiKey_Call struct {
	*mock.Call
}

// GetOrgApiKey is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - apiUserId string
func (_e *ProgrammaticAPIKeysApi_Expecter) GetOrgApiKey(ctx any, orgId any, apiUserId any) *ProgrammaticAPIKeysApi_GetOrgApiKey_Call {
	return &ProgrammaticAPIKeysApi_GetOrgApiKey_Call{Call: _e.mock.On("GetOrgApiKey", ctx, orgId, apiUserId)}
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKey_Call) Run(run func(ctx context.Context, orgId string, apiUserId string)) *ProgrammaticAPIKeysApi_GetOrgApiKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKey_Call) Return(_a0 admin.GetOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_GetOrgApiKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKey_Call) RunAndReturn(run func(context.Context, string, string) admin.GetOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_GetOrgApiKey_Call {
	_c.Call.Return(run)
	return _c
}

// GetOrgApiKeyExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) GetOrgApiKeyExecute(r admin.GetOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetOrgApiKeyExecute")
	}

	var r0 *admin.ApiKeyUserDetails
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetOrgApiKeyApiRequest) *admin.ApiKeyUserDetails); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiKeyUserDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetOrgApiKeyApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetOrgApiKeyApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOrgApiKeyExecute'
type ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call struct {
	*mock.Call
}

// GetOrgApiKeyExecute is a helper method to define mock.On call
//   - r admin.GetOrgApiKeyApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) GetOrgApiKeyExecute(r any) *ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call {
	return &ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call{Call: _e.mock.On("GetOrgApiKeyExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call) Run(run func(r admin.GetOrgApiKeyApiRequest)) *ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetOrgApiKeyApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call) Return(_a0 *admin.ApiKeyUserDetails, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call) RunAndReturn(run func(admin.GetOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)) *ProgrammaticAPIKeysApi_GetOrgApiKeyExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetOrgApiKeyWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) GetOrgApiKeyWithParams(ctx context.Context, args *admin.GetOrgApiKeyApiParams) admin.GetOrgApiKeyApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetOrgApiKeyWithParams")
	}

	var r0 admin.GetOrgApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetOrgApiKeyApiParams) admin.GetOrgApiKeyApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetOrgApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOrgApiKeyWithParams'
type ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call struct {
	*mock.Call
}

// GetOrgApiKeyWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetOrgApiKeyApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) GetOrgApiKeyWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call {
	return &ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call{Call: _e.mock.On("GetOrgApiKeyWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call) Run(run func(ctx context.Context, args *admin.GetOrgApiKeyApiParams)) *ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetOrgApiKeyApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call) Return(_a0 admin.GetOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetOrgApiKeyApiParams) admin.GetOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_GetOrgApiKeyWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListGroupApiKeys provides a mock function with given fields: ctx, groupId
func (_m *ProgrammaticAPIKeysApi) ListGroupApiKeys(ctx context.Context, groupId string) admin.ListGroupApiKeysApiRequest {
	ret := _m.Called(ctx, groupId)

	if len(ret) == 0 {
		panic("no return value specified for ListGroupApiKeys")
	}

	var r0 admin.ListGroupApiKeysApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string) admin.ListGroupApiKeysApiRequest); ok {
		r0 = rf(ctx, groupId)
	} else {
		r0 = ret.Get(0).(admin.ListGroupApiKeysApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_ListGroupApiKeys_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListGroupApiKeys'
type ProgrammaticAPIKeysApi_ListGroupApiKeys_Call struct {
	*mock.Call
}

// ListGroupApiKeys is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
func (_e *ProgrammaticAPIKeysApi_Expecter) ListGroupApiKeys(ctx any, groupId any) *ProgrammaticAPIKeysApi_ListGroupApiKeys_Call {
	return &ProgrammaticAPIKeysApi_ListGroupApiKeys_Call{Call: _e.mock.On("ListGroupApiKeys", ctx, groupId)}
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeys_Call) Run(run func(ctx context.Context, groupId string)) *ProgrammaticAPIKeysApi_ListGroupApiKeys_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeys_Call) Return(_a0 admin.ListGroupApiKeysApiRequest) *ProgrammaticAPIKeysApi_ListGroupApiKeys_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeys_Call) RunAndReturn(run func(context.Context, string) admin.ListGroupApiKeysApiRequest) *ProgrammaticAPIKeysApi_ListGroupApiKeys_Call {
	_c.Call.Return(run)
	return _c
}

// ListGroupApiKeysExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) ListGroupApiKeysExecute(r admin.ListGroupApiKeysApiRequest) (*admin.PaginatedApiApiUser, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListGroupApiKeysExecute")
	}

	var r0 *admin.PaginatedApiApiUser
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListGroupApiKeysApiRequest) (*admin.PaginatedApiApiUser, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListGroupApiKeysApiRequest) *admin.PaginatedApiApiUser); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.PaginatedApiApiUser)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListGroupApiKeysApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListGroupApiKeysApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListGroupApiKeysExecute'
type ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call struct {
	*mock.Call
}

// ListGroupApiKeysExecute is a helper method to define mock.On call
//   - r admin.ListGroupApiKeysApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) ListGroupApiKeysExecute(r any) *ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call {
	return &ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call{Call: _e.mock.On("ListGroupApiKeysExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call) Run(run func(r admin.ListGroupApiKeysApiRequest)) *ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListGroupApiKeysApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call) Return(_a0 *admin.PaginatedApiApiUser, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call) RunAndReturn(run func(admin.ListGroupApiKeysApiRequest) (*admin.PaginatedApiApiUser, *http.Response, error)) *ProgrammaticAPIKeysApi_ListGroupApiKeysExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListGroupApiKeysWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) ListGroupApiKeysWithParams(ctx context.Context, args *admin.ListGroupApiKeysApiParams) admin.ListGroupApiKeysApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListGroupApiKeysWithParams")
	}

	var r0 admin.ListGroupApiKeysApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListGroupApiKeysApiParams) admin.ListGroupApiKeysApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListGroupApiKeysApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListGroupApiKeysWithParams'
type ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call struct {
	*mock.Call
}

// ListGroupApiKeysWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListGroupApiKeysApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) ListGroupApiKeysWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call {
	return &ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call{Call: _e.mock.On("ListGroupApiKeysWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call) Run(run func(ctx context.Context, args *admin.ListGroupApiKeysApiParams)) *ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListGroupApiKeysApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call) Return(_a0 admin.ListGroupApiKeysApiRequest) *ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListGroupApiKeysApiParams) admin.ListGroupApiKeysApiRequest) *ProgrammaticAPIKeysApi_ListGroupApiKeysWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListOrgAccessEntries provides a mock function with given fields: ctx, orgId, apiUserId
func (_m *ProgrammaticAPIKeysApi) ListOrgAccessEntries(ctx context.Context, orgId string, apiUserId string) admin.ListOrgAccessEntriesApiRequest {
	ret := _m.Called(ctx, orgId, apiUserId)

	if len(ret) == 0 {
		panic("no return value specified for ListOrgAccessEntries")
	}

	var r0 admin.ListOrgAccessEntriesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.ListOrgAccessEntriesApiRequest); ok {
		r0 = rf(ctx, orgId, apiUserId)
	} else {
		r0 = ret.Get(0).(admin.ListOrgAccessEntriesApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListOrgAccessEntries'
type ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call struct {
	*mock.Call
}

// ListOrgAccessEntries is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - apiUserId string
func (_e *ProgrammaticAPIKeysApi_Expecter) ListOrgAccessEntries(ctx any, orgId any, apiUserId any) *ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call {
	return &ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call{Call: _e.mock.On("ListOrgAccessEntries", ctx, orgId, apiUserId)}
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call) Run(run func(ctx context.Context, orgId string, apiUserId string)) *ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call) Return(_a0 admin.ListOrgAccessEntriesApiRequest) *ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call) RunAndReturn(run func(context.Context, string, string) admin.ListOrgAccessEntriesApiRequest) *ProgrammaticAPIKeysApi_ListOrgAccessEntries_Call {
	_c.Call.Return(run)
	return _c
}

// ListOrgAccessEntriesExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) ListOrgAccessEntriesExecute(r admin.ListOrgAccessEntriesApiRequest) (*admin.PaginatedApiUserAccessListResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListOrgAccessEntriesExecute")
	}

	var r0 *admin.PaginatedApiUserAccessListResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListOrgAccessEntriesApiRequest) (*admin.PaginatedApiUserAccessListResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListOrgAccessEntriesApiRequest) *admin.PaginatedApiUserAccessListResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.PaginatedApiUserAccessListResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListOrgAccessEntriesApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListOrgAccessEntriesApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListOrgAccessEntriesExecute'
type ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call struct {
	*mock.Call
}

// ListOrgAccessEntriesExecute is a helper method to define mock.On call
//   - r admin.ListOrgAccessEntriesApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) ListOrgAccessEntriesExecute(r any) *ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call {
	return &ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call{Call: _e.mock.On("ListOrgAccessEntriesExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call) Run(run func(r admin.ListOrgAccessEntriesApiRequest)) *ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListOrgAccessEntriesApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call) Return(_a0 *admin.PaginatedApiUserAccessListResponse, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call) RunAndReturn(run func(admin.ListOrgAccessEntriesApiRequest) (*admin.PaginatedApiUserAccessListResponse, *http.Response, error)) *ProgrammaticAPIKeysApi_ListOrgAccessEntriesExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListOrgAccessEntriesWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) ListOrgAccessEntriesWithParams(ctx context.Context, args *admin.ListOrgAccessEntriesApiParams) admin.ListOrgAccessEntriesApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListOrgAccessEntriesWithParams")
	}

	var r0 admin.ListOrgAccessEntriesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListOrgAccessEntriesApiParams) admin.ListOrgAccessEntriesApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListOrgAccessEntriesApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListOrgAccessEntriesWithParams'
type ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call struct {
	*mock.Call
}

// ListOrgAccessEntriesWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListOrgAccessEntriesApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) ListOrgAccessEntriesWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call {
	return &ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call{Call: _e.mock.On("ListOrgAccessEntriesWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call) Run(run func(ctx context.Context, args *admin.ListOrgAccessEntriesApiParams)) *ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListOrgAccessEntriesApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call) Return(_a0 admin.ListOrgAccessEntriesApiRequest) *ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListOrgAccessEntriesApiParams) admin.ListOrgAccessEntriesApiRequest) *ProgrammaticAPIKeysApi_ListOrgAccessEntriesWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListOrgApiKeys provides a mock function with given fields: ctx, orgId
func (_m *ProgrammaticAPIKeysApi) ListOrgApiKeys(ctx context.Context, orgId string) admin.ListOrgApiKeysApiRequest {
	ret := _m.Called(ctx, orgId)

	if len(ret) == 0 {
		panic("no return value specified for ListOrgApiKeys")
	}

	var r0 admin.ListOrgApiKeysApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string) admin.ListOrgApiKeysApiRequest); ok {
		r0 = rf(ctx, orgId)
	} else {
		r0 = ret.Get(0).(admin.ListOrgApiKeysApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_ListOrgApiKeys_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListOrgApiKeys'
type ProgrammaticAPIKeysApi_ListOrgApiKeys_Call struct {
	*mock.Call
}

// ListOrgApiKeys is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
func (_e *ProgrammaticAPIKeysApi_Expecter) ListOrgApiKeys(ctx any, orgId any) *ProgrammaticAPIKeysApi_ListOrgApiKeys_Call {
	return &ProgrammaticAPIKeysApi_ListOrgApiKeys_Call{Call: _e.mock.On("ListOrgApiKeys", ctx, orgId)}
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeys_Call) Run(run func(ctx context.Context, orgId string)) *ProgrammaticAPIKeysApi_ListOrgApiKeys_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeys_Call) Return(_a0 admin.ListOrgApiKeysApiRequest) *ProgrammaticAPIKeysApi_ListOrgApiKeys_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeys_Call) RunAndReturn(run func(context.Context, string) admin.ListOrgApiKeysApiRequest) *ProgrammaticAPIKeysApi_ListOrgApiKeys_Call {
	_c.Call.Return(run)
	return _c
}

// ListOrgApiKeysExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) ListOrgApiKeysExecute(r admin.ListOrgApiKeysApiRequest) (*admin.PaginatedApiApiUser, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListOrgApiKeysExecute")
	}

	var r0 *admin.PaginatedApiApiUser
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListOrgApiKeysApiRequest) (*admin.PaginatedApiApiUser, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListOrgApiKeysApiRequest) *admin.PaginatedApiApiUser); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.PaginatedApiApiUser)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListOrgApiKeysApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListOrgApiKeysApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListOrgApiKeysExecute'
type ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call struct {
	*mock.Call
}

// ListOrgApiKeysExecute is a helper method to define mock.On call
//   - r admin.ListOrgApiKeysApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) ListOrgApiKeysExecute(r any) *ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call {
	return &ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call{Call: _e.mock.On("ListOrgApiKeysExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call) Run(run func(r admin.ListOrgApiKeysApiRequest)) *ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListOrgApiKeysApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call) Return(_a0 *admin.PaginatedApiApiUser, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call) RunAndReturn(run func(admin.ListOrgApiKeysApiRequest) (*admin.PaginatedApiApiUser, *http.Response, error)) *ProgrammaticAPIKeysApi_ListOrgApiKeysExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListOrgApiKeysWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) ListOrgApiKeysWithParams(ctx context.Context, args *admin.ListOrgApiKeysApiParams) admin.ListOrgApiKeysApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListOrgApiKeysWithParams")
	}

	var r0 admin.ListOrgApiKeysApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListOrgApiKeysApiParams) admin.ListOrgApiKeysApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListOrgApiKeysApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListOrgApiKeysWithParams'
type ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call struct {
	*mock.Call
}

// ListOrgApiKeysWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListOrgApiKeysApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) ListOrgApiKeysWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call {
	return &ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call{Call: _e.mock.On("ListOrgApiKeysWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call) Run(run func(ctx context.Context, args *admin.ListOrgApiKeysApiParams)) *ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListOrgApiKeysApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call) Return(_a0 admin.ListOrgApiKeysApiRequest) *ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListOrgApiKeysApiParams) admin.ListOrgApiKeysApiRequest) *ProgrammaticAPIKeysApi_ListOrgApiKeysWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// RemoveGroupApiKey provides a mock function with given fields: ctx, groupId, apiUserId
func (_m *ProgrammaticAPIKeysApi) RemoveGroupApiKey(ctx context.Context, groupId string, apiUserId string) admin.RemoveGroupApiKeyApiRequest {
	ret := _m.Called(ctx, groupId, apiUserId)

	if len(ret) == 0 {
		panic("no return value specified for RemoveGroupApiKey")
	}

	var r0 admin.RemoveGroupApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.RemoveGroupApiKeyApiRequest); ok {
		r0 = rf(ctx, groupId, apiUserId)
	} else {
		r0 = ret.Get(0).(admin.RemoveGroupApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RemoveGroupApiKey'
type ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call struct {
	*mock.Call
}

// RemoveGroupApiKey is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - apiUserId string
func (_e *ProgrammaticAPIKeysApi_Expecter) RemoveGroupApiKey(ctx any, groupId any, apiUserId any) *ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call {
	return &ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call{Call: _e.mock.On("RemoveGroupApiKey", ctx, groupId, apiUserId)}
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call) Run(run func(ctx context.Context, groupId string, apiUserId string)) *ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call) Return(_a0 admin.RemoveGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call) RunAndReturn(run func(context.Context, string, string) admin.RemoveGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_RemoveGroupApiKey_Call {
	_c.Call.Return(run)
	return _c
}

// RemoveGroupApiKeyExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) RemoveGroupApiKeyExecute(r admin.RemoveGroupApiKeyApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for RemoveGroupApiKeyExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.RemoveGroupApiKeyApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.RemoveGroupApiKeyApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.RemoveGroupApiKeyApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RemoveGroupApiKeyExecute'
type ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call struct {
	*mock.Call
}

// RemoveGroupApiKeyExecute is a helper method to define mock.On call
//   - r admin.RemoveGroupApiKeyApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) RemoveGroupApiKeyExecute(r any) *ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call {
	return &ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call{Call: _e.mock.On("RemoveGroupApiKeyExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call) Run(run func(r admin.RemoveGroupApiKeyApiRequest)) *ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.RemoveGroupApiKeyApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call) Return(_a0 *http.Response, _a1 error) *ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call) RunAndReturn(run func(admin.RemoveGroupApiKeyApiRequest) (*http.Response, error)) *ProgrammaticAPIKeysApi_RemoveGroupApiKeyExecute_Call {
	_c.Call.Return(run)
	return _c
}

// RemoveGroupApiKeyWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) RemoveGroupApiKeyWithParams(ctx context.Context, args *admin.RemoveGroupApiKeyApiParams) admin.RemoveGroupApiKeyApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for RemoveGroupApiKeyWithParams")
	}

	var r0 admin.RemoveGroupApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.RemoveGroupApiKeyApiParams) admin.RemoveGroupApiKeyApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.RemoveGroupApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RemoveGroupApiKeyWithParams'
type ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call struct {
	*mock.Call
}

// RemoveGroupApiKeyWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.RemoveGroupApiKeyApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) RemoveGroupApiKeyWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call {
	return &ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call{Call: _e.mock.On("RemoveGroupApiKeyWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call) Run(run func(ctx context.Context, args *admin.RemoveGroupApiKeyApiParams)) *ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.RemoveGroupApiKeyApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call) Return(_a0 admin.RemoveGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call) RunAndReturn(run func(context.Context, *admin.RemoveGroupApiKeyApiParams) admin.RemoveGroupApiKeyApiRequest) *ProgrammaticAPIKeysApi_RemoveGroupApiKeyWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateApiKeyRoles provides a mock function with given fields: ctx, groupId, apiUserId, updateAtlasProjectApiKey
func (_m *ProgrammaticAPIKeysApi) UpdateApiKeyRoles(ctx context.Context, groupId string, apiUserId string, updateAtlasProjectApiKey *admin.UpdateAtlasProjectApiKey) admin.UpdateApiKeyRolesApiRequest {
	ret := _m.Called(ctx, groupId, apiUserId, updateAtlasProjectApiKey)

	if len(ret) == 0 {
		panic("no return value specified for UpdateApiKeyRoles")
	}

	var r0 admin.UpdateApiKeyRolesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.UpdateAtlasProjectApiKey) admin.UpdateApiKeyRolesApiRequest); ok {
		r0 = rf(ctx, groupId, apiUserId, updateAtlasProjectApiKey)
	} else {
		r0 = ret.Get(0).(admin.UpdateApiKeyRolesApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateApiKeyRoles'
type ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call struct {
	*mock.Call
}

// UpdateApiKeyRoles is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - apiUserId string
//   - updateAtlasProjectApiKey *admin.UpdateAtlasProjectApiKey
func (_e *ProgrammaticAPIKeysApi_Expecter) UpdateApiKeyRoles(ctx any, groupId any, apiUserId any, updateAtlasProjectApiKey any) *ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call {
	return &ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call{Call: _e.mock.On("UpdateApiKeyRoles", ctx, groupId, apiUserId, updateAtlasProjectApiKey)}
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call) Run(run func(ctx context.Context, groupId string, apiUserId string, updateAtlasProjectApiKey *admin.UpdateAtlasProjectApiKey)) *ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.UpdateAtlasProjectApiKey))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call) Return(_a0 admin.UpdateApiKeyRolesApiRequest) *ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call) RunAndReturn(run func(context.Context, string, string, *admin.UpdateAtlasProjectApiKey) admin.UpdateApiKeyRolesApiRequest) *ProgrammaticAPIKeysApi_UpdateApiKeyRoles_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateApiKeyRolesExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) UpdateApiKeyRolesExecute(r admin.UpdateApiKeyRolesApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for UpdateApiKeyRolesExecute")
	}

	var r0 *admin.ApiKeyUserDetails
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.UpdateApiKeyRolesApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.UpdateApiKeyRolesApiRequest) *admin.ApiKeyUserDetails); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiKeyUserDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.UpdateApiKeyRolesApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.UpdateApiKeyRolesApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateApiKeyRolesExecute'
type ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call struct {
	*mock.Call
}

// UpdateApiKeyRolesExecute is a helper method to define mock.On call
//   - r admin.UpdateApiKeyRolesApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) UpdateApiKeyRolesExecute(r any) *ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call {
	return &ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call{Call: _e.mock.On("UpdateApiKeyRolesExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call) Run(run func(r admin.UpdateApiKeyRolesApiRequest)) *ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.UpdateApiKeyRolesApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call) Return(_a0 *admin.ApiKeyUserDetails, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call) RunAndReturn(run func(admin.UpdateApiKeyRolesApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)) *ProgrammaticAPIKeysApi_UpdateApiKeyRolesExecute_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateApiKeyRolesWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) UpdateApiKeyRolesWithParams(ctx context.Context, args *admin.UpdateApiKeyRolesApiParams) admin.UpdateApiKeyRolesApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for UpdateApiKeyRolesWithParams")
	}

	var r0 admin.UpdateApiKeyRolesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.UpdateApiKeyRolesApiParams) admin.UpdateApiKeyRolesApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.UpdateApiKeyRolesApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateApiKeyRolesWithParams'
type ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call struct {
	*mock.Call
}

// UpdateApiKeyRolesWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.UpdateApiKeyRolesApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) UpdateApiKeyRolesWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call {
	return &ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call{Call: _e.mock.On("UpdateApiKeyRolesWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call) Run(run func(ctx context.Context, args *admin.UpdateApiKeyRolesApiParams)) *ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.UpdateApiKeyRolesApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call) Return(_a0 admin.UpdateApiKeyRolesApiRequest) *ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call) RunAndReturn(run func(context.Context, *admin.UpdateApiKeyRolesApiParams) admin.UpdateApiKeyRolesApiRequest) *ProgrammaticAPIKeysApi_UpdateApiKeyRolesWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateOrgApiKey provides a mock function with given fields: ctx, orgId, apiUserId, updateAtlasOrganizationApiKey
func (_m *ProgrammaticAPIKeysApi) UpdateOrgApiKey(ctx context.Context, orgId string, apiUserId string, updateAtlasOrganizationApiKey *admin.UpdateAtlasOrganizationApiKey) admin.UpdateOrgApiKeyApiRequest {
	ret := _m.Called(ctx, orgId, apiUserId, updateAtlasOrganizationApiKey)

	if len(ret) == 0 {
		panic("no return value specified for UpdateOrgApiKey")
	}

	var r0 admin.UpdateOrgApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.UpdateAtlasOrganizationApiKey) admin.UpdateOrgApiKeyApiRequest); ok {
		r0 = rf(ctx, orgId, apiUserId, updateAtlasOrganizationApiKey)
	} else {
		r0 = ret.Get(0).(admin.UpdateOrgApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateOrgApiKey'
type ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call struct {
	*mock.Call
}

// UpdateOrgApiKey is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - apiUserId string
//   - updateAtlasOrganizationApiKey *admin.UpdateAtlasOrganizationApiKey
func (_e *ProgrammaticAPIKeysApi_Expecter) UpdateOrgApiKey(ctx any, orgId any, apiUserId any, updateAtlasOrganizationApiKey any) *ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call {
	return &ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call{Call: _e.mock.On("UpdateOrgApiKey", ctx, orgId, apiUserId, updateAtlasOrganizationApiKey)}
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call) Run(run func(ctx context.Context, orgId string, apiUserId string, updateAtlasOrganizationApiKey *admin.UpdateAtlasOrganizationApiKey)) *ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.UpdateAtlasOrganizationApiKey))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call) Return(_a0 admin.UpdateOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call) RunAndReturn(run func(context.Context, string, string, *admin.UpdateAtlasOrganizationApiKey) admin.UpdateOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_UpdateOrgApiKey_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateOrgApiKeyExecute provides a mock function with given fields: r
func (_m *ProgrammaticAPIKeysApi) UpdateOrgApiKeyExecute(r admin.UpdateOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for UpdateOrgApiKeyExecute")
	}

	var r0 *admin.ApiKeyUserDetails
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.UpdateOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.UpdateOrgApiKeyApiRequest) *admin.ApiKeyUserDetails); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiKeyUserDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.UpdateOrgApiKeyApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.UpdateOrgApiKeyApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateOrgApiKeyExecute'
type ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call struct {
	*mock.Call
}

// UpdateOrgApiKeyExecute is a helper method to define mock.On call
//   - r admin.UpdateOrgApiKeyApiRequest
func (_e *ProgrammaticAPIKeysApi_Expecter) UpdateOrgApiKeyExecute(r any) *ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call {
	return &ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call{Call: _e.mock.On("UpdateOrgApiKeyExecute", r)}
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call) Run(run func(r admin.UpdateOrgApiKeyApiRequest)) *ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.UpdateOrgApiKeyApiRequest))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call) Return(_a0 *admin.ApiKeyUserDetails, _a1 *http.Response, _a2 error) *ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call) RunAndReturn(run func(admin.UpdateOrgApiKeyApiRequest) (*admin.ApiKeyUserDetails, *http.Response, error)) *ProgrammaticAPIKeysApi_UpdateOrgApiKeyExecute_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateOrgApiKeyWithParams provides a mock function with given fields: ctx, args
func (_m *ProgrammaticAPIKeysApi) UpdateOrgApiKeyWithParams(ctx context.Context, args *admin.UpdateOrgApiKeyApiParams) admin.UpdateOrgApiKeyApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for UpdateOrgApiKeyWithParams")
	}

	var r0 admin.UpdateOrgApiKeyApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.UpdateOrgApiKeyApiParams) admin.UpdateOrgApiKeyApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.UpdateOrgApiKeyApiRequest)
	}

	return r0
}

// ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateOrgApiKeyWithParams'
type ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call struct {
	*mock.Call
}

// UpdateOrgApiKeyWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.UpdateOrgApiKeyApiParams
func (_e *ProgrammaticAPIKeysApi_Expecter) UpdateOrgApiKeyWithParams(ctx any, args any) *ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call {
	return &ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call{Call: _e.mock.On("UpdateOrgApiKeyWithParams", ctx, args)}
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call) Run(run func(ctx context.Context, args *admin.UpdateOrgApiKeyApiParams)) *ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.UpdateOrgApiKeyApiParams))
	})
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call) Return(_a0 admin.UpdateOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call) RunAndReturn(run func(context.Context, *admin.UpdateOrgApiKeyApiParams) admin.UpdateOrgApiKeyApiRequest) *ProgrammaticAPIKeysApi_UpdateOrgApiKeyWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewProgrammaticAPIKeysApi creates a new instance of ProgrammaticAPIKeysApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProgrammaticAPIKeysApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProgrammaticAPIKeysApi {
	mock := &ProgrammaticAPIKeysApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
