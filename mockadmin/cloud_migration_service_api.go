// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20250312008/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// CloudMigrationServiceApi is an autogenerated mock type for the CloudMigrationServiceApi type
type CloudMigrationServiceApi struct {
	mock.Mock
}

type CloudMigrationServiceApi_Expecter struct {
	mock *mock.Mock
}

func (_m *CloudMigrationServiceApi) EXPECT() *CloudMigrationServiceApi_Expecter {
	return &CloudMigrationServiceApi_Expecter{mock: &_m.Mock}
}

// CreateGroupLiveMigration provides a mock function with given fields: ctx, groupId, liveMigrationRequest20240530
func (_m *CloudMigrationServiceApi) CreateGroupLiveMigration(ctx context.Context, groupId string, liveMigrationRequest20240530 *admin.LiveMigrationRequest20240530) admin.CreateGroupLiveMigrationApiRequest {
	ret := _m.Called(ctx, groupId, liveMigrationRequest20240530)

	if len(ret) == 0 {
		panic("no return value specified for CreateGroupLiveMigration")
	}

	var r0 admin.CreateGroupLiveMigrationApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.LiveMigrationRequest20240530) admin.CreateGroupLiveMigrationApiRequest); ok {
		r0 = rf(ctx, groupId, liveMigrationRequest20240530)
	} else {
		r0 = ret.Get(0).(admin.CreateGroupLiveMigrationApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_CreateGroupLiveMigration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateGroupLiveMigration'
type CloudMigrationServiceApi_CreateGroupLiveMigration_Call struct {
	*mock.Call
}

// CreateGroupLiveMigration is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - liveMigrationRequest20240530 *admin.LiveMigrationRequest20240530
func (_e *CloudMigrationServiceApi_Expecter) CreateGroupLiveMigration(ctx any, groupId any, liveMigrationRequest20240530 any) *CloudMigrationServiceApi_CreateGroupLiveMigration_Call {
	return &CloudMigrationServiceApi_CreateGroupLiveMigration_Call{Call: _e.mock.On("CreateGroupLiveMigration", ctx, groupId, liveMigrationRequest20240530)}
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigration_Call) Run(run func(ctx context.Context, groupId string, liveMigrationRequest20240530 *admin.LiveMigrationRequest20240530)) *CloudMigrationServiceApi_CreateGroupLiveMigration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.LiveMigrationRequest20240530))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigration_Call) Return(_a0 admin.CreateGroupLiveMigrationApiRequest) *CloudMigrationServiceApi_CreateGroupLiveMigration_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigration_Call) RunAndReturn(run func(context.Context, string, *admin.LiveMigrationRequest20240530) admin.CreateGroupLiveMigrationApiRequest) *CloudMigrationServiceApi_CreateGroupLiveMigration_Call {
	_c.Call.Return(run)
	return _c
}

// CreateGroupLiveMigrationExecute provides a mock function with given fields: r
func (_m *CloudMigrationServiceApi) CreateGroupLiveMigrationExecute(r admin.CreateGroupLiveMigrationApiRequest) (*admin.LiveMigrationResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateGroupLiveMigrationExecute")
	}

	var r0 *admin.LiveMigrationResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateGroupLiveMigrationApiRequest) (*admin.LiveMigrationResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateGroupLiveMigrationApiRequest) *admin.LiveMigrationResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.LiveMigrationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateGroupLiveMigrationApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateGroupLiveMigrationApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateGroupLiveMigrationExecute'
type CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call struct {
	*mock.Call
}

// CreateGroupLiveMigrationExecute is a helper method to define mock.On call
//   - r admin.CreateGroupLiveMigrationApiRequest
func (_e *CloudMigrationServiceApi_Expecter) CreateGroupLiveMigrationExecute(r any) *CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call {
	return &CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call{Call: _e.mock.On("CreateGroupLiveMigrationExecute", r)}
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call) Run(run func(r admin.CreateGroupLiveMigrationApiRequest)) *CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateGroupLiveMigrationApiRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call) Return(_a0 *admin.LiveMigrationResponse, _a1 *http.Response, _a2 error) *CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call) RunAndReturn(run func(admin.CreateGroupLiveMigrationApiRequest) (*admin.LiveMigrationResponse, *http.Response, error)) *CloudMigrationServiceApi_CreateGroupLiveMigrationExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateGroupLiveMigrationWithParams provides a mock function with given fields: ctx, args
func (_m *CloudMigrationServiceApi) CreateGroupLiveMigrationWithParams(ctx context.Context, args *admin.CreateGroupLiveMigrationApiParams) admin.CreateGroupLiveMigrationApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateGroupLiveMigrationWithParams")
	}

	var r0 admin.CreateGroupLiveMigrationApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateGroupLiveMigrationApiParams) admin.CreateGroupLiveMigrationApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateGroupLiveMigrationApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateGroupLiveMigrationWithParams'
type CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call struct {
	*mock.Call
}

// CreateGroupLiveMigrationWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateGroupLiveMigrationApiParams
func (_e *CloudMigrationServiceApi_Expecter) CreateGroupLiveMigrationWithParams(ctx any, args any) *CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call {
	return &CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call{Call: _e.mock.On("CreateGroupLiveMigrationWithParams", ctx, args)}
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateGroupLiveMigrationApiParams)) *CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateGroupLiveMigrationApiParams))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call) Return(_a0 admin.CreateGroupLiveMigrationApiRequest) *CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateGroupLiveMigrationApiParams) admin.CreateGroupLiveMigrationApiRequest) *CloudMigrationServiceApi_CreateGroupLiveMigrationWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// CreateLinkToken provides a mock function with given fields: ctx, orgId, targetOrgRequest
func (_m *CloudMigrationServiceApi) CreateLinkToken(ctx context.Context, orgId string, targetOrgRequest *admin.TargetOrgRequest) admin.CreateLinkTokenApiRequest {
	ret := _m.Called(ctx, orgId, targetOrgRequest)

	if len(ret) == 0 {
		panic("no return value specified for CreateLinkToken")
	}

	var r0 admin.CreateLinkTokenApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.TargetOrgRequest) admin.CreateLinkTokenApiRequest); ok {
		r0 = rf(ctx, orgId, targetOrgRequest)
	} else {
		r0 = ret.Get(0).(admin.CreateLinkTokenApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_CreateLinkToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateLinkToken'
type CloudMigrationServiceApi_CreateLinkToken_Call struct {
	*mock.Call
}

// CreateLinkToken is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
//   - targetOrgRequest *admin.TargetOrgRequest
func (_e *CloudMigrationServiceApi_Expecter) CreateLinkToken(ctx any, orgId any, targetOrgRequest any) *CloudMigrationServiceApi_CreateLinkToken_Call {
	return &CloudMigrationServiceApi_CreateLinkToken_Call{Call: _e.mock.On("CreateLinkToken", ctx, orgId, targetOrgRequest)}
}

func (_c *CloudMigrationServiceApi_CreateLinkToken_Call) Run(run func(ctx context.Context, orgId string, targetOrgRequest *admin.TargetOrgRequest)) *CloudMigrationServiceApi_CreateLinkToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.TargetOrgRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CreateLinkToken_Call) Return(_a0 admin.CreateLinkTokenApiRequest) *CloudMigrationServiceApi_CreateLinkToken_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_CreateLinkToken_Call) RunAndReturn(run func(context.Context, string, *admin.TargetOrgRequest) admin.CreateLinkTokenApiRequest) *CloudMigrationServiceApi_CreateLinkToken_Call {
	_c.Call.Return(run)
	return _c
}

// CreateLinkTokenExecute provides a mock function with given fields: r
func (_m *CloudMigrationServiceApi) CreateLinkTokenExecute(r admin.CreateLinkTokenApiRequest) (*admin.TargetOrg, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateLinkTokenExecute")
	}

	var r0 *admin.TargetOrg
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateLinkTokenApiRequest) (*admin.TargetOrg, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateLinkTokenApiRequest) *admin.TargetOrg); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.TargetOrg)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateLinkTokenApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateLinkTokenApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// CloudMigrationServiceApi_CreateLinkTokenExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateLinkTokenExecute'
type CloudMigrationServiceApi_CreateLinkTokenExecute_Call struct {
	*mock.Call
}

// CreateLinkTokenExecute is a helper method to define mock.On call
//   - r admin.CreateLinkTokenApiRequest
func (_e *CloudMigrationServiceApi_Expecter) CreateLinkTokenExecute(r any) *CloudMigrationServiceApi_CreateLinkTokenExecute_Call {
	return &CloudMigrationServiceApi_CreateLinkTokenExecute_Call{Call: _e.mock.On("CreateLinkTokenExecute", r)}
}

func (_c *CloudMigrationServiceApi_CreateLinkTokenExecute_Call) Run(run func(r admin.CreateLinkTokenApiRequest)) *CloudMigrationServiceApi_CreateLinkTokenExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateLinkTokenApiRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CreateLinkTokenExecute_Call) Return(_a0 *admin.TargetOrg, _a1 *http.Response, _a2 error) *CloudMigrationServiceApi_CreateLinkTokenExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *CloudMigrationServiceApi_CreateLinkTokenExecute_Call) RunAndReturn(run func(admin.CreateLinkTokenApiRequest) (*admin.TargetOrg, *http.Response, error)) *CloudMigrationServiceApi_CreateLinkTokenExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateLinkTokenWithParams provides a mock function with given fields: ctx, args
func (_m *CloudMigrationServiceApi) CreateLinkTokenWithParams(ctx context.Context, args *admin.CreateLinkTokenApiParams) admin.CreateLinkTokenApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateLinkTokenWithParams")
	}

	var r0 admin.CreateLinkTokenApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateLinkTokenApiParams) admin.CreateLinkTokenApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateLinkTokenApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_CreateLinkTokenWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateLinkTokenWithParams'
type CloudMigrationServiceApi_CreateLinkTokenWithParams_Call struct {
	*mock.Call
}

// CreateLinkTokenWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateLinkTokenApiParams
func (_e *CloudMigrationServiceApi_Expecter) CreateLinkTokenWithParams(ctx any, args any) *CloudMigrationServiceApi_CreateLinkTokenWithParams_Call {
	return &CloudMigrationServiceApi_CreateLinkTokenWithParams_Call{Call: _e.mock.On("CreateLinkTokenWithParams", ctx, args)}
}

func (_c *CloudMigrationServiceApi_CreateLinkTokenWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateLinkTokenApiParams)) *CloudMigrationServiceApi_CreateLinkTokenWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateLinkTokenApiParams))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CreateLinkTokenWithParams_Call) Return(_a0 admin.CreateLinkTokenApiRequest) *CloudMigrationServiceApi_CreateLinkTokenWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_CreateLinkTokenWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateLinkTokenApiParams) admin.CreateLinkTokenApiRequest) *CloudMigrationServiceApi_CreateLinkTokenWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// CutoverMigration provides a mock function with given fields: ctx, groupId, liveMigrationId
func (_m *CloudMigrationServiceApi) CutoverMigration(ctx context.Context, groupId string, liveMigrationId string) admin.CutoverMigrationApiRequest {
	ret := _m.Called(ctx, groupId, liveMigrationId)

	if len(ret) == 0 {
		panic("no return value specified for CutoverMigration")
	}

	var r0 admin.CutoverMigrationApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.CutoverMigrationApiRequest); ok {
		r0 = rf(ctx, groupId, liveMigrationId)
	} else {
		r0 = ret.Get(0).(admin.CutoverMigrationApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_CutoverMigration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CutoverMigration'
type CloudMigrationServiceApi_CutoverMigration_Call struct {
	*mock.Call
}

// CutoverMigration is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - liveMigrationId string
func (_e *CloudMigrationServiceApi_Expecter) CutoverMigration(ctx any, groupId any, liveMigrationId any) *CloudMigrationServiceApi_CutoverMigration_Call {
	return &CloudMigrationServiceApi_CutoverMigration_Call{Call: _e.mock.On("CutoverMigration", ctx, groupId, liveMigrationId)}
}

func (_c *CloudMigrationServiceApi_CutoverMigration_Call) Run(run func(ctx context.Context, groupId string, liveMigrationId string)) *CloudMigrationServiceApi_CutoverMigration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CutoverMigration_Call) Return(_a0 admin.CutoverMigrationApiRequest) *CloudMigrationServiceApi_CutoverMigration_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_CutoverMigration_Call) RunAndReturn(run func(context.Context, string, string) admin.CutoverMigrationApiRequest) *CloudMigrationServiceApi_CutoverMigration_Call {
	_c.Call.Return(run)
	return _c
}

// CutoverMigrationExecute provides a mock function with given fields: r
func (_m *CloudMigrationServiceApi) CutoverMigrationExecute(r admin.CutoverMigrationApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CutoverMigrationExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.CutoverMigrationApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CutoverMigrationApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CutoverMigrationApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CloudMigrationServiceApi_CutoverMigrationExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CutoverMigrationExecute'
type CloudMigrationServiceApi_CutoverMigrationExecute_Call struct {
	*mock.Call
}

// CutoverMigrationExecute is a helper method to define mock.On call
//   - r admin.CutoverMigrationApiRequest
func (_e *CloudMigrationServiceApi_Expecter) CutoverMigrationExecute(r any) *CloudMigrationServiceApi_CutoverMigrationExecute_Call {
	return &CloudMigrationServiceApi_CutoverMigrationExecute_Call{Call: _e.mock.On("CutoverMigrationExecute", r)}
}

func (_c *CloudMigrationServiceApi_CutoverMigrationExecute_Call) Run(run func(r admin.CutoverMigrationApiRequest)) *CloudMigrationServiceApi_CutoverMigrationExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CutoverMigrationApiRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CutoverMigrationExecute_Call) Return(_a0 *http.Response, _a1 error) *CloudMigrationServiceApi_CutoverMigrationExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *CloudMigrationServiceApi_CutoverMigrationExecute_Call) RunAndReturn(run func(admin.CutoverMigrationApiRequest) (*http.Response, error)) *CloudMigrationServiceApi_CutoverMigrationExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CutoverMigrationWithParams provides a mock function with given fields: ctx, args
func (_m *CloudMigrationServiceApi) CutoverMigrationWithParams(ctx context.Context, args *admin.CutoverMigrationApiParams) admin.CutoverMigrationApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CutoverMigrationWithParams")
	}

	var r0 admin.CutoverMigrationApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CutoverMigrationApiParams) admin.CutoverMigrationApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CutoverMigrationApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_CutoverMigrationWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CutoverMigrationWithParams'
type CloudMigrationServiceApi_CutoverMigrationWithParams_Call struct {
	*mock.Call
}

// CutoverMigrationWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CutoverMigrationApiParams
func (_e *CloudMigrationServiceApi_Expecter) CutoverMigrationWithParams(ctx any, args any) *CloudMigrationServiceApi_CutoverMigrationWithParams_Call {
	return &CloudMigrationServiceApi_CutoverMigrationWithParams_Call{Call: _e.mock.On("CutoverMigrationWithParams", ctx, args)}
}

func (_c *CloudMigrationServiceApi_CutoverMigrationWithParams_Call) Run(run func(ctx context.Context, args *admin.CutoverMigrationApiParams)) *CloudMigrationServiceApi_CutoverMigrationWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CutoverMigrationApiParams))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_CutoverMigrationWithParams_Call) Return(_a0 admin.CutoverMigrationApiRequest) *CloudMigrationServiceApi_CutoverMigrationWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_CutoverMigrationWithParams_Call) RunAndReturn(run func(context.Context, *admin.CutoverMigrationApiParams) admin.CutoverMigrationApiRequest) *CloudMigrationServiceApi_CutoverMigrationWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteLinkTokens provides a mock function with given fields: ctx, orgId
func (_m *CloudMigrationServiceApi) DeleteLinkTokens(ctx context.Context, orgId string) admin.DeleteLinkTokensApiRequest {
	ret := _m.Called(ctx, orgId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteLinkTokens")
	}

	var r0 admin.DeleteLinkTokensApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string) admin.DeleteLinkTokensApiRequest); ok {
		r0 = rf(ctx, orgId)
	} else {
		r0 = ret.Get(0).(admin.DeleteLinkTokensApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_DeleteLinkTokens_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteLinkTokens'
type CloudMigrationServiceApi_DeleteLinkTokens_Call struct {
	*mock.Call
}

// DeleteLinkTokens is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
func (_e *CloudMigrationServiceApi_Expecter) DeleteLinkTokens(ctx any, orgId any) *CloudMigrationServiceApi_DeleteLinkTokens_Call {
	return &CloudMigrationServiceApi_DeleteLinkTokens_Call{Call: _e.mock.On("DeleteLinkTokens", ctx, orgId)}
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokens_Call) Run(run func(ctx context.Context, orgId string)) *CloudMigrationServiceApi_DeleteLinkTokens_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokens_Call) Return(_a0 admin.DeleteLinkTokensApiRequest) *CloudMigrationServiceApi_DeleteLinkTokens_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokens_Call) RunAndReturn(run func(context.Context, string) admin.DeleteLinkTokensApiRequest) *CloudMigrationServiceApi_DeleteLinkTokens_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteLinkTokensExecute provides a mock function with given fields: r
func (_m *CloudMigrationServiceApi) DeleteLinkTokensExecute(r admin.DeleteLinkTokensApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for DeleteLinkTokensExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.DeleteLinkTokensApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.DeleteLinkTokensApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.DeleteLinkTokensApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CloudMigrationServiceApi_DeleteLinkTokensExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteLinkTokensExecute'
type CloudMigrationServiceApi_DeleteLinkTokensExecute_Call struct {
	*mock.Call
}

// DeleteLinkTokensExecute is a helper method to define mock.On call
//   - r admin.DeleteLinkTokensApiRequest
func (_e *CloudMigrationServiceApi_Expecter) DeleteLinkTokensExecute(r any) *CloudMigrationServiceApi_DeleteLinkTokensExecute_Call {
	return &CloudMigrationServiceApi_DeleteLinkTokensExecute_Call{Call: _e.mock.On("DeleteLinkTokensExecute", r)}
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokensExecute_Call) Run(run func(r admin.DeleteLinkTokensApiRequest)) *CloudMigrationServiceApi_DeleteLinkTokensExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.DeleteLinkTokensApiRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokensExecute_Call) Return(_a0 *http.Response, _a1 error) *CloudMigrationServiceApi_DeleteLinkTokensExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokensExecute_Call) RunAndReturn(run func(admin.DeleteLinkTokensApiRequest) (*http.Response, error)) *CloudMigrationServiceApi_DeleteLinkTokensExecute_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteLinkTokensWithParams provides a mock function with given fields: ctx, args
func (_m *CloudMigrationServiceApi) DeleteLinkTokensWithParams(ctx context.Context, args *admin.DeleteLinkTokensApiParams) admin.DeleteLinkTokensApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for DeleteLinkTokensWithParams")
	}

	var r0 admin.DeleteLinkTokensApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.DeleteLinkTokensApiParams) admin.DeleteLinkTokensApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.DeleteLinkTokensApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteLinkTokensWithParams'
type CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call struct {
	*mock.Call
}

// DeleteLinkTokensWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.DeleteLinkTokensApiParams
func (_e *CloudMigrationServiceApi_Expecter) DeleteLinkTokensWithParams(ctx any, args any) *CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call {
	return &CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call{Call: _e.mock.On("DeleteLinkTokensWithParams", ctx, args)}
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call) Run(run func(ctx context.Context, args *admin.DeleteLinkTokensApiParams)) *CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.DeleteLinkTokensApiParams))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call) Return(_a0 admin.DeleteLinkTokensApiRequest) *CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call) RunAndReturn(run func(context.Context, *admin.DeleteLinkTokensApiParams) admin.DeleteLinkTokensApiRequest) *CloudMigrationServiceApi_DeleteLinkTokensWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetGroupLiveMigration provides a mock function with given fields: ctx, groupId, liveMigrationId
func (_m *CloudMigrationServiceApi) GetGroupLiveMigration(ctx context.Context, groupId string, liveMigrationId string) admin.GetGroupLiveMigrationApiRequest {
	ret := _m.Called(ctx, groupId, liveMigrationId)

	if len(ret) == 0 {
		panic("no return value specified for GetGroupLiveMigration")
	}

	var r0 admin.GetGroupLiveMigrationApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.GetGroupLiveMigrationApiRequest); ok {
		r0 = rf(ctx, groupId, liveMigrationId)
	} else {
		r0 = ret.Get(0).(admin.GetGroupLiveMigrationApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_GetGroupLiveMigration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGroupLiveMigration'
type CloudMigrationServiceApi_GetGroupLiveMigration_Call struct {
	*mock.Call
}

// GetGroupLiveMigration is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - liveMigrationId string
func (_e *CloudMigrationServiceApi_Expecter) GetGroupLiveMigration(ctx any, groupId any, liveMigrationId any) *CloudMigrationServiceApi_GetGroupLiveMigration_Call {
	return &CloudMigrationServiceApi_GetGroupLiveMigration_Call{Call: _e.mock.On("GetGroupLiveMigration", ctx, groupId, liveMigrationId)}
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigration_Call) Run(run func(ctx context.Context, groupId string, liveMigrationId string)) *CloudMigrationServiceApi_GetGroupLiveMigration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigration_Call) Return(_a0 admin.GetGroupLiveMigrationApiRequest) *CloudMigrationServiceApi_GetGroupLiveMigration_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigration_Call) RunAndReturn(run func(context.Context, string, string) admin.GetGroupLiveMigrationApiRequest) *CloudMigrationServiceApi_GetGroupLiveMigration_Call {
	_c.Call.Return(run)
	return _c
}

// GetGroupLiveMigrationExecute provides a mock function with given fields: r
func (_m *CloudMigrationServiceApi) GetGroupLiveMigrationExecute(r admin.GetGroupLiveMigrationApiRequest) (*admin.LiveMigrationResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetGroupLiveMigrationExecute")
	}

	var r0 *admin.LiveMigrationResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetGroupLiveMigrationApiRequest) (*admin.LiveMigrationResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetGroupLiveMigrationApiRequest) *admin.LiveMigrationResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.LiveMigrationResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetGroupLiveMigrationApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetGroupLiveMigrationApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGroupLiveMigrationExecute'
type CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call struct {
	*mock.Call
}

// GetGroupLiveMigrationExecute is a helper method to define mock.On call
//   - r admin.GetGroupLiveMigrationApiRequest
func (_e *CloudMigrationServiceApi_Expecter) GetGroupLiveMigrationExecute(r any) *CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call {
	return &CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call{Call: _e.mock.On("GetGroupLiveMigrationExecute", r)}
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call) Run(run func(r admin.GetGroupLiveMigrationApiRequest)) *CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetGroupLiveMigrationApiRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call) Return(_a0 *admin.LiveMigrationResponse, _a1 *http.Response, _a2 error) *CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call) RunAndReturn(run func(admin.GetGroupLiveMigrationApiRequest) (*admin.LiveMigrationResponse, *http.Response, error)) *CloudMigrationServiceApi_GetGroupLiveMigrationExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetGroupLiveMigrationWithParams provides a mock function with given fields: ctx, args
func (_m *CloudMigrationServiceApi) GetGroupLiveMigrationWithParams(ctx context.Context, args *admin.GetGroupLiveMigrationApiParams) admin.GetGroupLiveMigrationApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetGroupLiveMigrationWithParams")
	}

	var r0 admin.GetGroupLiveMigrationApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetGroupLiveMigrationApiParams) admin.GetGroupLiveMigrationApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetGroupLiveMigrationApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGroupLiveMigrationWithParams'
type CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call struct {
	*mock.Call
}

// GetGroupLiveMigrationWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetGroupLiveMigrationApiParams
func (_e *CloudMigrationServiceApi_Expecter) GetGroupLiveMigrationWithParams(ctx any, args any) *CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call {
	return &CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call{Call: _e.mock.On("GetGroupLiveMigrationWithParams", ctx, args)}
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call) Run(run func(ctx context.Context, args *admin.GetGroupLiveMigrationApiParams)) *CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetGroupLiveMigrationApiParams))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call) Return(_a0 admin.GetGroupLiveMigrationApiRequest) *CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetGroupLiveMigrationApiParams) admin.GetGroupLiveMigrationApiRequest) *CloudMigrationServiceApi_GetGroupLiveMigrationWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetMigrationValidateStatus provides a mock function with given fields: ctx, groupId, validationId
func (_m *CloudMigrationServiceApi) GetMigrationValidateStatus(ctx context.Context, groupId string, validationId string) admin.GetMigrationValidateStatusApiRequest {
	ret := _m.Called(ctx, groupId, validationId)

	if len(ret) == 0 {
		panic("no return value specified for GetMigrationValidateStatus")
	}

	var r0 admin.GetMigrationValidateStatusApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.GetMigrationValidateStatusApiRequest); ok {
		r0 = rf(ctx, groupId, validationId)
	} else {
		r0 = ret.Get(0).(admin.GetMigrationValidateStatusApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_GetMigrationValidateStatus_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMigrationValidateStatus'
type CloudMigrationServiceApi_GetMigrationValidateStatus_Call struct {
	*mock.Call
}

// GetMigrationValidateStatus is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - validationId string
func (_e *CloudMigrationServiceApi_Expecter) GetMigrationValidateStatus(ctx any, groupId any, validationId any) *CloudMigrationServiceApi_GetMigrationValidateStatus_Call {
	return &CloudMigrationServiceApi_GetMigrationValidateStatus_Call{Call: _e.mock.On("GetMigrationValidateStatus", ctx, groupId, validationId)}
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatus_Call) Run(run func(ctx context.Context, groupId string, validationId string)) *CloudMigrationServiceApi_GetMigrationValidateStatus_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatus_Call) Return(_a0 admin.GetMigrationValidateStatusApiRequest) *CloudMigrationServiceApi_GetMigrationValidateStatus_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatus_Call) RunAndReturn(run func(context.Context, string, string) admin.GetMigrationValidateStatusApiRequest) *CloudMigrationServiceApi_GetMigrationValidateStatus_Call {
	_c.Call.Return(run)
	return _c
}

// GetMigrationValidateStatusExecute provides a mock function with given fields: r
func (_m *CloudMigrationServiceApi) GetMigrationValidateStatusExecute(r admin.GetMigrationValidateStatusApiRequest) (*admin.LiveImportValidation, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetMigrationValidateStatusExecute")
	}

	var r0 *admin.LiveImportValidation
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetMigrationValidateStatusApiRequest) (*admin.LiveImportValidation, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetMigrationValidateStatusApiRequest) *admin.LiveImportValidation); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.LiveImportValidation)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetMigrationValidateStatusApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetMigrationValidateStatusApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMigrationValidateStatusExecute'
type CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call struct {
	*mock.Call
}

// GetMigrationValidateStatusExecute is a helper method to define mock.On call
//   - r admin.GetMigrationValidateStatusApiRequest
func (_e *CloudMigrationServiceApi_Expecter) GetMigrationValidateStatusExecute(r any) *CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call {
	return &CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call{Call: _e.mock.On("GetMigrationValidateStatusExecute", r)}
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call) Run(run func(r admin.GetMigrationValidateStatusApiRequest)) *CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetMigrationValidateStatusApiRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call) Return(_a0 *admin.LiveImportValidation, _a1 *http.Response, _a2 error) *CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call) RunAndReturn(run func(admin.GetMigrationValidateStatusApiRequest) (*admin.LiveImportValidation, *http.Response, error)) *CloudMigrationServiceApi_GetMigrationValidateStatusExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetMigrationValidateStatusWithParams provides a mock function with given fields: ctx, args
func (_m *CloudMigrationServiceApi) GetMigrationValidateStatusWithParams(ctx context.Context, args *admin.GetMigrationValidateStatusApiParams) admin.GetMigrationValidateStatusApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetMigrationValidateStatusWithParams")
	}

	var r0 admin.GetMigrationValidateStatusApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetMigrationValidateStatusApiParams) admin.GetMigrationValidateStatusApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetMigrationValidateStatusApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMigrationValidateStatusWithParams'
type CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call struct {
	*mock.Call
}

// GetMigrationValidateStatusWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetMigrationValidateStatusApiParams
func (_e *CloudMigrationServiceApi_Expecter) GetMigrationValidateStatusWithParams(ctx any, args any) *CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call {
	return &CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call{Call: _e.mock.On("GetMigrationValidateStatusWithParams", ctx, args)}
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call) Run(run func(ctx context.Context, args *admin.GetMigrationValidateStatusApiParams)) *CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetMigrationValidateStatusApiParams))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call) Return(_a0 admin.GetMigrationValidateStatusApiRequest) *CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetMigrationValidateStatusApiParams) admin.GetMigrationValidateStatusApiRequest) *CloudMigrationServiceApi_GetMigrationValidateStatusWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListAvailableProjects provides a mock function with given fields: ctx, orgId
func (_m *CloudMigrationServiceApi) ListAvailableProjects(ctx context.Context, orgId string) admin.ListAvailableProjectsApiRequest {
	ret := _m.Called(ctx, orgId)

	if len(ret) == 0 {
		panic("no return value specified for ListAvailableProjects")
	}

	var r0 admin.ListAvailableProjectsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string) admin.ListAvailableProjectsApiRequest); ok {
		r0 = rf(ctx, orgId)
	} else {
		r0 = ret.Get(0).(admin.ListAvailableProjectsApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_ListAvailableProjects_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListAvailableProjects'
type CloudMigrationServiceApi_ListAvailableProjects_Call struct {
	*mock.Call
}

// ListAvailableProjects is a helper method to define mock.On call
//   - ctx context.Context
//   - orgId string
func (_e *CloudMigrationServiceApi_Expecter) ListAvailableProjects(ctx any, orgId any) *CloudMigrationServiceApi_ListAvailableProjects_Call {
	return &CloudMigrationServiceApi_ListAvailableProjects_Call{Call: _e.mock.On("ListAvailableProjects", ctx, orgId)}
}

func (_c *CloudMigrationServiceApi_ListAvailableProjects_Call) Run(run func(ctx context.Context, orgId string)) *CloudMigrationServiceApi_ListAvailableProjects_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_ListAvailableProjects_Call) Return(_a0 admin.ListAvailableProjectsApiRequest) *CloudMigrationServiceApi_ListAvailableProjects_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_ListAvailableProjects_Call) RunAndReturn(run func(context.Context, string) admin.ListAvailableProjectsApiRequest) *CloudMigrationServiceApi_ListAvailableProjects_Call {
	_c.Call.Return(run)
	return _c
}

// ListAvailableProjectsExecute provides a mock function with given fields: r
func (_m *CloudMigrationServiceApi) ListAvailableProjectsExecute(r admin.ListAvailableProjectsApiRequest) ([]admin.LiveImportAvailableProject, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListAvailableProjectsExecute")
	}

	var r0 []admin.LiveImportAvailableProject
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListAvailableProjectsApiRequest) ([]admin.LiveImportAvailableProject, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListAvailableProjectsApiRequest) []admin.LiveImportAvailableProject); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]admin.LiveImportAvailableProject)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListAvailableProjectsApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListAvailableProjectsApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// CloudMigrationServiceApi_ListAvailableProjectsExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListAvailableProjectsExecute'
type CloudMigrationServiceApi_ListAvailableProjectsExecute_Call struct {
	*mock.Call
}

// ListAvailableProjectsExecute is a helper method to define mock.On call
//   - r admin.ListAvailableProjectsApiRequest
func (_e *CloudMigrationServiceApi_Expecter) ListAvailableProjectsExecute(r any) *CloudMigrationServiceApi_ListAvailableProjectsExecute_Call {
	return &CloudMigrationServiceApi_ListAvailableProjectsExecute_Call{Call: _e.mock.On("ListAvailableProjectsExecute", r)}
}

func (_c *CloudMigrationServiceApi_ListAvailableProjectsExecute_Call) Run(run func(r admin.ListAvailableProjectsApiRequest)) *CloudMigrationServiceApi_ListAvailableProjectsExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListAvailableProjectsApiRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_ListAvailableProjectsExecute_Call) Return(_a0 []admin.LiveImportAvailableProject, _a1 *http.Response, _a2 error) *CloudMigrationServiceApi_ListAvailableProjectsExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *CloudMigrationServiceApi_ListAvailableProjectsExecute_Call) RunAndReturn(run func(admin.ListAvailableProjectsApiRequest) ([]admin.LiveImportAvailableProject, *http.Response, error)) *CloudMigrationServiceApi_ListAvailableProjectsExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListAvailableProjectsWithParams provides a mock function with given fields: ctx, args
func (_m *CloudMigrationServiceApi) ListAvailableProjectsWithParams(ctx context.Context, args *admin.ListAvailableProjectsApiParams) admin.ListAvailableProjectsApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListAvailableProjectsWithParams")
	}

	var r0 admin.ListAvailableProjectsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListAvailableProjectsApiParams) admin.ListAvailableProjectsApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListAvailableProjectsApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListAvailableProjectsWithParams'
type CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call struct {
	*mock.Call
}

// ListAvailableProjectsWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListAvailableProjectsApiParams
func (_e *CloudMigrationServiceApi_Expecter) ListAvailableProjectsWithParams(ctx any, args any) *CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call {
	return &CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call{Call: _e.mock.On("ListAvailableProjectsWithParams", ctx, args)}
}

func (_c *CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call) Run(run func(ctx context.Context, args *admin.ListAvailableProjectsApiParams)) *CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListAvailableProjectsApiParams))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call) Return(_a0 admin.ListAvailableProjectsApiRequest) *CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListAvailableProjectsApiParams) admin.ListAvailableProjectsApiRequest) *CloudMigrationServiceApi_ListAvailableProjectsWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ValidateLiveMigrations provides a mock function with given fields: ctx, groupId, liveMigrationRequest20240530
func (_m *CloudMigrationServiceApi) ValidateLiveMigrations(ctx context.Context, groupId string, liveMigrationRequest20240530 *admin.LiveMigrationRequest20240530) admin.ValidateLiveMigrationsApiRequest {
	ret := _m.Called(ctx, groupId, liveMigrationRequest20240530)

	if len(ret) == 0 {
		panic("no return value specified for ValidateLiveMigrations")
	}

	var r0 admin.ValidateLiveMigrationsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.LiveMigrationRequest20240530) admin.ValidateLiveMigrationsApiRequest); ok {
		r0 = rf(ctx, groupId, liveMigrationRequest20240530)
	} else {
		r0 = ret.Get(0).(admin.ValidateLiveMigrationsApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_ValidateLiveMigrations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateLiveMigrations'
type CloudMigrationServiceApi_ValidateLiveMigrations_Call struct {
	*mock.Call
}

// ValidateLiveMigrations is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - liveMigrationRequest20240530 *admin.LiveMigrationRequest20240530
func (_e *CloudMigrationServiceApi_Expecter) ValidateLiveMigrations(ctx any, groupId any, liveMigrationRequest20240530 any) *CloudMigrationServiceApi_ValidateLiveMigrations_Call {
	return &CloudMigrationServiceApi_ValidateLiveMigrations_Call{Call: _e.mock.On("ValidateLiveMigrations", ctx, groupId, liveMigrationRequest20240530)}
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrations_Call) Run(run func(ctx context.Context, groupId string, liveMigrationRequest20240530 *admin.LiveMigrationRequest20240530)) *CloudMigrationServiceApi_ValidateLiveMigrations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.LiveMigrationRequest20240530))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrations_Call) Return(_a0 admin.ValidateLiveMigrationsApiRequest) *CloudMigrationServiceApi_ValidateLiveMigrations_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrations_Call) RunAndReturn(run func(context.Context, string, *admin.LiveMigrationRequest20240530) admin.ValidateLiveMigrationsApiRequest) *CloudMigrationServiceApi_ValidateLiveMigrations_Call {
	_c.Call.Return(run)
	return _c
}

// ValidateLiveMigrationsExecute provides a mock function with given fields: r
func (_m *CloudMigrationServiceApi) ValidateLiveMigrationsExecute(r admin.ValidateLiveMigrationsApiRequest) (*admin.LiveImportValidation, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ValidateLiveMigrationsExecute")
	}

	var r0 *admin.LiveImportValidation
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ValidateLiveMigrationsApiRequest) (*admin.LiveImportValidation, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ValidateLiveMigrationsApiRequest) *admin.LiveImportValidation); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.LiveImportValidation)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ValidateLiveMigrationsApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ValidateLiveMigrationsApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateLiveMigrationsExecute'
type CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call struct {
	*mock.Call
}

// ValidateLiveMigrationsExecute is a helper method to define mock.On call
//   - r admin.ValidateLiveMigrationsApiRequest
func (_e *CloudMigrationServiceApi_Expecter) ValidateLiveMigrationsExecute(r any) *CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call {
	return &CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call{Call: _e.mock.On("ValidateLiveMigrationsExecute", r)}
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call) Run(run func(r admin.ValidateLiveMigrationsApiRequest)) *CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ValidateLiveMigrationsApiRequest))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call) Return(_a0 *admin.LiveImportValidation, _a1 *http.Response, _a2 error) *CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call) RunAndReturn(run func(admin.ValidateLiveMigrationsApiRequest) (*admin.LiveImportValidation, *http.Response, error)) *CloudMigrationServiceApi_ValidateLiveMigrationsExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ValidateLiveMigrationsWithParams provides a mock function with given fields: ctx, args
func (_m *CloudMigrationServiceApi) ValidateLiveMigrationsWithParams(ctx context.Context, args *admin.ValidateLiveMigrationsApiParams) admin.ValidateLiveMigrationsApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ValidateLiveMigrationsWithParams")
	}

	var r0 admin.ValidateLiveMigrationsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ValidateLiveMigrationsApiParams) admin.ValidateLiveMigrationsApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ValidateLiveMigrationsApiRequest)
	}

	return r0
}

// CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateLiveMigrationsWithParams'
type CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call struct {
	*mock.Call
}

// ValidateLiveMigrationsWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ValidateLiveMigrationsApiParams
func (_e *CloudMigrationServiceApi_Expecter) ValidateLiveMigrationsWithParams(ctx any, args any) *CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call {
	return &CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call{Call: _e.mock.On("ValidateLiveMigrationsWithParams", ctx, args)}
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call) Run(run func(ctx context.Context, args *admin.ValidateLiveMigrationsApiParams)) *CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ValidateLiveMigrationsApiParams))
	})
	return _c
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call) Return(_a0 admin.ValidateLiveMigrationsApiRequest) *CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call) RunAndReturn(run func(context.Context, *admin.ValidateLiveMigrationsApiParams) admin.ValidateLiveMigrationsApiRequest) *CloudMigrationServiceApi_ValidateLiveMigrationsWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewCloudMigrationServiceApi creates a new instance of CloudMigrationServiceApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCloudMigrationServiceApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *CloudMigrationServiceApi {
	mock := &CloudMigrationServiceApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
