// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20250312001/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// GlobalClustersApi is an autogenerated mock type for the GlobalClustersApi type
type GlobalClustersApi struct {
	mock.Mock
}

type GlobalClustersApi_Expecter struct {
	mock *mock.Mock
}

func (_m *GlobalClustersApi) EXPECT() *GlobalClustersApi_Expecter {
	return &GlobalClustersApi_Expecter{mock: &_m.Mock}
}

// CreateCustomZoneMapping provides a mock function with given fields: ctx, groupId, clusterName, customZoneMappings
func (_m *GlobalClustersApi) CreateCustomZoneMapping(ctx context.Context, groupId string, clusterName string, customZoneMappings *admin.CustomZoneMappings) admin.CreateCustomZoneMappingApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, customZoneMappings)

	if len(ret) == 0 {
		panic("no return value specified for CreateCustomZoneMapping")
	}

	var r0 admin.CreateCustomZoneMappingApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.CustomZoneMappings) admin.CreateCustomZoneMappingApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, customZoneMappings)
	} else {
		r0 = ret.Get(0).(admin.CreateCustomZoneMappingApiRequest)
	}

	return r0
}

// GlobalClustersApi_CreateCustomZoneMapping_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateCustomZoneMapping'
type GlobalClustersApi_CreateCustomZoneMapping_Call struct {
	*mock.Call
}

// CreateCustomZoneMapping is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - customZoneMappings *admin.CustomZoneMappings
func (_e *GlobalClustersApi_Expecter) CreateCustomZoneMapping(ctx any, groupId any, clusterName any, customZoneMappings any) *GlobalClustersApi_CreateCustomZoneMapping_Call {
	return &GlobalClustersApi_CreateCustomZoneMapping_Call{Call: _e.mock.On("CreateCustomZoneMapping", ctx, groupId, clusterName, customZoneMappings)}
}

func (_c *GlobalClustersApi_CreateCustomZoneMapping_Call) Run(run func(ctx context.Context, groupId string, clusterName string, customZoneMappings *admin.CustomZoneMappings)) *GlobalClustersApi_CreateCustomZoneMapping_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.CustomZoneMappings))
	})
	return _c
}

func (_c *GlobalClustersApi_CreateCustomZoneMapping_Call) Return(_a0 admin.CreateCustomZoneMappingApiRequest) *GlobalClustersApi_CreateCustomZoneMapping_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_CreateCustomZoneMapping_Call) RunAndReturn(run func(context.Context, string, string, *admin.CustomZoneMappings) admin.CreateCustomZoneMappingApiRequest) *GlobalClustersApi_CreateCustomZoneMapping_Call {
	_c.Call.Return(run)
	return _c
}

// CreateCustomZoneMappingExecute provides a mock function with given fields: r
func (_m *GlobalClustersApi) CreateCustomZoneMappingExecute(r admin.CreateCustomZoneMappingApiRequest) (*admin.GeoSharding20240805, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateCustomZoneMappingExecute")
	}

	var r0 *admin.GeoSharding20240805
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateCustomZoneMappingApiRequest) (*admin.GeoSharding20240805, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateCustomZoneMappingApiRequest) *admin.GeoSharding20240805); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.GeoSharding20240805)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateCustomZoneMappingApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateCustomZoneMappingApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GlobalClustersApi_CreateCustomZoneMappingExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateCustomZoneMappingExecute'
type GlobalClustersApi_CreateCustomZoneMappingExecute_Call struct {
	*mock.Call
}

// CreateCustomZoneMappingExecute is a helper method to define mock.On call
//   - r admin.CreateCustomZoneMappingApiRequest
func (_e *GlobalClustersApi_Expecter) CreateCustomZoneMappingExecute(r any) *GlobalClustersApi_CreateCustomZoneMappingExecute_Call {
	return &GlobalClustersApi_CreateCustomZoneMappingExecute_Call{Call: _e.mock.On("CreateCustomZoneMappingExecute", r)}
}

func (_c *GlobalClustersApi_CreateCustomZoneMappingExecute_Call) Run(run func(r admin.CreateCustomZoneMappingApiRequest)) *GlobalClustersApi_CreateCustomZoneMappingExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateCustomZoneMappingApiRequest))
	})
	return _c
}

func (_c *GlobalClustersApi_CreateCustomZoneMappingExecute_Call) Return(_a0 *admin.GeoSharding20240805, _a1 *http.Response, _a2 error) *GlobalClustersApi_CreateCustomZoneMappingExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *GlobalClustersApi_CreateCustomZoneMappingExecute_Call) RunAndReturn(run func(admin.CreateCustomZoneMappingApiRequest) (*admin.GeoSharding20240805, *http.Response, error)) *GlobalClustersApi_CreateCustomZoneMappingExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateCustomZoneMappingWithParams provides a mock function with given fields: ctx, args
func (_m *GlobalClustersApi) CreateCustomZoneMappingWithParams(ctx context.Context, args *admin.CreateCustomZoneMappingApiParams) admin.CreateCustomZoneMappingApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateCustomZoneMappingWithParams")
	}

	var r0 admin.CreateCustomZoneMappingApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateCustomZoneMappingApiParams) admin.CreateCustomZoneMappingApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateCustomZoneMappingApiRequest)
	}

	return r0
}

// GlobalClustersApi_CreateCustomZoneMappingWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateCustomZoneMappingWithParams'
type GlobalClustersApi_CreateCustomZoneMappingWithParams_Call struct {
	*mock.Call
}

// CreateCustomZoneMappingWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateCustomZoneMappingApiParams
func (_e *GlobalClustersApi_Expecter) CreateCustomZoneMappingWithParams(ctx any, args any) *GlobalClustersApi_CreateCustomZoneMappingWithParams_Call {
	return &GlobalClustersApi_CreateCustomZoneMappingWithParams_Call{Call: _e.mock.On("CreateCustomZoneMappingWithParams", ctx, args)}
}

func (_c *GlobalClustersApi_CreateCustomZoneMappingWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateCustomZoneMappingApiParams)) *GlobalClustersApi_CreateCustomZoneMappingWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateCustomZoneMappingApiParams))
	})
	return _c
}

func (_c *GlobalClustersApi_CreateCustomZoneMappingWithParams_Call) Return(_a0 admin.CreateCustomZoneMappingApiRequest) *GlobalClustersApi_CreateCustomZoneMappingWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_CreateCustomZoneMappingWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateCustomZoneMappingApiParams) admin.CreateCustomZoneMappingApiRequest) *GlobalClustersApi_CreateCustomZoneMappingWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// CreateManagedNamespace provides a mock function with given fields: ctx, groupId, clusterName, managedNamespaces
func (_m *GlobalClustersApi) CreateManagedNamespace(ctx context.Context, groupId string, clusterName string, managedNamespaces *admin.ManagedNamespaces) admin.CreateManagedNamespaceApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, managedNamespaces)

	if len(ret) == 0 {
		panic("no return value specified for CreateManagedNamespace")
	}

	var r0 admin.CreateManagedNamespaceApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.ManagedNamespaces) admin.CreateManagedNamespaceApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, managedNamespaces)
	} else {
		r0 = ret.Get(0).(admin.CreateManagedNamespaceApiRequest)
	}

	return r0
}

// GlobalClustersApi_CreateManagedNamespace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateManagedNamespace'
type GlobalClustersApi_CreateManagedNamespace_Call struct {
	*mock.Call
}

// CreateManagedNamespace is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - managedNamespaces *admin.ManagedNamespaces
func (_e *GlobalClustersApi_Expecter) CreateManagedNamespace(ctx any, groupId any, clusterName any, managedNamespaces any) *GlobalClustersApi_CreateManagedNamespace_Call {
	return &GlobalClustersApi_CreateManagedNamespace_Call{Call: _e.mock.On("CreateManagedNamespace", ctx, groupId, clusterName, managedNamespaces)}
}

func (_c *GlobalClustersApi_CreateManagedNamespace_Call) Run(run func(ctx context.Context, groupId string, clusterName string, managedNamespaces *admin.ManagedNamespaces)) *GlobalClustersApi_CreateManagedNamespace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.ManagedNamespaces))
	})
	return _c
}

func (_c *GlobalClustersApi_CreateManagedNamespace_Call) Return(_a0 admin.CreateManagedNamespaceApiRequest) *GlobalClustersApi_CreateManagedNamespace_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_CreateManagedNamespace_Call) RunAndReturn(run func(context.Context, string, string, *admin.ManagedNamespaces) admin.CreateManagedNamespaceApiRequest) *GlobalClustersApi_CreateManagedNamespace_Call {
	_c.Call.Return(run)
	return _c
}

// CreateManagedNamespaceExecute provides a mock function with given fields: r
func (_m *GlobalClustersApi) CreateManagedNamespaceExecute(r admin.CreateManagedNamespaceApiRequest) (*admin.GeoSharding20240805, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateManagedNamespaceExecute")
	}

	var r0 *admin.GeoSharding20240805
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateManagedNamespaceApiRequest) (*admin.GeoSharding20240805, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateManagedNamespaceApiRequest) *admin.GeoSharding20240805); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.GeoSharding20240805)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateManagedNamespaceApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateManagedNamespaceApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GlobalClustersApi_CreateManagedNamespaceExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateManagedNamespaceExecute'
type GlobalClustersApi_CreateManagedNamespaceExecute_Call struct {
	*mock.Call
}

// CreateManagedNamespaceExecute is a helper method to define mock.On call
//   - r admin.CreateManagedNamespaceApiRequest
func (_e *GlobalClustersApi_Expecter) CreateManagedNamespaceExecute(r any) *GlobalClustersApi_CreateManagedNamespaceExecute_Call {
	return &GlobalClustersApi_CreateManagedNamespaceExecute_Call{Call: _e.mock.On("CreateManagedNamespaceExecute", r)}
}

func (_c *GlobalClustersApi_CreateManagedNamespaceExecute_Call) Run(run func(r admin.CreateManagedNamespaceApiRequest)) *GlobalClustersApi_CreateManagedNamespaceExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateManagedNamespaceApiRequest))
	})
	return _c
}

func (_c *GlobalClustersApi_CreateManagedNamespaceExecute_Call) Return(_a0 *admin.GeoSharding20240805, _a1 *http.Response, _a2 error) *GlobalClustersApi_CreateManagedNamespaceExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *GlobalClustersApi_CreateManagedNamespaceExecute_Call) RunAndReturn(run func(admin.CreateManagedNamespaceApiRequest) (*admin.GeoSharding20240805, *http.Response, error)) *GlobalClustersApi_CreateManagedNamespaceExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateManagedNamespaceWithParams provides a mock function with given fields: ctx, args
func (_m *GlobalClustersApi) CreateManagedNamespaceWithParams(ctx context.Context, args *admin.CreateManagedNamespaceApiParams) admin.CreateManagedNamespaceApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateManagedNamespaceWithParams")
	}

	var r0 admin.CreateManagedNamespaceApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateManagedNamespaceApiParams) admin.CreateManagedNamespaceApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateManagedNamespaceApiRequest)
	}

	return r0
}

// GlobalClustersApi_CreateManagedNamespaceWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateManagedNamespaceWithParams'
type GlobalClustersApi_CreateManagedNamespaceWithParams_Call struct {
	*mock.Call
}

// CreateManagedNamespaceWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateManagedNamespaceApiParams
func (_e *GlobalClustersApi_Expecter) CreateManagedNamespaceWithParams(ctx any, args any) *GlobalClustersApi_CreateManagedNamespaceWithParams_Call {
	return &GlobalClustersApi_CreateManagedNamespaceWithParams_Call{Call: _e.mock.On("CreateManagedNamespaceWithParams", ctx, args)}
}

func (_c *GlobalClustersApi_CreateManagedNamespaceWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateManagedNamespaceApiParams)) *GlobalClustersApi_CreateManagedNamespaceWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateManagedNamespaceApiParams))
	})
	return _c
}

func (_c *GlobalClustersApi_CreateManagedNamespaceWithParams_Call) Return(_a0 admin.CreateManagedNamespaceApiRequest) *GlobalClustersApi_CreateManagedNamespaceWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_CreateManagedNamespaceWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateManagedNamespaceApiParams) admin.CreateManagedNamespaceApiRequest) *GlobalClustersApi_CreateManagedNamespaceWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteCustomZoneMapping provides a mock function with given fields: ctx, groupId, clusterName
func (_m *GlobalClustersApi) DeleteCustomZoneMapping(ctx context.Context, groupId string, clusterName string) admin.DeleteCustomZoneMappingApiRequest {
	ret := _m.Called(ctx, groupId, clusterName)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCustomZoneMapping")
	}

	var r0 admin.DeleteCustomZoneMappingApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.DeleteCustomZoneMappingApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName)
	} else {
		r0 = ret.Get(0).(admin.DeleteCustomZoneMappingApiRequest)
	}

	return r0
}

// GlobalClustersApi_DeleteCustomZoneMapping_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteCustomZoneMapping'
type GlobalClustersApi_DeleteCustomZoneMapping_Call struct {
	*mock.Call
}

// DeleteCustomZoneMapping is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
func (_e *GlobalClustersApi_Expecter) DeleteCustomZoneMapping(ctx any, groupId any, clusterName any) *GlobalClustersApi_DeleteCustomZoneMapping_Call {
	return &GlobalClustersApi_DeleteCustomZoneMapping_Call{Call: _e.mock.On("DeleteCustomZoneMapping", ctx, groupId, clusterName)}
}

func (_c *GlobalClustersApi_DeleteCustomZoneMapping_Call) Run(run func(ctx context.Context, groupId string, clusterName string)) *GlobalClustersApi_DeleteCustomZoneMapping_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *GlobalClustersApi_DeleteCustomZoneMapping_Call) Return(_a0 admin.DeleteCustomZoneMappingApiRequest) *GlobalClustersApi_DeleteCustomZoneMapping_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_DeleteCustomZoneMapping_Call) RunAndReturn(run func(context.Context, string, string) admin.DeleteCustomZoneMappingApiRequest) *GlobalClustersApi_DeleteCustomZoneMapping_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteCustomZoneMappingExecute provides a mock function with given fields: r
func (_m *GlobalClustersApi) DeleteCustomZoneMappingExecute(r admin.DeleteCustomZoneMappingApiRequest) (*admin.GeoSharding20240805, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCustomZoneMappingExecute")
	}

	var r0 *admin.GeoSharding20240805
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.DeleteCustomZoneMappingApiRequest) (*admin.GeoSharding20240805, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.DeleteCustomZoneMappingApiRequest) *admin.GeoSharding20240805); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.GeoSharding20240805)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.DeleteCustomZoneMappingApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.DeleteCustomZoneMappingApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GlobalClustersApi_DeleteCustomZoneMappingExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteCustomZoneMappingExecute'
type GlobalClustersApi_DeleteCustomZoneMappingExecute_Call struct {
	*mock.Call
}

// DeleteCustomZoneMappingExecute is a helper method to define mock.On call
//   - r admin.DeleteCustomZoneMappingApiRequest
func (_e *GlobalClustersApi_Expecter) DeleteCustomZoneMappingExecute(r any) *GlobalClustersApi_DeleteCustomZoneMappingExecute_Call {
	return &GlobalClustersApi_DeleteCustomZoneMappingExecute_Call{Call: _e.mock.On("DeleteCustomZoneMappingExecute", r)}
}

func (_c *GlobalClustersApi_DeleteCustomZoneMappingExecute_Call) Run(run func(r admin.DeleteCustomZoneMappingApiRequest)) *GlobalClustersApi_DeleteCustomZoneMappingExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.DeleteCustomZoneMappingApiRequest))
	})
	return _c
}

func (_c *GlobalClustersApi_DeleteCustomZoneMappingExecute_Call) Return(_a0 *admin.GeoSharding20240805, _a1 *http.Response, _a2 error) *GlobalClustersApi_DeleteCustomZoneMappingExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *GlobalClustersApi_DeleteCustomZoneMappingExecute_Call) RunAndReturn(run func(admin.DeleteCustomZoneMappingApiRequest) (*admin.GeoSharding20240805, *http.Response, error)) *GlobalClustersApi_DeleteCustomZoneMappingExecute_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteCustomZoneMappingWithParams provides a mock function with given fields: ctx, args
func (_m *GlobalClustersApi) DeleteCustomZoneMappingWithParams(ctx context.Context, args *admin.DeleteCustomZoneMappingApiParams) admin.DeleteCustomZoneMappingApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCustomZoneMappingWithParams")
	}

	var r0 admin.DeleteCustomZoneMappingApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.DeleteCustomZoneMappingApiParams) admin.DeleteCustomZoneMappingApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.DeleteCustomZoneMappingApiRequest)
	}

	return r0
}

// GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteCustomZoneMappingWithParams'
type GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call struct {
	*mock.Call
}

// DeleteCustomZoneMappingWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.DeleteCustomZoneMappingApiParams
func (_e *GlobalClustersApi_Expecter) DeleteCustomZoneMappingWithParams(ctx any, args any) *GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call {
	return &GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call{Call: _e.mock.On("DeleteCustomZoneMappingWithParams", ctx, args)}
}

func (_c *GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call) Run(run func(ctx context.Context, args *admin.DeleteCustomZoneMappingApiParams)) *GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.DeleteCustomZoneMappingApiParams))
	})
	return _c
}

func (_c *GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call) Return(_a0 admin.DeleteCustomZoneMappingApiRequest) *GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call) RunAndReturn(run func(context.Context, *admin.DeleteCustomZoneMappingApiParams) admin.DeleteCustomZoneMappingApiRequest) *GlobalClustersApi_DeleteCustomZoneMappingWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteManagedNamespaces provides a mock function with given fields: ctx, clusterName, groupId
func (_m *GlobalClustersApi) DeleteManagedNamespaces(ctx context.Context, clusterName string, groupId string) admin.DeleteManagedNamespacesApiRequest {
	ret := _m.Called(ctx, clusterName, groupId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteManagedNamespaces")
	}

	var r0 admin.DeleteManagedNamespacesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.DeleteManagedNamespacesApiRequest); ok {
		r0 = rf(ctx, clusterName, groupId)
	} else {
		r0 = ret.Get(0).(admin.DeleteManagedNamespacesApiRequest)
	}

	return r0
}

// GlobalClustersApi_DeleteManagedNamespaces_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteManagedNamespaces'
type GlobalClustersApi_DeleteManagedNamespaces_Call struct {
	*mock.Call
}

// DeleteManagedNamespaces is a helper method to define mock.On call
//   - ctx context.Context
//   - clusterName string
//   - groupId string
func (_e *GlobalClustersApi_Expecter) DeleteManagedNamespaces(ctx any, clusterName any, groupId any) *GlobalClustersApi_DeleteManagedNamespaces_Call {
	return &GlobalClustersApi_DeleteManagedNamespaces_Call{Call: _e.mock.On("DeleteManagedNamespaces", ctx, clusterName, groupId)}
}

func (_c *GlobalClustersApi_DeleteManagedNamespaces_Call) Run(run func(ctx context.Context, clusterName string, groupId string)) *GlobalClustersApi_DeleteManagedNamespaces_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *GlobalClustersApi_DeleteManagedNamespaces_Call) Return(_a0 admin.DeleteManagedNamespacesApiRequest) *GlobalClustersApi_DeleteManagedNamespaces_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_DeleteManagedNamespaces_Call) RunAndReturn(run func(context.Context, string, string) admin.DeleteManagedNamespacesApiRequest) *GlobalClustersApi_DeleteManagedNamespaces_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteManagedNamespacesExecute provides a mock function with given fields: r
func (_m *GlobalClustersApi) DeleteManagedNamespacesExecute(r admin.DeleteManagedNamespacesApiRequest) (*admin.GeoSharding20240805, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for DeleteManagedNamespacesExecute")
	}

	var r0 *admin.GeoSharding20240805
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.DeleteManagedNamespacesApiRequest) (*admin.GeoSharding20240805, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.DeleteManagedNamespacesApiRequest) *admin.GeoSharding20240805); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.GeoSharding20240805)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.DeleteManagedNamespacesApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.DeleteManagedNamespacesApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GlobalClustersApi_DeleteManagedNamespacesExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteManagedNamespacesExecute'
type GlobalClustersApi_DeleteManagedNamespacesExecute_Call struct {
	*mock.Call
}

// DeleteManagedNamespacesExecute is a helper method to define mock.On call
//   - r admin.DeleteManagedNamespacesApiRequest
func (_e *GlobalClustersApi_Expecter) DeleteManagedNamespacesExecute(r any) *GlobalClustersApi_DeleteManagedNamespacesExecute_Call {
	return &GlobalClustersApi_DeleteManagedNamespacesExecute_Call{Call: _e.mock.On("DeleteManagedNamespacesExecute", r)}
}

func (_c *GlobalClustersApi_DeleteManagedNamespacesExecute_Call) Run(run func(r admin.DeleteManagedNamespacesApiRequest)) *GlobalClustersApi_DeleteManagedNamespacesExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.DeleteManagedNamespacesApiRequest))
	})
	return _c
}

func (_c *GlobalClustersApi_DeleteManagedNamespacesExecute_Call) Return(_a0 *admin.GeoSharding20240805, _a1 *http.Response, _a2 error) *GlobalClustersApi_DeleteManagedNamespacesExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *GlobalClustersApi_DeleteManagedNamespacesExecute_Call) RunAndReturn(run func(admin.DeleteManagedNamespacesApiRequest) (*admin.GeoSharding20240805, *http.Response, error)) *GlobalClustersApi_DeleteManagedNamespacesExecute_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteManagedNamespacesWithParams provides a mock function with given fields: ctx, args
func (_m *GlobalClustersApi) DeleteManagedNamespacesWithParams(ctx context.Context, args *admin.DeleteManagedNamespacesApiParams) admin.DeleteManagedNamespacesApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for DeleteManagedNamespacesWithParams")
	}

	var r0 admin.DeleteManagedNamespacesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.DeleteManagedNamespacesApiParams) admin.DeleteManagedNamespacesApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.DeleteManagedNamespacesApiRequest)
	}

	return r0
}

// GlobalClustersApi_DeleteManagedNamespacesWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteManagedNamespacesWithParams'
type GlobalClustersApi_DeleteManagedNamespacesWithParams_Call struct {
	*mock.Call
}

// DeleteManagedNamespacesWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.DeleteManagedNamespacesApiParams
func (_e *GlobalClustersApi_Expecter) DeleteManagedNamespacesWithParams(ctx any, args any) *GlobalClustersApi_DeleteManagedNamespacesWithParams_Call {
	return &GlobalClustersApi_DeleteManagedNamespacesWithParams_Call{Call: _e.mock.On("DeleteManagedNamespacesWithParams", ctx, args)}
}

func (_c *GlobalClustersApi_DeleteManagedNamespacesWithParams_Call) Run(run func(ctx context.Context, args *admin.DeleteManagedNamespacesApiParams)) *GlobalClustersApi_DeleteManagedNamespacesWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.DeleteManagedNamespacesApiParams))
	})
	return _c
}

func (_c *GlobalClustersApi_DeleteManagedNamespacesWithParams_Call) Return(_a0 admin.DeleteManagedNamespacesApiRequest) *GlobalClustersApi_DeleteManagedNamespacesWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_DeleteManagedNamespacesWithParams_Call) RunAndReturn(run func(context.Context, *admin.DeleteManagedNamespacesApiParams) admin.DeleteManagedNamespacesApiRequest) *GlobalClustersApi_DeleteManagedNamespacesWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetClusterGlobalWrites provides a mock function with given fields: ctx, groupId, clusterName
func (_m *GlobalClustersApi) GetClusterGlobalWrites(ctx context.Context, groupId string, clusterName string) admin.GetClusterGlobalWritesApiRequest {
	ret := _m.Called(ctx, groupId, clusterName)

	if len(ret) == 0 {
		panic("no return value specified for GetClusterGlobalWrites")
	}

	var r0 admin.GetClusterGlobalWritesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.GetClusterGlobalWritesApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName)
	} else {
		r0 = ret.Get(0).(admin.GetClusterGlobalWritesApiRequest)
	}

	return r0
}

// GlobalClustersApi_GetClusterGlobalWrites_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetClusterGlobalWrites'
type GlobalClustersApi_GetClusterGlobalWrites_Call struct {
	*mock.Call
}

// GetClusterGlobalWrites is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
func (_e *GlobalClustersApi_Expecter) GetClusterGlobalWrites(ctx any, groupId any, clusterName any) *GlobalClustersApi_GetClusterGlobalWrites_Call {
	return &GlobalClustersApi_GetClusterGlobalWrites_Call{Call: _e.mock.On("GetClusterGlobalWrites", ctx, groupId, clusterName)}
}

func (_c *GlobalClustersApi_GetClusterGlobalWrites_Call) Run(run func(ctx context.Context, groupId string, clusterName string)) *GlobalClustersApi_GetClusterGlobalWrites_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *GlobalClustersApi_GetClusterGlobalWrites_Call) Return(_a0 admin.GetClusterGlobalWritesApiRequest) *GlobalClustersApi_GetClusterGlobalWrites_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_GetClusterGlobalWrites_Call) RunAndReturn(run func(context.Context, string, string) admin.GetClusterGlobalWritesApiRequest) *GlobalClustersApi_GetClusterGlobalWrites_Call {
	_c.Call.Return(run)
	return _c
}

// GetClusterGlobalWritesExecute provides a mock function with given fields: r
func (_m *GlobalClustersApi) GetClusterGlobalWritesExecute(r admin.GetClusterGlobalWritesApiRequest) (*admin.GeoSharding20240805, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetClusterGlobalWritesExecute")
	}

	var r0 *admin.GeoSharding20240805
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetClusterGlobalWritesApiRequest) (*admin.GeoSharding20240805, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetClusterGlobalWritesApiRequest) *admin.GeoSharding20240805); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.GeoSharding20240805)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetClusterGlobalWritesApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetClusterGlobalWritesApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GlobalClustersApi_GetClusterGlobalWritesExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetClusterGlobalWritesExecute'
type GlobalClustersApi_GetClusterGlobalWritesExecute_Call struct {
	*mock.Call
}

// GetClusterGlobalWritesExecute is a helper method to define mock.On call
//   - r admin.GetClusterGlobalWritesApiRequest
func (_e *GlobalClustersApi_Expecter) GetClusterGlobalWritesExecute(r any) *GlobalClustersApi_GetClusterGlobalWritesExecute_Call {
	return &GlobalClustersApi_GetClusterGlobalWritesExecute_Call{Call: _e.mock.On("GetClusterGlobalWritesExecute", r)}
}

func (_c *GlobalClustersApi_GetClusterGlobalWritesExecute_Call) Run(run func(r admin.GetClusterGlobalWritesApiRequest)) *GlobalClustersApi_GetClusterGlobalWritesExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetClusterGlobalWritesApiRequest))
	})
	return _c
}

func (_c *GlobalClustersApi_GetClusterGlobalWritesExecute_Call) Return(_a0 *admin.GeoSharding20240805, _a1 *http.Response, _a2 error) *GlobalClustersApi_GetClusterGlobalWritesExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *GlobalClustersApi_GetClusterGlobalWritesExecute_Call) RunAndReturn(run func(admin.GetClusterGlobalWritesApiRequest) (*admin.GeoSharding20240805, *http.Response, error)) *GlobalClustersApi_GetClusterGlobalWritesExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetClusterGlobalWritesWithParams provides a mock function with given fields: ctx, args
func (_m *GlobalClustersApi) GetClusterGlobalWritesWithParams(ctx context.Context, args *admin.GetClusterGlobalWritesApiParams) admin.GetClusterGlobalWritesApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetClusterGlobalWritesWithParams")
	}

	var r0 admin.GetClusterGlobalWritesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetClusterGlobalWritesApiParams) admin.GetClusterGlobalWritesApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetClusterGlobalWritesApiRequest)
	}

	return r0
}

// GlobalClustersApi_GetClusterGlobalWritesWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetClusterGlobalWritesWithParams'
type GlobalClustersApi_GetClusterGlobalWritesWithParams_Call struct {
	*mock.Call
}

// GetClusterGlobalWritesWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetClusterGlobalWritesApiParams
func (_e *GlobalClustersApi_Expecter) GetClusterGlobalWritesWithParams(ctx any, args any) *GlobalClustersApi_GetClusterGlobalWritesWithParams_Call {
	return &GlobalClustersApi_GetClusterGlobalWritesWithParams_Call{Call: _e.mock.On("GetClusterGlobalWritesWithParams", ctx, args)}
}

func (_c *GlobalClustersApi_GetClusterGlobalWritesWithParams_Call) Run(run func(ctx context.Context, args *admin.GetClusterGlobalWritesApiParams)) *GlobalClustersApi_GetClusterGlobalWritesWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetClusterGlobalWritesApiParams))
	})
	return _c
}

func (_c *GlobalClustersApi_GetClusterGlobalWritesWithParams_Call) Return(_a0 admin.GetClusterGlobalWritesApiRequest) *GlobalClustersApi_GetClusterGlobalWritesWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *GlobalClustersApi_GetClusterGlobalWritesWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetClusterGlobalWritesApiParams) admin.GetClusterGlobalWritesApiRequest) *GlobalClustersApi_GetClusterGlobalWritesWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewGlobalClustersApi creates a new instance of GlobalClustersApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGlobalClustersApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *GlobalClustersApi {
	mock := &GlobalClustersApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
