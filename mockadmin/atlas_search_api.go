// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20231115014/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// AtlasSearchApi is an autogenerated mock type for the AtlasSearchApi type
type AtlasSearchApi struct {
	mock.Mock
}

type AtlasSearchApi_Expecter struct {
	mock *mock.Mock
}

func (_m *AtlasSearchApi) EXPECT() *AtlasSearchApi_Expecter {
	return &AtlasSearchApi_Expecter{mock: &_m.Mock}
}

// CreateAtlasSearchDeployment provides a mock function with given fields: ctx, groupId, clusterName, apiSearchDeploymentRequest
func (_m *AtlasSearchApi) CreateAtlasSearchDeployment(ctx context.Context, groupId string, clusterName string, apiSearchDeploymentRequest *admin.ApiSearchDeploymentRequest) admin.CreateAtlasSearchDeploymentApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, apiSearchDeploymentRequest)

	if len(ret) == 0 {
		panic("no return value specified for CreateAtlasSearchDeployment")
	}

	var r0 admin.CreateAtlasSearchDeploymentApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.ApiSearchDeploymentRequest) admin.CreateAtlasSearchDeploymentApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, apiSearchDeploymentRequest)
	} else {
		r0 = ret.Get(0).(admin.CreateAtlasSearchDeploymentApiRequest)
	}

	return r0
}

// AtlasSearchApi_CreateAtlasSearchDeployment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateAtlasSearchDeployment'
type AtlasSearchApi_CreateAtlasSearchDeployment_Call struct {
	*mock.Call
}

// CreateAtlasSearchDeployment is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - apiSearchDeploymentRequest *admin.ApiSearchDeploymentRequest
func (_e *AtlasSearchApi_Expecter) CreateAtlasSearchDeployment(ctx any, groupId any, clusterName any, apiSearchDeploymentRequest any) *AtlasSearchApi_CreateAtlasSearchDeployment_Call {
	return &AtlasSearchApi_CreateAtlasSearchDeployment_Call{Call: _e.mock.On("CreateAtlasSearchDeployment", ctx, groupId, clusterName, apiSearchDeploymentRequest)}
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeployment_Call) Run(run func(ctx context.Context, groupId string, clusterName string, apiSearchDeploymentRequest *admin.ApiSearchDeploymentRequest)) *AtlasSearchApi_CreateAtlasSearchDeployment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.ApiSearchDeploymentRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeployment_Call) Return(_a0 admin.CreateAtlasSearchDeploymentApiRequest) *AtlasSearchApi_CreateAtlasSearchDeployment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeployment_Call) RunAndReturn(run func(context.Context, string, string, *admin.ApiSearchDeploymentRequest) admin.CreateAtlasSearchDeploymentApiRequest) *AtlasSearchApi_CreateAtlasSearchDeployment_Call {
	_c.Call.Return(run)
	return _c
}

// CreateAtlasSearchDeploymentExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) CreateAtlasSearchDeploymentExecute(r admin.CreateAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateAtlasSearchDeploymentExecute")
	}

	var r0 *admin.ApiSearchDeploymentResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateAtlasSearchDeploymentApiRequest) *admin.ApiSearchDeploymentResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiSearchDeploymentResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateAtlasSearchDeploymentApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateAtlasSearchDeploymentApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateAtlasSearchDeploymentExecute'
type AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call struct {
	*mock.Call
}

// CreateAtlasSearchDeploymentExecute is a helper method to define mock.On call
//   - r admin.CreateAtlasSearchDeploymentApiRequest
func (_e *AtlasSearchApi_Expecter) CreateAtlasSearchDeploymentExecute(r any) *AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call {
	return &AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call{Call: _e.mock.On("CreateAtlasSearchDeploymentExecute", r)}
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call) Run(run func(r admin.CreateAtlasSearchDeploymentApiRequest)) *AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateAtlasSearchDeploymentApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call) Return(_a0 *admin.ApiSearchDeploymentResponse, _a1 *http.Response, _a2 error) *AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call) RunAndReturn(run func(admin.CreateAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error)) *AtlasSearchApi_CreateAtlasSearchDeploymentExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateAtlasSearchDeploymentWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) CreateAtlasSearchDeploymentWithParams(ctx context.Context, args *admin.CreateAtlasSearchDeploymentApiParams) admin.CreateAtlasSearchDeploymentApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateAtlasSearchDeploymentWithParams")
	}

	var r0 admin.CreateAtlasSearchDeploymentApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateAtlasSearchDeploymentApiParams) admin.CreateAtlasSearchDeploymentApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateAtlasSearchDeploymentApiRequest)
	}

	return r0
}

// AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateAtlasSearchDeploymentWithParams'
type AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call struct {
	*mock.Call
}

// CreateAtlasSearchDeploymentWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateAtlasSearchDeploymentApiParams
func (_e *AtlasSearchApi_Expecter) CreateAtlasSearchDeploymentWithParams(ctx any, args any) *AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call {
	return &AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call{Call: _e.mock.On("CreateAtlasSearchDeploymentWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateAtlasSearchDeploymentApiParams)) *AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateAtlasSearchDeploymentApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call) Return(_a0 admin.CreateAtlasSearchDeploymentApiRequest) *AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateAtlasSearchDeploymentApiParams) admin.CreateAtlasSearchDeploymentApiRequest) *AtlasSearchApi_CreateAtlasSearchDeploymentWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// CreateAtlasSearchIndexDeprecated provides a mock function with given fields: ctx, groupId, clusterName, clusterSearchIndex
func (_m *AtlasSearchApi) CreateAtlasSearchIndexDeprecated(ctx context.Context, groupId string, clusterName string, clusterSearchIndex *admin.ClusterSearchIndex) admin.CreateAtlasSearchIndexDeprecatedApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, clusterSearchIndex)

	if len(ret) == 0 {
		panic("no return value specified for CreateAtlasSearchIndexDeprecated")
	}

	var r0 admin.CreateAtlasSearchIndexDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.ClusterSearchIndex) admin.CreateAtlasSearchIndexDeprecatedApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, clusterSearchIndex)
	} else {
		r0 = ret.Get(0).(admin.CreateAtlasSearchIndexDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateAtlasSearchIndexDeprecated'
type AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call struct {
	*mock.Call
}

// CreateAtlasSearchIndexDeprecated is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - clusterSearchIndex *admin.ClusterSearchIndex
func (_e *AtlasSearchApi_Expecter) CreateAtlasSearchIndexDeprecated(ctx any, groupId any, clusterName any, clusterSearchIndex any) *AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call {
	return &AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call{Call: _e.mock.On("CreateAtlasSearchIndexDeprecated", ctx, groupId, clusterName, clusterSearchIndex)}
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call) Run(run func(ctx context.Context, groupId string, clusterName string, clusterSearchIndex *admin.ClusterSearchIndex)) *AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.ClusterSearchIndex))
	})
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call) Return(_a0 admin.CreateAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call) RunAndReturn(run func(context.Context, string, string, *admin.ClusterSearchIndex) admin.CreateAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_CreateAtlasSearchIndexDeprecated_Call {
	_c.Call.Return(run)
	return _c
}

// CreateAtlasSearchIndexDeprecatedExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) CreateAtlasSearchIndexDeprecatedExecute(r admin.CreateAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateAtlasSearchIndexDeprecatedExecute")
	}

	var r0 *admin.ClusterSearchIndex
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateAtlasSearchIndexDeprecatedApiRequest) *admin.ClusterSearchIndex); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ClusterSearchIndex)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateAtlasSearchIndexDeprecatedApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateAtlasSearchIndexDeprecatedApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateAtlasSearchIndexDeprecatedExecute'
type AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call struct {
	*mock.Call
}

// CreateAtlasSearchIndexDeprecatedExecute is a helper method to define mock.On call
//   - r admin.CreateAtlasSearchIndexDeprecatedApiRequest
func (_e *AtlasSearchApi_Expecter) CreateAtlasSearchIndexDeprecatedExecute(r any) *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call {
	return &AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call{Call: _e.mock.On("CreateAtlasSearchIndexDeprecatedExecute", r)}
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call) Run(run func(r admin.CreateAtlasSearchIndexDeprecatedApiRequest)) *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateAtlasSearchIndexDeprecatedApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call) Return(_a0 *admin.ClusterSearchIndex, _a1 *http.Response, _a2 error) *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call) RunAndReturn(run func(admin.CreateAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error)) *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateAtlasSearchIndexDeprecatedWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) CreateAtlasSearchIndexDeprecatedWithParams(ctx context.Context, args *admin.CreateAtlasSearchIndexDeprecatedApiParams) admin.CreateAtlasSearchIndexDeprecatedApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateAtlasSearchIndexDeprecatedWithParams")
	}

	var r0 admin.CreateAtlasSearchIndexDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateAtlasSearchIndexDeprecatedApiParams) admin.CreateAtlasSearchIndexDeprecatedApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateAtlasSearchIndexDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateAtlasSearchIndexDeprecatedWithParams'
type AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call struct {
	*mock.Call
}

// CreateAtlasSearchIndexDeprecatedWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateAtlasSearchIndexDeprecatedApiParams
func (_e *AtlasSearchApi_Expecter) CreateAtlasSearchIndexDeprecatedWithParams(ctx any, args any) *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call {
	return &AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call{Call: _e.mock.On("CreateAtlasSearchIndexDeprecatedWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateAtlasSearchIndexDeprecatedApiParams)) *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateAtlasSearchIndexDeprecatedApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call) Return(_a0 admin.CreateAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateAtlasSearchIndexDeprecatedApiParams) admin.CreateAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_CreateAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAtlasSearchDeployment provides a mock function with given fields: ctx, groupId, clusterName
func (_m *AtlasSearchApi) DeleteAtlasSearchDeployment(ctx context.Context, groupId string, clusterName string) admin.DeleteAtlasSearchDeploymentApiRequest {
	ret := _m.Called(ctx, groupId, clusterName)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAtlasSearchDeployment")
	}

	var r0 admin.DeleteAtlasSearchDeploymentApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.DeleteAtlasSearchDeploymentApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName)
	} else {
		r0 = ret.Get(0).(admin.DeleteAtlasSearchDeploymentApiRequest)
	}

	return r0
}

// AtlasSearchApi_DeleteAtlasSearchDeployment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAtlasSearchDeployment'
type AtlasSearchApi_DeleteAtlasSearchDeployment_Call struct {
	*mock.Call
}

// DeleteAtlasSearchDeployment is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
func (_e *AtlasSearchApi_Expecter) DeleteAtlasSearchDeployment(ctx any, groupId any, clusterName any) *AtlasSearchApi_DeleteAtlasSearchDeployment_Call {
	return &AtlasSearchApi_DeleteAtlasSearchDeployment_Call{Call: _e.mock.On("DeleteAtlasSearchDeployment", ctx, groupId, clusterName)}
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeployment_Call) Run(run func(ctx context.Context, groupId string, clusterName string)) *AtlasSearchApi_DeleteAtlasSearchDeployment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeployment_Call) Return(_a0 admin.DeleteAtlasSearchDeploymentApiRequest) *AtlasSearchApi_DeleteAtlasSearchDeployment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeployment_Call) RunAndReturn(run func(context.Context, string, string) admin.DeleteAtlasSearchDeploymentApiRequest) *AtlasSearchApi_DeleteAtlasSearchDeployment_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAtlasSearchDeploymentExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) DeleteAtlasSearchDeploymentExecute(r admin.DeleteAtlasSearchDeploymentApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAtlasSearchDeploymentExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.DeleteAtlasSearchDeploymentApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.DeleteAtlasSearchDeploymentApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.DeleteAtlasSearchDeploymentApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAtlasSearchDeploymentExecute'
type AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call struct {
	*mock.Call
}

// DeleteAtlasSearchDeploymentExecute is a helper method to define mock.On call
//   - r admin.DeleteAtlasSearchDeploymentApiRequest
func (_e *AtlasSearchApi_Expecter) DeleteAtlasSearchDeploymentExecute(r any) *AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call {
	return &AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call{Call: _e.mock.On("DeleteAtlasSearchDeploymentExecute", r)}
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call) Run(run func(r admin.DeleteAtlasSearchDeploymentApiRequest)) *AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.DeleteAtlasSearchDeploymentApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call) Return(_a0 *http.Response, _a1 error) *AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call) RunAndReturn(run func(admin.DeleteAtlasSearchDeploymentApiRequest) (*http.Response, error)) *AtlasSearchApi_DeleteAtlasSearchDeploymentExecute_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAtlasSearchDeploymentWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) DeleteAtlasSearchDeploymentWithParams(ctx context.Context, args *admin.DeleteAtlasSearchDeploymentApiParams) admin.DeleteAtlasSearchDeploymentApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAtlasSearchDeploymentWithParams")
	}

	var r0 admin.DeleteAtlasSearchDeploymentApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.DeleteAtlasSearchDeploymentApiParams) admin.DeleteAtlasSearchDeploymentApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.DeleteAtlasSearchDeploymentApiRequest)
	}

	return r0
}

// AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAtlasSearchDeploymentWithParams'
type AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call struct {
	*mock.Call
}

// DeleteAtlasSearchDeploymentWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.DeleteAtlasSearchDeploymentApiParams
func (_e *AtlasSearchApi_Expecter) DeleteAtlasSearchDeploymentWithParams(ctx any, args any) *AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call {
	return &AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call{Call: _e.mock.On("DeleteAtlasSearchDeploymentWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call) Run(run func(ctx context.Context, args *admin.DeleteAtlasSearchDeploymentApiParams)) *AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.DeleteAtlasSearchDeploymentApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call) Return(_a0 admin.DeleteAtlasSearchDeploymentApiRequest) *AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call) RunAndReturn(run func(context.Context, *admin.DeleteAtlasSearchDeploymentApiParams) admin.DeleteAtlasSearchDeploymentApiRequest) *AtlasSearchApi_DeleteAtlasSearchDeploymentWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAtlasSearchIndexDeprecated provides a mock function with given fields: ctx, groupId, clusterName, indexId
func (_m *AtlasSearchApi) DeleteAtlasSearchIndexDeprecated(ctx context.Context, groupId string, clusterName string, indexId string) admin.DeleteAtlasSearchIndexDeprecatedApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, indexId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAtlasSearchIndexDeprecated")
	}

	var r0 admin.DeleteAtlasSearchIndexDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.DeleteAtlasSearchIndexDeprecatedApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, indexId)
	} else {
		r0 = ret.Get(0).(admin.DeleteAtlasSearchIndexDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAtlasSearchIndexDeprecated'
type AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call struct {
	*mock.Call
}

// DeleteAtlasSearchIndexDeprecated is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - indexId string
func (_e *AtlasSearchApi_Expecter) DeleteAtlasSearchIndexDeprecated(ctx any, groupId any, clusterName any, indexId any) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call {
	return &AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call{Call: _e.mock.On("DeleteAtlasSearchIndexDeprecated", ctx, groupId, clusterName, indexId)}
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call) Run(run func(ctx context.Context, groupId string, clusterName string, indexId string)) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call) Return(_a0 admin.DeleteAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call) RunAndReturn(run func(context.Context, string, string, string) admin.DeleteAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecated_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAtlasSearchIndexDeprecatedExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) DeleteAtlasSearchIndexDeprecatedExecute(r admin.DeleteAtlasSearchIndexDeprecatedApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAtlasSearchIndexDeprecatedExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.DeleteAtlasSearchIndexDeprecatedApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.DeleteAtlasSearchIndexDeprecatedApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.DeleteAtlasSearchIndexDeprecatedApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAtlasSearchIndexDeprecatedExecute'
type AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call struct {
	*mock.Call
}

// DeleteAtlasSearchIndexDeprecatedExecute is a helper method to define mock.On call
//   - r admin.DeleteAtlasSearchIndexDeprecatedApiRequest
func (_e *AtlasSearchApi_Expecter) DeleteAtlasSearchIndexDeprecatedExecute(r any) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call {
	return &AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call{Call: _e.mock.On("DeleteAtlasSearchIndexDeprecatedExecute", r)}
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call) Run(run func(r admin.DeleteAtlasSearchIndexDeprecatedApiRequest)) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.DeleteAtlasSearchIndexDeprecatedApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call) Return(_a0 *http.Response, _a1 error) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call) RunAndReturn(run func(admin.DeleteAtlasSearchIndexDeprecatedApiRequest) (*http.Response, error)) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAtlasSearchIndexDeprecatedWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) DeleteAtlasSearchIndexDeprecatedWithParams(ctx context.Context, args *admin.DeleteAtlasSearchIndexDeprecatedApiParams) admin.DeleteAtlasSearchIndexDeprecatedApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAtlasSearchIndexDeprecatedWithParams")
	}

	var r0 admin.DeleteAtlasSearchIndexDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.DeleteAtlasSearchIndexDeprecatedApiParams) admin.DeleteAtlasSearchIndexDeprecatedApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.DeleteAtlasSearchIndexDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAtlasSearchIndexDeprecatedWithParams'
type AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call struct {
	*mock.Call
}

// DeleteAtlasSearchIndexDeprecatedWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.DeleteAtlasSearchIndexDeprecatedApiParams
func (_e *AtlasSearchApi_Expecter) DeleteAtlasSearchIndexDeprecatedWithParams(ctx any, args any) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call {
	return &AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call{Call: _e.mock.On("DeleteAtlasSearchIndexDeprecatedWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call) Run(run func(ctx context.Context, args *admin.DeleteAtlasSearchIndexDeprecatedApiParams)) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.DeleteAtlasSearchIndexDeprecatedApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call) Return(_a0 admin.DeleteAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call) RunAndReturn(run func(context.Context, *admin.DeleteAtlasSearchIndexDeprecatedApiParams) admin.DeleteAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_DeleteAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetAtlasSearchDeployment provides a mock function with given fields: ctx, groupId, clusterName
func (_m *AtlasSearchApi) GetAtlasSearchDeployment(ctx context.Context, groupId string, clusterName string) admin.GetAtlasSearchDeploymentApiRequest {
	ret := _m.Called(ctx, groupId, clusterName)

	if len(ret) == 0 {
		panic("no return value specified for GetAtlasSearchDeployment")
	}

	var r0 admin.GetAtlasSearchDeploymentApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.GetAtlasSearchDeploymentApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName)
	} else {
		r0 = ret.Get(0).(admin.GetAtlasSearchDeploymentApiRequest)
	}

	return r0
}

// AtlasSearchApi_GetAtlasSearchDeployment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAtlasSearchDeployment'
type AtlasSearchApi_GetAtlasSearchDeployment_Call struct {
	*mock.Call
}

// GetAtlasSearchDeployment is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
func (_e *AtlasSearchApi_Expecter) GetAtlasSearchDeployment(ctx any, groupId any, clusterName any) *AtlasSearchApi_GetAtlasSearchDeployment_Call {
	return &AtlasSearchApi_GetAtlasSearchDeployment_Call{Call: _e.mock.On("GetAtlasSearchDeployment", ctx, groupId, clusterName)}
}

func (_c *AtlasSearchApi_GetAtlasSearchDeployment_Call) Run(run func(ctx context.Context, groupId string, clusterName string)) *AtlasSearchApi_GetAtlasSearchDeployment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchDeployment_Call) Return(_a0 admin.GetAtlasSearchDeploymentApiRequest) *AtlasSearchApi_GetAtlasSearchDeployment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchDeployment_Call) RunAndReturn(run func(context.Context, string, string) admin.GetAtlasSearchDeploymentApiRequest) *AtlasSearchApi_GetAtlasSearchDeployment_Call {
	_c.Call.Return(run)
	return _c
}

// GetAtlasSearchDeploymentExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) GetAtlasSearchDeploymentExecute(r admin.GetAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetAtlasSearchDeploymentExecute")
	}

	var r0 *admin.ApiSearchDeploymentResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetAtlasSearchDeploymentApiRequest) *admin.ApiSearchDeploymentResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiSearchDeploymentResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetAtlasSearchDeploymentApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetAtlasSearchDeploymentApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAtlasSearchDeploymentExecute'
type AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call struct {
	*mock.Call
}

// GetAtlasSearchDeploymentExecute is a helper method to define mock.On call
//   - r admin.GetAtlasSearchDeploymentApiRequest
func (_e *AtlasSearchApi_Expecter) GetAtlasSearchDeploymentExecute(r any) *AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call {
	return &AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call{Call: _e.mock.On("GetAtlasSearchDeploymentExecute", r)}
}

func (_c *AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call) Run(run func(r admin.GetAtlasSearchDeploymentApiRequest)) *AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetAtlasSearchDeploymentApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call) Return(_a0 *admin.ApiSearchDeploymentResponse, _a1 *http.Response, _a2 error) *AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call) RunAndReturn(run func(admin.GetAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error)) *AtlasSearchApi_GetAtlasSearchDeploymentExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetAtlasSearchDeploymentWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) GetAtlasSearchDeploymentWithParams(ctx context.Context, args *admin.GetAtlasSearchDeploymentApiParams) admin.GetAtlasSearchDeploymentApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetAtlasSearchDeploymentWithParams")
	}

	var r0 admin.GetAtlasSearchDeploymentApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetAtlasSearchDeploymentApiParams) admin.GetAtlasSearchDeploymentApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetAtlasSearchDeploymentApiRequest)
	}

	return r0
}

// AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAtlasSearchDeploymentWithParams'
type AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call struct {
	*mock.Call
}

// GetAtlasSearchDeploymentWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetAtlasSearchDeploymentApiParams
func (_e *AtlasSearchApi_Expecter) GetAtlasSearchDeploymentWithParams(ctx any, args any) *AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call {
	return &AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call{Call: _e.mock.On("GetAtlasSearchDeploymentWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call) Run(run func(ctx context.Context, args *admin.GetAtlasSearchDeploymentApiParams)) *AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetAtlasSearchDeploymentApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call) Return(_a0 admin.GetAtlasSearchDeploymentApiRequest) *AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetAtlasSearchDeploymentApiParams) admin.GetAtlasSearchDeploymentApiRequest) *AtlasSearchApi_GetAtlasSearchDeploymentWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetAtlasSearchIndexDeprecated provides a mock function with given fields: ctx, groupId, clusterName, indexId
func (_m *AtlasSearchApi) GetAtlasSearchIndexDeprecated(ctx context.Context, groupId string, clusterName string, indexId string) admin.GetAtlasSearchIndexDeprecatedApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, indexId)

	if len(ret) == 0 {
		panic("no return value specified for GetAtlasSearchIndexDeprecated")
	}

	var r0 admin.GetAtlasSearchIndexDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.GetAtlasSearchIndexDeprecatedApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, indexId)
	} else {
		r0 = ret.Get(0).(admin.GetAtlasSearchIndexDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAtlasSearchIndexDeprecated'
type AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call struct {
	*mock.Call
}

// GetAtlasSearchIndexDeprecated is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - indexId string
func (_e *AtlasSearchApi_Expecter) GetAtlasSearchIndexDeprecated(ctx any, groupId any, clusterName any, indexId any) *AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call {
	return &AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call{Call: _e.mock.On("GetAtlasSearchIndexDeprecated", ctx, groupId, clusterName, indexId)}
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call) Run(run func(ctx context.Context, groupId string, clusterName string, indexId string)) *AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call) Return(_a0 admin.GetAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call) RunAndReturn(run func(context.Context, string, string, string) admin.GetAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_GetAtlasSearchIndexDeprecated_Call {
	_c.Call.Return(run)
	return _c
}

// GetAtlasSearchIndexDeprecatedExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) GetAtlasSearchIndexDeprecatedExecute(r admin.GetAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetAtlasSearchIndexDeprecatedExecute")
	}

	var r0 *admin.ClusterSearchIndex
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetAtlasSearchIndexDeprecatedApiRequest) *admin.ClusterSearchIndex); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ClusterSearchIndex)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetAtlasSearchIndexDeprecatedApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetAtlasSearchIndexDeprecatedApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAtlasSearchIndexDeprecatedExecute'
type AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call struct {
	*mock.Call
}

// GetAtlasSearchIndexDeprecatedExecute is a helper method to define mock.On call
//   - r admin.GetAtlasSearchIndexDeprecatedApiRequest
func (_e *AtlasSearchApi_Expecter) GetAtlasSearchIndexDeprecatedExecute(r any) *AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call {
	return &AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call{Call: _e.mock.On("GetAtlasSearchIndexDeprecatedExecute", r)}
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call) Run(run func(r admin.GetAtlasSearchIndexDeprecatedApiRequest)) *AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetAtlasSearchIndexDeprecatedApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call) Return(_a0 *admin.ClusterSearchIndex, _a1 *http.Response, _a2 error) *AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call) RunAndReturn(run func(admin.GetAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error)) *AtlasSearchApi_GetAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetAtlasSearchIndexDeprecatedWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) GetAtlasSearchIndexDeprecatedWithParams(ctx context.Context, args *admin.GetAtlasSearchIndexDeprecatedApiParams) admin.GetAtlasSearchIndexDeprecatedApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetAtlasSearchIndexDeprecatedWithParams")
	}

	var r0 admin.GetAtlasSearchIndexDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetAtlasSearchIndexDeprecatedApiParams) admin.GetAtlasSearchIndexDeprecatedApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetAtlasSearchIndexDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAtlasSearchIndexDeprecatedWithParams'
type AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call struct {
	*mock.Call
}

// GetAtlasSearchIndexDeprecatedWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetAtlasSearchIndexDeprecatedApiParams
func (_e *AtlasSearchApi_Expecter) GetAtlasSearchIndexDeprecatedWithParams(ctx any, args any) *AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call {
	return &AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call{Call: _e.mock.On("GetAtlasSearchIndexDeprecatedWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call) Run(run func(ctx context.Context, args *admin.GetAtlasSearchIndexDeprecatedApiParams)) *AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetAtlasSearchIndexDeprecatedApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call) Return(_a0 admin.GetAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetAtlasSearchIndexDeprecatedApiParams) admin.GetAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_GetAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListAtlasSearchIndexesDeprecated provides a mock function with given fields: ctx, groupId, clusterName, collectionName, databaseName
func (_m *AtlasSearchApi) ListAtlasSearchIndexesDeprecated(ctx context.Context, groupId string, clusterName string, collectionName string, databaseName string) admin.ListAtlasSearchIndexesDeprecatedApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, collectionName, databaseName)

	if len(ret) == 0 {
		panic("no return value specified for ListAtlasSearchIndexesDeprecated")
	}

	var r0 admin.ListAtlasSearchIndexesDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, string) admin.ListAtlasSearchIndexesDeprecatedApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, collectionName, databaseName)
	} else {
		r0 = ret.Get(0).(admin.ListAtlasSearchIndexesDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListAtlasSearchIndexesDeprecated'
type AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call struct {
	*mock.Call
}

// ListAtlasSearchIndexesDeprecated is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - collectionName string
//   - databaseName string
func (_e *AtlasSearchApi_Expecter) ListAtlasSearchIndexesDeprecated(ctx any, groupId any, clusterName any, collectionName any, databaseName any) *AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call {
	return &AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call{Call: _e.mock.On("ListAtlasSearchIndexesDeprecated", ctx, groupId, clusterName, collectionName, databaseName)}
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call) Run(run func(ctx context.Context, groupId string, clusterName string, collectionName string, databaseName string)) *AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string), args[4].(string))
	})
	return _c
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call) Return(_a0 admin.ListAtlasSearchIndexesDeprecatedApiRequest) *AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call) RunAndReturn(run func(context.Context, string, string, string, string) admin.ListAtlasSearchIndexesDeprecatedApiRequest) *AtlasSearchApi_ListAtlasSearchIndexesDeprecated_Call {
	_c.Call.Return(run)
	return _c
}

// ListAtlasSearchIndexesDeprecatedExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) ListAtlasSearchIndexesDeprecatedExecute(r admin.ListAtlasSearchIndexesDeprecatedApiRequest) ([]admin.ClusterSearchIndex, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListAtlasSearchIndexesDeprecatedExecute")
	}

	var r0 []admin.ClusterSearchIndex
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListAtlasSearchIndexesDeprecatedApiRequest) ([]admin.ClusterSearchIndex, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListAtlasSearchIndexesDeprecatedApiRequest) []admin.ClusterSearchIndex); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]admin.ClusterSearchIndex)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListAtlasSearchIndexesDeprecatedApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListAtlasSearchIndexesDeprecatedApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListAtlasSearchIndexesDeprecatedExecute'
type AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call struct {
	*mock.Call
}

// ListAtlasSearchIndexesDeprecatedExecute is a helper method to define mock.On call
//   - r admin.ListAtlasSearchIndexesDeprecatedApiRequest
func (_e *AtlasSearchApi_Expecter) ListAtlasSearchIndexesDeprecatedExecute(r any) *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call {
	return &AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call{Call: _e.mock.On("ListAtlasSearchIndexesDeprecatedExecute", r)}
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call) Run(run func(r admin.ListAtlasSearchIndexesDeprecatedApiRequest)) *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListAtlasSearchIndexesDeprecatedApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call) Return(_a0 []admin.ClusterSearchIndex, _a1 *http.Response, _a2 error) *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call) RunAndReturn(run func(admin.ListAtlasSearchIndexesDeprecatedApiRequest) ([]admin.ClusterSearchIndex, *http.Response, error)) *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListAtlasSearchIndexesDeprecatedWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) ListAtlasSearchIndexesDeprecatedWithParams(ctx context.Context, args *admin.ListAtlasSearchIndexesDeprecatedApiParams) admin.ListAtlasSearchIndexesDeprecatedApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListAtlasSearchIndexesDeprecatedWithParams")
	}

	var r0 admin.ListAtlasSearchIndexesDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListAtlasSearchIndexesDeprecatedApiParams) admin.ListAtlasSearchIndexesDeprecatedApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListAtlasSearchIndexesDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListAtlasSearchIndexesDeprecatedWithParams'
type AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call struct {
	*mock.Call
}

// ListAtlasSearchIndexesDeprecatedWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListAtlasSearchIndexesDeprecatedApiParams
func (_e *AtlasSearchApi_Expecter) ListAtlasSearchIndexesDeprecatedWithParams(ctx any, args any) *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call {
	return &AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call{Call: _e.mock.On("ListAtlasSearchIndexesDeprecatedWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call) Run(run func(ctx context.Context, args *admin.ListAtlasSearchIndexesDeprecatedApiParams)) *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListAtlasSearchIndexesDeprecatedApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call) Return(_a0 admin.ListAtlasSearchIndexesDeprecatedApiRequest) *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListAtlasSearchIndexesDeprecatedApiParams) admin.ListAtlasSearchIndexesDeprecatedApiRequest) *AtlasSearchApi_ListAtlasSearchIndexesDeprecatedWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateAtlasSearchDeployment provides a mock function with given fields: ctx, groupId, clusterName, apiSearchDeploymentRequest
func (_m *AtlasSearchApi) UpdateAtlasSearchDeployment(ctx context.Context, groupId string, clusterName string, apiSearchDeploymentRequest *admin.ApiSearchDeploymentRequest) admin.UpdateAtlasSearchDeploymentApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, apiSearchDeploymentRequest)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAtlasSearchDeployment")
	}

	var r0 admin.UpdateAtlasSearchDeploymentApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.ApiSearchDeploymentRequest) admin.UpdateAtlasSearchDeploymentApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, apiSearchDeploymentRequest)
	} else {
		r0 = ret.Get(0).(admin.UpdateAtlasSearchDeploymentApiRequest)
	}

	return r0
}

// AtlasSearchApi_UpdateAtlasSearchDeployment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateAtlasSearchDeployment'
type AtlasSearchApi_UpdateAtlasSearchDeployment_Call struct {
	*mock.Call
}

// UpdateAtlasSearchDeployment is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - apiSearchDeploymentRequest *admin.ApiSearchDeploymentRequest
func (_e *AtlasSearchApi_Expecter) UpdateAtlasSearchDeployment(ctx any, groupId any, clusterName any, apiSearchDeploymentRequest any) *AtlasSearchApi_UpdateAtlasSearchDeployment_Call {
	return &AtlasSearchApi_UpdateAtlasSearchDeployment_Call{Call: _e.mock.On("UpdateAtlasSearchDeployment", ctx, groupId, clusterName, apiSearchDeploymentRequest)}
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeployment_Call) Run(run func(ctx context.Context, groupId string, clusterName string, apiSearchDeploymentRequest *admin.ApiSearchDeploymentRequest)) *AtlasSearchApi_UpdateAtlasSearchDeployment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.ApiSearchDeploymentRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeployment_Call) Return(_a0 admin.UpdateAtlasSearchDeploymentApiRequest) *AtlasSearchApi_UpdateAtlasSearchDeployment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeployment_Call) RunAndReturn(run func(context.Context, string, string, *admin.ApiSearchDeploymentRequest) admin.UpdateAtlasSearchDeploymentApiRequest) *AtlasSearchApi_UpdateAtlasSearchDeployment_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateAtlasSearchDeploymentExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) UpdateAtlasSearchDeploymentExecute(r admin.UpdateAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAtlasSearchDeploymentExecute")
	}

	var r0 *admin.ApiSearchDeploymentResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.UpdateAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.UpdateAtlasSearchDeploymentApiRequest) *admin.ApiSearchDeploymentResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiSearchDeploymentResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.UpdateAtlasSearchDeploymentApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.UpdateAtlasSearchDeploymentApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateAtlasSearchDeploymentExecute'
type AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call struct {
	*mock.Call
}

// UpdateAtlasSearchDeploymentExecute is a helper method to define mock.On call
//   - r admin.UpdateAtlasSearchDeploymentApiRequest
func (_e *AtlasSearchApi_Expecter) UpdateAtlasSearchDeploymentExecute(r any) *AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call {
	return &AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call{Call: _e.mock.On("UpdateAtlasSearchDeploymentExecute", r)}
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call) Run(run func(r admin.UpdateAtlasSearchDeploymentApiRequest)) *AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.UpdateAtlasSearchDeploymentApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call) Return(_a0 *admin.ApiSearchDeploymentResponse, _a1 *http.Response, _a2 error) *AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call) RunAndReturn(run func(admin.UpdateAtlasSearchDeploymentApiRequest) (*admin.ApiSearchDeploymentResponse, *http.Response, error)) *AtlasSearchApi_UpdateAtlasSearchDeploymentExecute_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateAtlasSearchDeploymentWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) UpdateAtlasSearchDeploymentWithParams(ctx context.Context, args *admin.UpdateAtlasSearchDeploymentApiParams) admin.UpdateAtlasSearchDeploymentApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAtlasSearchDeploymentWithParams")
	}

	var r0 admin.UpdateAtlasSearchDeploymentApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.UpdateAtlasSearchDeploymentApiParams) admin.UpdateAtlasSearchDeploymentApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.UpdateAtlasSearchDeploymentApiRequest)
	}

	return r0
}

// AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateAtlasSearchDeploymentWithParams'
type AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call struct {
	*mock.Call
}

// UpdateAtlasSearchDeploymentWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.UpdateAtlasSearchDeploymentApiParams
func (_e *AtlasSearchApi_Expecter) UpdateAtlasSearchDeploymentWithParams(ctx any, args any) *AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call {
	return &AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call{Call: _e.mock.On("UpdateAtlasSearchDeploymentWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call) Run(run func(ctx context.Context, args *admin.UpdateAtlasSearchDeploymentApiParams)) *AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.UpdateAtlasSearchDeploymentApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call) Return(_a0 admin.UpdateAtlasSearchDeploymentApiRequest) *AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call) RunAndReturn(run func(context.Context, *admin.UpdateAtlasSearchDeploymentApiParams) admin.UpdateAtlasSearchDeploymentApiRequest) *AtlasSearchApi_UpdateAtlasSearchDeploymentWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateAtlasSearchIndexDeprecated provides a mock function with given fields: ctx, groupId, clusterName, indexId, clusterSearchIndex
func (_m *AtlasSearchApi) UpdateAtlasSearchIndexDeprecated(ctx context.Context, groupId string, clusterName string, indexId string, clusterSearchIndex *admin.ClusterSearchIndex) admin.UpdateAtlasSearchIndexDeprecatedApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, indexId, clusterSearchIndex)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAtlasSearchIndexDeprecated")
	}

	var r0 admin.UpdateAtlasSearchIndexDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, *admin.ClusterSearchIndex) admin.UpdateAtlasSearchIndexDeprecatedApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, indexId, clusterSearchIndex)
	} else {
		r0 = ret.Get(0).(admin.UpdateAtlasSearchIndexDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateAtlasSearchIndexDeprecated'
type AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call struct {
	*mock.Call
}

// UpdateAtlasSearchIndexDeprecated is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - indexId string
//   - clusterSearchIndex *admin.ClusterSearchIndex
func (_e *AtlasSearchApi_Expecter) UpdateAtlasSearchIndexDeprecated(ctx any, groupId any, clusterName any, indexId any, clusterSearchIndex any) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call {
	return &AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call{Call: _e.mock.On("UpdateAtlasSearchIndexDeprecated", ctx, groupId, clusterName, indexId, clusterSearchIndex)}
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call) Run(run func(ctx context.Context, groupId string, clusterName string, indexId string, clusterSearchIndex *admin.ClusterSearchIndex)) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string), args[4].(*admin.ClusterSearchIndex))
	})
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call) Return(_a0 admin.UpdateAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call) RunAndReturn(run func(context.Context, string, string, string, *admin.ClusterSearchIndex) admin.UpdateAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecated_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateAtlasSearchIndexDeprecatedExecute provides a mock function with given fields: r
func (_m *AtlasSearchApi) UpdateAtlasSearchIndexDeprecatedExecute(r admin.UpdateAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAtlasSearchIndexDeprecatedExecute")
	}

	var r0 *admin.ClusterSearchIndex
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.UpdateAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.UpdateAtlasSearchIndexDeprecatedApiRequest) *admin.ClusterSearchIndex); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ClusterSearchIndex)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.UpdateAtlasSearchIndexDeprecatedApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.UpdateAtlasSearchIndexDeprecatedApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateAtlasSearchIndexDeprecatedExecute'
type AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call struct {
	*mock.Call
}

// UpdateAtlasSearchIndexDeprecatedExecute is a helper method to define mock.On call
//   - r admin.UpdateAtlasSearchIndexDeprecatedApiRequest
func (_e *AtlasSearchApi_Expecter) UpdateAtlasSearchIndexDeprecatedExecute(r any) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call {
	return &AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call{Call: _e.mock.On("UpdateAtlasSearchIndexDeprecatedExecute", r)}
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call) Run(run func(r admin.UpdateAtlasSearchIndexDeprecatedApiRequest)) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.UpdateAtlasSearchIndexDeprecatedApiRequest))
	})
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call) Return(_a0 *admin.ClusterSearchIndex, _a1 *http.Response, _a2 error) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call) RunAndReturn(run func(admin.UpdateAtlasSearchIndexDeprecatedApiRequest) (*admin.ClusterSearchIndex, *http.Response, error)) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedExecute_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateAtlasSearchIndexDeprecatedWithParams provides a mock function with given fields: ctx, args
func (_m *AtlasSearchApi) UpdateAtlasSearchIndexDeprecatedWithParams(ctx context.Context, args *admin.UpdateAtlasSearchIndexDeprecatedApiParams) admin.UpdateAtlasSearchIndexDeprecatedApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAtlasSearchIndexDeprecatedWithParams")
	}

	var r0 admin.UpdateAtlasSearchIndexDeprecatedApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.UpdateAtlasSearchIndexDeprecatedApiParams) admin.UpdateAtlasSearchIndexDeprecatedApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.UpdateAtlasSearchIndexDeprecatedApiRequest)
	}

	return r0
}

// AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateAtlasSearchIndexDeprecatedWithParams'
type AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call struct {
	*mock.Call
}

// UpdateAtlasSearchIndexDeprecatedWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.UpdateAtlasSearchIndexDeprecatedApiParams
func (_e *AtlasSearchApi_Expecter) UpdateAtlasSearchIndexDeprecatedWithParams(ctx any, args any) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call {
	return &AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call{Call: _e.mock.On("UpdateAtlasSearchIndexDeprecatedWithParams", ctx, args)}
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call) Run(run func(ctx context.Context, args *admin.UpdateAtlasSearchIndexDeprecatedApiParams)) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.UpdateAtlasSearchIndexDeprecatedApiParams))
	})
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call) Return(_a0 admin.UpdateAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call) RunAndReturn(run func(context.Context, *admin.UpdateAtlasSearchIndexDeprecatedApiParams) admin.UpdateAtlasSearchIndexDeprecatedApiRequest) *AtlasSearchApi_UpdateAtlasSearchIndexDeprecatedWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewAtlasSearchApi creates a new instance of AtlasSearchApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAtlasSearchApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *AtlasSearchApi {
	mock := &AtlasSearchApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
