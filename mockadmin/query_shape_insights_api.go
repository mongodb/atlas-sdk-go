// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "github.com/mongodb/atlas-sdk-go/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// QueryShapeInsightsApi is an autogenerated mock type for the QueryShapeInsightsApi type
type QueryShapeInsightsApi struct {
	mock.Mock
}

type QueryShapeInsightsApi_Expecter struct {
	mock *mock.Mock
}

func (_m *QueryShapeInsightsApi) EXPECT() *QueryShapeInsightsApi_Expecter {
	return &QueryShapeInsightsApi_Expecter{mock: &_m.Mock}
}

// GetQueryShapeDetails provides a mock function with given fields: ctx, groupId, clusterName, queryShapeHash
func (_m *QueryShapeInsightsApi) GetQueryShapeDetails(ctx context.Context, groupId string, clusterName string, queryShapeHash string) admin.GetQueryShapeDetailsApiRequest {
	ret := _m.Called(ctx, groupId, clusterName, queryShapeHash)

	if len(ret) == 0 {
		panic("no return value specified for GetQueryShapeDetails")
	}

	var r0 admin.GetQueryShapeDetailsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.GetQueryShapeDetailsApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName, queryShapeHash)
	} else {
		r0 = ret.Get(0).(admin.GetQueryShapeDetailsApiRequest)
	}

	return r0
}

// QueryShapeInsightsApi_GetQueryShapeDetails_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetQueryShapeDetails'
type QueryShapeInsightsApi_GetQueryShapeDetails_Call struct {
	*mock.Call
}

// GetQueryShapeDetails is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
//   - queryShapeHash string
func (_e *QueryShapeInsightsApi_Expecter) GetQueryShapeDetails(ctx any, groupId any, clusterName any, queryShapeHash any) *QueryShapeInsightsApi_GetQueryShapeDetails_Call {
	return &QueryShapeInsightsApi_GetQueryShapeDetails_Call{Call: _e.mock.On("GetQueryShapeDetails", ctx, groupId, clusterName, queryShapeHash)}
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetails_Call) Run(run func(ctx context.Context, groupId string, clusterName string, queryShapeHash string)) *QueryShapeInsightsApi_GetQueryShapeDetails_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetails_Call) Return(_a0 admin.GetQueryShapeDetailsApiRequest) *QueryShapeInsightsApi_GetQueryShapeDetails_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetails_Call) RunAndReturn(run func(context.Context, string, string, string) admin.GetQueryShapeDetailsApiRequest) *QueryShapeInsightsApi_GetQueryShapeDetails_Call {
	_c.Call.Return(run)
	return _c
}

// GetQueryShapeDetailsExecute provides a mock function with given fields: r
func (_m *QueryShapeInsightsApi) GetQueryShapeDetailsExecute(r admin.GetQueryShapeDetailsApiRequest) (*admin.QueryStatsDetailsResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetQueryShapeDetailsExecute")
	}

	var r0 *admin.QueryStatsDetailsResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetQueryShapeDetailsApiRequest) (*admin.QueryStatsDetailsResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetQueryShapeDetailsApiRequest) *admin.QueryStatsDetailsResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.QueryStatsDetailsResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetQueryShapeDetailsApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetQueryShapeDetailsApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetQueryShapeDetailsExecute'
type QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call struct {
	*mock.Call
}

// GetQueryShapeDetailsExecute is a helper method to define mock.On call
//   - r admin.GetQueryShapeDetailsApiRequest
func (_e *QueryShapeInsightsApi_Expecter) GetQueryShapeDetailsExecute(r any) *QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call {
	return &QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call{Call: _e.mock.On("GetQueryShapeDetailsExecute", r)}
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call) Run(run func(r admin.GetQueryShapeDetailsApiRequest)) *QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetQueryShapeDetailsApiRequest))
	})
	return _c
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call) Return(_a0 *admin.QueryStatsDetailsResponse, _a1 *http.Response, _a2 error) *QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call) RunAndReturn(run func(admin.GetQueryShapeDetailsApiRequest) (*admin.QueryStatsDetailsResponse, *http.Response, error)) *QueryShapeInsightsApi_GetQueryShapeDetailsExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetQueryShapeDetailsWithParams provides a mock function with given fields: ctx, args
func (_m *QueryShapeInsightsApi) GetQueryShapeDetailsWithParams(ctx context.Context, args *admin.GetQueryShapeDetailsApiParams) admin.GetQueryShapeDetailsApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetQueryShapeDetailsWithParams")
	}

	var r0 admin.GetQueryShapeDetailsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetQueryShapeDetailsApiParams) admin.GetQueryShapeDetailsApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetQueryShapeDetailsApiRequest)
	}

	return r0
}

// QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetQueryShapeDetailsWithParams'
type QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call struct {
	*mock.Call
}

// GetQueryShapeDetailsWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetQueryShapeDetailsApiParams
func (_e *QueryShapeInsightsApi_Expecter) GetQueryShapeDetailsWithParams(ctx any, args any) *QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call {
	return &QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call{Call: _e.mock.On("GetQueryShapeDetailsWithParams", ctx, args)}
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call) Run(run func(ctx context.Context, args *admin.GetQueryShapeDetailsApiParams)) *QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetQueryShapeDetailsApiParams))
	})
	return _c
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call) Return(_a0 admin.GetQueryShapeDetailsApiRequest) *QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetQueryShapeDetailsApiParams) admin.GetQueryShapeDetailsApiRequest) *QueryShapeInsightsApi_GetQueryShapeDetailsWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListQueryShapeSummaries provides a mock function with given fields: ctx, groupId, clusterName
func (_m *QueryShapeInsightsApi) ListQueryShapeSummaries(ctx context.Context, groupId string, clusterName string) admin.ListQueryShapeSummariesApiRequest {
	ret := _m.Called(ctx, groupId, clusterName)

	if len(ret) == 0 {
		panic("no return value specified for ListQueryShapeSummaries")
	}

	var r0 admin.ListQueryShapeSummariesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.ListQueryShapeSummariesApiRequest); ok {
		r0 = rf(ctx, groupId, clusterName)
	} else {
		r0 = ret.Get(0).(admin.ListQueryShapeSummariesApiRequest)
	}

	return r0
}

// QueryShapeInsightsApi_ListQueryShapeSummaries_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListQueryShapeSummaries'
type QueryShapeInsightsApi_ListQueryShapeSummaries_Call struct {
	*mock.Call
}

// ListQueryShapeSummaries is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - clusterName string
func (_e *QueryShapeInsightsApi_Expecter) ListQueryShapeSummaries(ctx any, groupId any, clusterName any) *QueryShapeInsightsApi_ListQueryShapeSummaries_Call {
	return &QueryShapeInsightsApi_ListQueryShapeSummaries_Call{Call: _e.mock.On("ListQueryShapeSummaries", ctx, groupId, clusterName)}
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummaries_Call) Run(run func(ctx context.Context, groupId string, clusterName string)) *QueryShapeInsightsApi_ListQueryShapeSummaries_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummaries_Call) Return(_a0 admin.ListQueryShapeSummariesApiRequest) *QueryShapeInsightsApi_ListQueryShapeSummaries_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummaries_Call) RunAndReturn(run func(context.Context, string, string) admin.ListQueryShapeSummariesApiRequest) *QueryShapeInsightsApi_ListQueryShapeSummaries_Call {
	_c.Call.Return(run)
	return _c
}

// ListQueryShapeSummariesExecute provides a mock function with given fields: r
func (_m *QueryShapeInsightsApi) ListQueryShapeSummariesExecute(r admin.ListQueryShapeSummariesApiRequest) (*admin.QueryStatsSummaryListResponse, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListQueryShapeSummariesExecute")
	}

	var r0 *admin.QueryStatsSummaryListResponse
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListQueryShapeSummariesApiRequest) (*admin.QueryStatsSummaryListResponse, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListQueryShapeSummariesApiRequest) *admin.QueryStatsSummaryListResponse); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.QueryStatsSummaryListResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListQueryShapeSummariesApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListQueryShapeSummariesApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListQueryShapeSummariesExecute'
type QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call struct {
	*mock.Call
}

// ListQueryShapeSummariesExecute is a helper method to define mock.On call
//   - r admin.ListQueryShapeSummariesApiRequest
func (_e *QueryShapeInsightsApi_Expecter) ListQueryShapeSummariesExecute(r any) *QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call {
	return &QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call{Call: _e.mock.On("ListQueryShapeSummariesExecute", r)}
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call) Run(run func(r admin.ListQueryShapeSummariesApiRequest)) *QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListQueryShapeSummariesApiRequest))
	})
	return _c
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call) Return(_a0 *admin.QueryStatsSummaryListResponse, _a1 *http.Response, _a2 error) *QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call) RunAndReturn(run func(admin.ListQueryShapeSummariesApiRequest) (*admin.QueryStatsSummaryListResponse, *http.Response, error)) *QueryShapeInsightsApi_ListQueryShapeSummariesExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListQueryShapeSummariesWithParams provides a mock function with given fields: ctx, args
func (_m *QueryShapeInsightsApi) ListQueryShapeSummariesWithParams(ctx context.Context, args *admin.ListQueryShapeSummariesApiParams) admin.ListQueryShapeSummariesApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListQueryShapeSummariesWithParams")
	}

	var r0 admin.ListQueryShapeSummariesApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListQueryShapeSummariesApiParams) admin.ListQueryShapeSummariesApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListQueryShapeSummariesApiRequest)
	}

	return r0
}

// QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListQueryShapeSummariesWithParams'
type QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call struct {
	*mock.Call
}

// ListQueryShapeSummariesWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListQueryShapeSummariesApiParams
func (_e *QueryShapeInsightsApi_Expecter) ListQueryShapeSummariesWithParams(ctx any, args any) *QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call {
	return &QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call{Call: _e.mock.On("ListQueryShapeSummariesWithParams", ctx, args)}
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call) Run(run func(ctx context.Context, args *admin.ListQueryShapeSummariesApiParams)) *QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListQueryShapeSummariesApiParams))
	})
	return _c
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call) Return(_a0 admin.ListQueryShapeSummariesApiRequest) *QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListQueryShapeSummariesApiParams) admin.ListQueryShapeSummariesApiRequest) *QueryShapeInsightsApi_ListQueryShapeSummariesWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewQueryShapeInsightsApi creates a new instance of QueryShapeInsightsApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewQueryShapeInsightsApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *QueryShapeInsightsApi {
	mock := &QueryShapeInsightsApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
