// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20250312008/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// FlexRestoreJobsApi is an autogenerated mock type for the FlexRestoreJobsApi type
type FlexRestoreJobsApi struct {
	mock.Mock
}

type FlexRestoreJobsApi_Expecter struct {
	mock *mock.Mock
}

func (_m *FlexRestoreJobsApi) EXPECT() *FlexRestoreJobsApi_Expecter {
	return &FlexRestoreJobsApi_Expecter{mock: &_m.Mock}
}

// CreateFlexRestoreJob provides a mock function with given fields: ctx, groupId, name, flexBackupRestoreJobCreate20241113
func (_m *FlexRestoreJobsApi) CreateFlexRestoreJob(ctx context.Context, groupId string, name string, flexBackupRestoreJobCreate20241113 *admin.FlexBackupRestoreJobCreate20241113) admin.CreateFlexRestoreJobApiRequest {
	ret := _m.Called(ctx, groupId, name, flexBackupRestoreJobCreate20241113)

	if len(ret) == 0 {
		panic("no return value specified for CreateFlexRestoreJob")
	}

	var r0 admin.CreateFlexRestoreJobApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.FlexBackupRestoreJobCreate20241113) admin.CreateFlexRestoreJobApiRequest); ok {
		r0 = rf(ctx, groupId, name, flexBackupRestoreJobCreate20241113)
	} else {
		r0 = ret.Get(0).(admin.CreateFlexRestoreJobApiRequest)
	}

	return r0
}

// FlexRestoreJobsApi_CreateFlexRestoreJob_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateFlexRestoreJob'
type FlexRestoreJobsApi_CreateFlexRestoreJob_Call struct {
	*mock.Call
}

// CreateFlexRestoreJob is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - name string
//   - flexBackupRestoreJobCreate20241113 *admin.FlexBackupRestoreJobCreate20241113
func (_e *FlexRestoreJobsApi_Expecter) CreateFlexRestoreJob(ctx any, groupId any, name any, flexBackupRestoreJobCreate20241113 any) *FlexRestoreJobsApi_CreateFlexRestoreJob_Call {
	return &FlexRestoreJobsApi_CreateFlexRestoreJob_Call{Call: _e.mock.On("CreateFlexRestoreJob", ctx, groupId, name, flexBackupRestoreJobCreate20241113)}
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJob_Call) Run(run func(ctx context.Context, groupId string, name string, flexBackupRestoreJobCreate20241113 *admin.FlexBackupRestoreJobCreate20241113)) *FlexRestoreJobsApi_CreateFlexRestoreJob_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.FlexBackupRestoreJobCreate20241113))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJob_Call) Return(_a0 admin.CreateFlexRestoreJobApiRequest) *FlexRestoreJobsApi_CreateFlexRestoreJob_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJob_Call) RunAndReturn(run func(context.Context, string, string, *admin.FlexBackupRestoreJobCreate20241113) admin.CreateFlexRestoreJobApiRequest) *FlexRestoreJobsApi_CreateFlexRestoreJob_Call {
	_c.Call.Return(run)
	return _c
}

// CreateFlexRestoreJobExecute provides a mock function with given fields: r
func (_m *FlexRestoreJobsApi) CreateFlexRestoreJobExecute(r admin.CreateFlexRestoreJobApiRequest) (*admin.FlexBackupRestoreJob20241113, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateFlexRestoreJobExecute")
	}

	var r0 *admin.FlexBackupRestoreJob20241113
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateFlexRestoreJobApiRequest) (*admin.FlexBackupRestoreJob20241113, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateFlexRestoreJobApiRequest) *admin.FlexBackupRestoreJob20241113); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.FlexBackupRestoreJob20241113)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateFlexRestoreJobApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateFlexRestoreJobApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateFlexRestoreJobExecute'
type FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call struct {
	*mock.Call
}

// CreateFlexRestoreJobExecute is a helper method to define mock.On call
//   - r admin.CreateFlexRestoreJobApiRequest
func (_e *FlexRestoreJobsApi_Expecter) CreateFlexRestoreJobExecute(r any) *FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call {
	return &FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call{Call: _e.mock.On("CreateFlexRestoreJobExecute", r)}
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call) Run(run func(r admin.CreateFlexRestoreJobApiRequest)) *FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateFlexRestoreJobApiRequest))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call) Return(_a0 *admin.FlexBackupRestoreJob20241113, _a1 *http.Response, _a2 error) *FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call) RunAndReturn(run func(admin.CreateFlexRestoreJobApiRequest) (*admin.FlexBackupRestoreJob20241113, *http.Response, error)) *FlexRestoreJobsApi_CreateFlexRestoreJobExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateFlexRestoreJobWithParams provides a mock function with given fields: ctx, args
func (_m *FlexRestoreJobsApi) CreateFlexRestoreJobWithParams(ctx context.Context, args *admin.CreateFlexRestoreJobApiParams) admin.CreateFlexRestoreJobApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateFlexRestoreJobWithParams")
	}

	var r0 admin.CreateFlexRestoreJobApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateFlexRestoreJobApiParams) admin.CreateFlexRestoreJobApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateFlexRestoreJobApiRequest)
	}

	return r0
}

// FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateFlexRestoreJobWithParams'
type FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call struct {
	*mock.Call
}

// CreateFlexRestoreJobWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateFlexRestoreJobApiParams
func (_e *FlexRestoreJobsApi_Expecter) CreateFlexRestoreJobWithParams(ctx any, args any) *FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call {
	return &FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call{Call: _e.mock.On("CreateFlexRestoreJobWithParams", ctx, args)}
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateFlexRestoreJobApiParams)) *FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateFlexRestoreJobApiParams))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call) Return(_a0 admin.CreateFlexRestoreJobApiRequest) *FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateFlexRestoreJobApiParams) admin.CreateFlexRestoreJobApiRequest) *FlexRestoreJobsApi_CreateFlexRestoreJobWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetFlexRestoreJob provides a mock function with given fields: ctx, groupId, name, restoreJobId
func (_m *FlexRestoreJobsApi) GetFlexRestoreJob(ctx context.Context, groupId string, name string, restoreJobId string) admin.GetFlexRestoreJobApiRequest {
	ret := _m.Called(ctx, groupId, name, restoreJobId)

	if len(ret) == 0 {
		panic("no return value specified for GetFlexRestoreJob")
	}

	var r0 admin.GetFlexRestoreJobApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.GetFlexRestoreJobApiRequest); ok {
		r0 = rf(ctx, groupId, name, restoreJobId)
	} else {
		r0 = ret.Get(0).(admin.GetFlexRestoreJobApiRequest)
	}

	return r0
}

// FlexRestoreJobsApi_GetFlexRestoreJob_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFlexRestoreJob'
type FlexRestoreJobsApi_GetFlexRestoreJob_Call struct {
	*mock.Call
}

// GetFlexRestoreJob is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - name string
//   - restoreJobId string
func (_e *FlexRestoreJobsApi_Expecter) GetFlexRestoreJob(ctx any, groupId any, name any, restoreJobId any) *FlexRestoreJobsApi_GetFlexRestoreJob_Call {
	return &FlexRestoreJobsApi_GetFlexRestoreJob_Call{Call: _e.mock.On("GetFlexRestoreJob", ctx, groupId, name, restoreJobId)}
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJob_Call) Run(run func(ctx context.Context, groupId string, name string, restoreJobId string)) *FlexRestoreJobsApi_GetFlexRestoreJob_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJob_Call) Return(_a0 admin.GetFlexRestoreJobApiRequest) *FlexRestoreJobsApi_GetFlexRestoreJob_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJob_Call) RunAndReturn(run func(context.Context, string, string, string) admin.GetFlexRestoreJobApiRequest) *FlexRestoreJobsApi_GetFlexRestoreJob_Call {
	_c.Call.Return(run)
	return _c
}

// GetFlexRestoreJobExecute provides a mock function with given fields: r
func (_m *FlexRestoreJobsApi) GetFlexRestoreJobExecute(r admin.GetFlexRestoreJobApiRequest) (*admin.FlexBackupRestoreJob20241113, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetFlexRestoreJobExecute")
	}

	var r0 *admin.FlexBackupRestoreJob20241113
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetFlexRestoreJobApiRequest) (*admin.FlexBackupRestoreJob20241113, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetFlexRestoreJobApiRequest) *admin.FlexBackupRestoreJob20241113); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.FlexBackupRestoreJob20241113)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetFlexRestoreJobApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetFlexRestoreJobApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFlexRestoreJobExecute'
type FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call struct {
	*mock.Call
}

// GetFlexRestoreJobExecute is a helper method to define mock.On call
//   - r admin.GetFlexRestoreJobApiRequest
func (_e *FlexRestoreJobsApi_Expecter) GetFlexRestoreJobExecute(r any) *FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call {
	return &FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call{Call: _e.mock.On("GetFlexRestoreJobExecute", r)}
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call) Run(run func(r admin.GetFlexRestoreJobApiRequest)) *FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetFlexRestoreJobApiRequest))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call) Return(_a0 *admin.FlexBackupRestoreJob20241113, _a1 *http.Response, _a2 error) *FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call) RunAndReturn(run func(admin.GetFlexRestoreJobApiRequest) (*admin.FlexBackupRestoreJob20241113, *http.Response, error)) *FlexRestoreJobsApi_GetFlexRestoreJobExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetFlexRestoreJobWithParams provides a mock function with given fields: ctx, args
func (_m *FlexRestoreJobsApi) GetFlexRestoreJobWithParams(ctx context.Context, args *admin.GetFlexRestoreJobApiParams) admin.GetFlexRestoreJobApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetFlexRestoreJobWithParams")
	}

	var r0 admin.GetFlexRestoreJobApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetFlexRestoreJobApiParams) admin.GetFlexRestoreJobApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetFlexRestoreJobApiRequest)
	}

	return r0
}

// FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFlexRestoreJobWithParams'
type FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call struct {
	*mock.Call
}

// GetFlexRestoreJobWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetFlexRestoreJobApiParams
func (_e *FlexRestoreJobsApi_Expecter) GetFlexRestoreJobWithParams(ctx any, args any) *FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call {
	return &FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call{Call: _e.mock.On("GetFlexRestoreJobWithParams", ctx, args)}
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call) Run(run func(ctx context.Context, args *admin.GetFlexRestoreJobApiParams)) *FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetFlexRestoreJobApiParams))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call) Return(_a0 admin.GetFlexRestoreJobApiRequest) *FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetFlexRestoreJobApiParams) admin.GetFlexRestoreJobApiRequest) *FlexRestoreJobsApi_GetFlexRestoreJobWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListFlexRestoreJobs provides a mock function with given fields: ctx, groupId, name
func (_m *FlexRestoreJobsApi) ListFlexRestoreJobs(ctx context.Context, groupId string, name string) admin.ListFlexRestoreJobsApiRequest {
	ret := _m.Called(ctx, groupId, name)

	if len(ret) == 0 {
		panic("no return value specified for ListFlexRestoreJobs")
	}

	var r0 admin.ListFlexRestoreJobsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.ListFlexRestoreJobsApiRequest); ok {
		r0 = rf(ctx, groupId, name)
	} else {
		r0 = ret.Get(0).(admin.ListFlexRestoreJobsApiRequest)
	}

	return r0
}

// FlexRestoreJobsApi_ListFlexRestoreJobs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListFlexRestoreJobs'
type FlexRestoreJobsApi_ListFlexRestoreJobs_Call struct {
	*mock.Call
}

// ListFlexRestoreJobs is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - name string
func (_e *FlexRestoreJobsApi_Expecter) ListFlexRestoreJobs(ctx any, groupId any, name any) *FlexRestoreJobsApi_ListFlexRestoreJobs_Call {
	return &FlexRestoreJobsApi_ListFlexRestoreJobs_Call{Call: _e.mock.On("ListFlexRestoreJobs", ctx, groupId, name)}
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobs_Call) Run(run func(ctx context.Context, groupId string, name string)) *FlexRestoreJobsApi_ListFlexRestoreJobs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobs_Call) Return(_a0 admin.ListFlexRestoreJobsApiRequest) *FlexRestoreJobsApi_ListFlexRestoreJobs_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobs_Call) RunAndReturn(run func(context.Context, string, string) admin.ListFlexRestoreJobsApiRequest) *FlexRestoreJobsApi_ListFlexRestoreJobs_Call {
	_c.Call.Return(run)
	return _c
}

// ListFlexRestoreJobsExecute provides a mock function with given fields: r
func (_m *FlexRestoreJobsApi) ListFlexRestoreJobsExecute(r admin.ListFlexRestoreJobsApiRequest) (*admin.PaginatedApiAtlasFlexBackupRestoreJob20241113, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListFlexRestoreJobsExecute")
	}

	var r0 *admin.PaginatedApiAtlasFlexBackupRestoreJob20241113
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListFlexRestoreJobsApiRequest) (*admin.PaginatedApiAtlasFlexBackupRestoreJob20241113, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListFlexRestoreJobsApiRequest) *admin.PaginatedApiAtlasFlexBackupRestoreJob20241113); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.PaginatedApiAtlasFlexBackupRestoreJob20241113)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListFlexRestoreJobsApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListFlexRestoreJobsApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListFlexRestoreJobsExecute'
type FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call struct {
	*mock.Call
}

// ListFlexRestoreJobsExecute is a helper method to define mock.On call
//   - r admin.ListFlexRestoreJobsApiRequest
func (_e *FlexRestoreJobsApi_Expecter) ListFlexRestoreJobsExecute(r any) *FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call {
	return &FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call{Call: _e.mock.On("ListFlexRestoreJobsExecute", r)}
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call) Run(run func(r admin.ListFlexRestoreJobsApiRequest)) *FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListFlexRestoreJobsApiRequest))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call) Return(_a0 *admin.PaginatedApiAtlasFlexBackupRestoreJob20241113, _a1 *http.Response, _a2 error) *FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call) RunAndReturn(run func(admin.ListFlexRestoreJobsApiRequest) (*admin.PaginatedApiAtlasFlexBackupRestoreJob20241113, *http.Response, error)) *FlexRestoreJobsApi_ListFlexRestoreJobsExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListFlexRestoreJobsWithParams provides a mock function with given fields: ctx, args
func (_m *FlexRestoreJobsApi) ListFlexRestoreJobsWithParams(ctx context.Context, args *admin.ListFlexRestoreJobsApiParams) admin.ListFlexRestoreJobsApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListFlexRestoreJobsWithParams")
	}

	var r0 admin.ListFlexRestoreJobsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListFlexRestoreJobsApiParams) admin.ListFlexRestoreJobsApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListFlexRestoreJobsApiRequest)
	}

	return r0
}

// FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListFlexRestoreJobsWithParams'
type FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call struct {
	*mock.Call
}

// ListFlexRestoreJobsWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListFlexRestoreJobsApiParams
func (_e *FlexRestoreJobsApi_Expecter) ListFlexRestoreJobsWithParams(ctx any, args any) *FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call {
	return &FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call{Call: _e.mock.On("ListFlexRestoreJobsWithParams", ctx, args)}
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call) Run(run func(ctx context.Context, args *admin.ListFlexRestoreJobsApiParams)) *FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListFlexRestoreJobsApiParams))
	})
	return _c
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call) Return(_a0 admin.ListFlexRestoreJobsApiRequest) *FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListFlexRestoreJobsApiParams) admin.ListFlexRestoreJobsApiRequest) *FlexRestoreJobsApi_ListFlexRestoreJobsWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewFlexRestoreJobsApi creates a new instance of FlexRestoreJobsApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFlexRestoreJobsApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *FlexRestoreJobsApi {
	mock := &FlexRestoreJobsApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
