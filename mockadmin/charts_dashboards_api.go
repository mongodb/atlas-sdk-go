// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "github.com/mongodb/atlas-sdk-go/admin"

	http "net/http"

	io "io"

	mock "github.com/stretchr/testify/mock"
)

// ChartsDashboardsApi is an autogenerated mock type for the ChartsDashboardsApi type
type ChartsDashboardsApi struct {
	mock.Mock
}

type ChartsDashboardsApi_Expecter struct {
	mock *mock.Mock
}

func (_m *ChartsDashboardsApi) EXPECT() *ChartsDashboardsApi_Expecter {
	return &ChartsDashboardsApi_Expecter{mock: &_m.Mock}
}

// ExportChartsDashboard provides a mock function with given fields: ctx, groupId, dashboardId
func (_m *ChartsDashboardsApi) ExportChartsDashboard(ctx context.Context, groupId string, dashboardId string) admin.ExportChartsDashboardApiRequest {
	ret := _m.Called(ctx, groupId, dashboardId)

	if len(ret) == 0 {
		panic("no return value specified for ExportChartsDashboard")
	}

	var r0 admin.ExportChartsDashboardApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.ExportChartsDashboardApiRequest); ok {
		r0 = rf(ctx, groupId, dashboardId)
	} else {
		r0 = ret.Get(0).(admin.ExportChartsDashboardApiRequest)
	}

	return r0
}

// ChartsDashboardsApi_ExportChartsDashboard_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ExportChartsDashboard'
type ChartsDashboardsApi_ExportChartsDashboard_Call struct {
	*mock.Call
}

// ExportChartsDashboard is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - dashboardId string
func (_e *ChartsDashboardsApi_Expecter) ExportChartsDashboard(ctx any, groupId any, dashboardId any) *ChartsDashboardsApi_ExportChartsDashboard_Call {
	return &ChartsDashboardsApi_ExportChartsDashboard_Call{Call: _e.mock.On("ExportChartsDashboard", ctx, groupId, dashboardId)}
}

func (_c *ChartsDashboardsApi_ExportChartsDashboard_Call) Run(run func(ctx context.Context, groupId string, dashboardId string)) *ChartsDashboardsApi_ExportChartsDashboard_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *ChartsDashboardsApi_ExportChartsDashboard_Call) Return(_a0 admin.ExportChartsDashboardApiRequest) *ChartsDashboardsApi_ExportChartsDashboard_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ChartsDashboardsApi_ExportChartsDashboard_Call) RunAndReturn(run func(context.Context, string, string) admin.ExportChartsDashboardApiRequest) *ChartsDashboardsApi_ExportChartsDashboard_Call {
	_c.Call.Return(run)
	return _c
}

// ExportChartsDashboardExecute provides a mock function with given fields: r
func (_m *ChartsDashboardsApi) ExportChartsDashboardExecute(r admin.ExportChartsDashboardApiRequest) (io.ReadCloser, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ExportChartsDashboardExecute")
	}

	var r0 io.ReadCloser
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ExportChartsDashboardApiRequest) (io.ReadCloser, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ExportChartsDashboardApiRequest) io.ReadCloser); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.ReadCloser)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ExportChartsDashboardApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ExportChartsDashboardApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ChartsDashboardsApi_ExportChartsDashboardExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ExportChartsDashboardExecute'
type ChartsDashboardsApi_ExportChartsDashboardExecute_Call struct {
	*mock.Call
}

// ExportChartsDashboardExecute is a helper method to define mock.On call
//   - r admin.ExportChartsDashboardApiRequest
func (_e *ChartsDashboardsApi_Expecter) ExportChartsDashboardExecute(r any) *ChartsDashboardsApi_ExportChartsDashboardExecute_Call {
	return &ChartsDashboardsApi_ExportChartsDashboardExecute_Call{Call: _e.mock.On("ExportChartsDashboardExecute", r)}
}

func (_c *ChartsDashboardsApi_ExportChartsDashboardExecute_Call) Run(run func(r admin.ExportChartsDashboardApiRequest)) *ChartsDashboardsApi_ExportChartsDashboardExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ExportChartsDashboardApiRequest))
	})
	return _c
}

func (_c *ChartsDashboardsApi_ExportChartsDashboardExecute_Call) Return(_a0 io.ReadCloser, _a1 *http.Response, _a2 error) *ChartsDashboardsApi_ExportChartsDashboardExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ChartsDashboardsApi_ExportChartsDashboardExecute_Call) RunAndReturn(run func(admin.ExportChartsDashboardApiRequest) (io.ReadCloser, *http.Response, error)) *ChartsDashboardsApi_ExportChartsDashboardExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ExportChartsDashboardWithParams provides a mock function with given fields: ctx, args
func (_m *ChartsDashboardsApi) ExportChartsDashboardWithParams(ctx context.Context, args *admin.ExportChartsDashboardApiParams) admin.ExportChartsDashboardApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ExportChartsDashboardWithParams")
	}

	var r0 admin.ExportChartsDashboardApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ExportChartsDashboardApiParams) admin.ExportChartsDashboardApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ExportChartsDashboardApiRequest)
	}

	return r0
}

// ChartsDashboardsApi_ExportChartsDashboardWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ExportChartsDashboardWithParams'
type ChartsDashboardsApi_ExportChartsDashboardWithParams_Call struct {
	*mock.Call
}

// ExportChartsDashboardWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ExportChartsDashboardApiParams
func (_e *ChartsDashboardsApi_Expecter) ExportChartsDashboardWithParams(ctx any, args any) *ChartsDashboardsApi_ExportChartsDashboardWithParams_Call {
	return &ChartsDashboardsApi_ExportChartsDashboardWithParams_Call{Call: _e.mock.On("ExportChartsDashboardWithParams", ctx, args)}
}

func (_c *ChartsDashboardsApi_ExportChartsDashboardWithParams_Call) Run(run func(ctx context.Context, args *admin.ExportChartsDashboardApiParams)) *ChartsDashboardsApi_ExportChartsDashboardWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ExportChartsDashboardApiParams))
	})
	return _c
}

func (_c *ChartsDashboardsApi_ExportChartsDashboardWithParams_Call) Return(_a0 admin.ExportChartsDashboardApiRequest) *ChartsDashboardsApi_ExportChartsDashboardWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ChartsDashboardsApi_ExportChartsDashboardWithParams_Call) RunAndReturn(run func(context.Context, *admin.ExportChartsDashboardApiParams) admin.ExportChartsDashboardApiRequest) *ChartsDashboardsApi_ExportChartsDashboardWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ImportChartsDashboard provides a mock function with given fields: ctx, groupId, apiChartsDashboardImportRequestView20430101
func (_m *ChartsDashboardsApi) ImportChartsDashboard(ctx context.Context, groupId string, apiChartsDashboardImportRequestView20430101 *admin.ApiChartsDashboardImportRequestView20430101) admin.ImportChartsDashboardApiRequest {
	ret := _m.Called(ctx, groupId, apiChartsDashboardImportRequestView20430101)

	if len(ret) == 0 {
		panic("no return value specified for ImportChartsDashboard")
	}

	var r0 admin.ImportChartsDashboardApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.ApiChartsDashboardImportRequestView20430101) admin.ImportChartsDashboardApiRequest); ok {
		r0 = rf(ctx, groupId, apiChartsDashboardImportRequestView20430101)
	} else {
		r0 = ret.Get(0).(admin.ImportChartsDashboardApiRequest)
	}

	return r0
}

// ChartsDashboardsApi_ImportChartsDashboard_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ImportChartsDashboard'
type ChartsDashboardsApi_ImportChartsDashboard_Call struct {
	*mock.Call
}

// ImportChartsDashboard is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - apiChartsDashboardImportRequestView20430101 *admin.ApiChartsDashboardImportRequestView20430101
func (_e *ChartsDashboardsApi_Expecter) ImportChartsDashboard(ctx any, groupId any, apiChartsDashboardImportRequestView20430101 any) *ChartsDashboardsApi_ImportChartsDashboard_Call {
	return &ChartsDashboardsApi_ImportChartsDashboard_Call{Call: _e.mock.On("ImportChartsDashboard", ctx, groupId, apiChartsDashboardImportRequestView20430101)}
}

func (_c *ChartsDashboardsApi_ImportChartsDashboard_Call) Run(run func(ctx context.Context, groupId string, apiChartsDashboardImportRequestView20430101 *admin.ApiChartsDashboardImportRequestView20430101)) *ChartsDashboardsApi_ImportChartsDashboard_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.ApiChartsDashboardImportRequestView20430101))
	})
	return _c
}

func (_c *ChartsDashboardsApi_ImportChartsDashboard_Call) Return(_a0 admin.ImportChartsDashboardApiRequest) *ChartsDashboardsApi_ImportChartsDashboard_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ChartsDashboardsApi_ImportChartsDashboard_Call) RunAndReturn(run func(context.Context, string, *admin.ApiChartsDashboardImportRequestView20430101) admin.ImportChartsDashboardApiRequest) *ChartsDashboardsApi_ImportChartsDashboard_Call {
	_c.Call.Return(run)
	return _c
}

// ImportChartsDashboardExecute provides a mock function with given fields: r
func (_m *ChartsDashboardsApi) ImportChartsDashboardExecute(r admin.ImportChartsDashboardApiRequest) (*admin.ApiChartsDashboardImportResponseView20430101, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ImportChartsDashboardExecute")
	}

	var r0 *admin.ApiChartsDashboardImportResponseView20430101
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ImportChartsDashboardApiRequest) (*admin.ApiChartsDashboardImportResponseView20430101, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ImportChartsDashboardApiRequest) *admin.ApiChartsDashboardImportResponseView20430101); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.ApiChartsDashboardImportResponseView20430101)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ImportChartsDashboardApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ImportChartsDashboardApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ChartsDashboardsApi_ImportChartsDashboardExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ImportChartsDashboardExecute'
type ChartsDashboardsApi_ImportChartsDashboardExecute_Call struct {
	*mock.Call
}

// ImportChartsDashboardExecute is a helper method to define mock.On call
//   - r admin.ImportChartsDashboardApiRequest
func (_e *ChartsDashboardsApi_Expecter) ImportChartsDashboardExecute(r any) *ChartsDashboardsApi_ImportChartsDashboardExecute_Call {
	return &ChartsDashboardsApi_ImportChartsDashboardExecute_Call{Call: _e.mock.On("ImportChartsDashboardExecute", r)}
}

func (_c *ChartsDashboardsApi_ImportChartsDashboardExecute_Call) Run(run func(r admin.ImportChartsDashboardApiRequest)) *ChartsDashboardsApi_ImportChartsDashboardExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ImportChartsDashboardApiRequest))
	})
	return _c
}

func (_c *ChartsDashboardsApi_ImportChartsDashboardExecute_Call) Return(_a0 *admin.ApiChartsDashboardImportResponseView20430101, _a1 *http.Response, _a2 error) *ChartsDashboardsApi_ImportChartsDashboardExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ChartsDashboardsApi_ImportChartsDashboardExecute_Call) RunAndReturn(run func(admin.ImportChartsDashboardApiRequest) (*admin.ApiChartsDashboardImportResponseView20430101, *http.Response, error)) *ChartsDashboardsApi_ImportChartsDashboardExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ImportChartsDashboardWithParams provides a mock function with given fields: ctx, args
func (_m *ChartsDashboardsApi) ImportChartsDashboardWithParams(ctx context.Context, args *admin.ImportChartsDashboardApiParams) admin.ImportChartsDashboardApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ImportChartsDashboardWithParams")
	}

	var r0 admin.ImportChartsDashboardApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ImportChartsDashboardApiParams) admin.ImportChartsDashboardApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ImportChartsDashboardApiRequest)
	}

	return r0
}

// ChartsDashboardsApi_ImportChartsDashboardWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ImportChartsDashboardWithParams'
type ChartsDashboardsApi_ImportChartsDashboardWithParams_Call struct {
	*mock.Call
}

// ImportChartsDashboardWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ImportChartsDashboardApiParams
func (_e *ChartsDashboardsApi_Expecter) ImportChartsDashboardWithParams(ctx any, args any) *ChartsDashboardsApi_ImportChartsDashboardWithParams_Call {
	return &ChartsDashboardsApi_ImportChartsDashboardWithParams_Call{Call: _e.mock.On("ImportChartsDashboardWithParams", ctx, args)}
}

func (_c *ChartsDashboardsApi_ImportChartsDashboardWithParams_Call) Run(run func(ctx context.Context, args *admin.ImportChartsDashboardApiParams)) *ChartsDashboardsApi_ImportChartsDashboardWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ImportChartsDashboardApiParams))
	})
	return _c
}

func (_c *ChartsDashboardsApi_ImportChartsDashboardWithParams_Call) Return(_a0 admin.ImportChartsDashboardApiRequest) *ChartsDashboardsApi_ImportChartsDashboardWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ChartsDashboardsApi_ImportChartsDashboardWithParams_Call) RunAndReturn(run func(context.Context, *admin.ImportChartsDashboardApiParams) admin.ImportChartsDashboardApiRequest) *ChartsDashboardsApi_ImportChartsDashboardWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewChartsDashboardsApi creates a new instance of ChartsDashboardsApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChartsDashboardsApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChartsDashboardsApi {
	mock := &ChartsDashboardsApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
