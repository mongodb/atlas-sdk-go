// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20241023002/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// EncryptionAtRestUsingCustomerKeyManagementApi is an autogenerated mock type for the EncryptionAtRestUsingCustomerKeyManagementApi type
type EncryptionAtRestUsingCustomerKeyManagementApi struct {
	mock.Mock
}

type EncryptionAtRestUsingCustomerKeyManagementApi_Expecter struct {
	mock *mock.Mock
}

func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) EXPECT() *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_Expecter{mock: &_m.Mock}
}

// CreateEncryptionAtRestPrivateEndpoint provides a mock function with given fields: ctx, groupId, cloudProvider, eARPrivateEndpoint
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) CreateEncryptionAtRestPrivateEndpoint(ctx context.Context, groupId string, cloudProvider string, eARPrivateEndpoint *admin.EARPrivateEndpoint) admin.CreateEncryptionAtRestPrivateEndpointApiRequest {
	ret := _m.Called(ctx, groupId, cloudProvider, eARPrivateEndpoint)

	if len(ret) == 0 {
		panic("no return value specified for CreateEncryptionAtRestPrivateEndpoint")
	}

	var r0 admin.CreateEncryptionAtRestPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.EARPrivateEndpoint) admin.CreateEncryptionAtRestPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, groupId, cloudProvider, eARPrivateEndpoint)
	} else {
		r0 = ret.Get(0).(admin.CreateEncryptionAtRestPrivateEndpointApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateEncryptionAtRestPrivateEndpoint'
type EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call struct {
	*mock.Call
}

// CreateEncryptionAtRestPrivateEndpoint is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - cloudProvider string
//   - eARPrivateEndpoint *admin.EARPrivateEndpoint
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) CreateEncryptionAtRestPrivateEndpoint(ctx any, groupId any, cloudProvider any, eARPrivateEndpoint any) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call{Call: _e.mock.On("CreateEncryptionAtRestPrivateEndpoint", ctx, groupId, cloudProvider, eARPrivateEndpoint)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call) Run(run func(ctx context.Context, groupId string, cloudProvider string, eARPrivateEndpoint *admin.EARPrivateEndpoint)) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.EARPrivateEndpoint))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call) Return(_a0 admin.CreateEncryptionAtRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call) RunAndReturn(run func(context.Context, string, string, *admin.EARPrivateEndpoint) admin.CreateEncryptionAtRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// CreateEncryptionAtRestPrivateEndpointExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) CreateEncryptionAtRestPrivateEndpointExecute(r admin.CreateEncryptionAtRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateEncryptionAtRestPrivateEndpointExecute")
	}

	var r0 *admin.EARPrivateEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateEncryptionAtRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateEncryptionAtRestPrivateEndpointApiRequest) *admin.EARPrivateEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.EARPrivateEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateEncryptionAtRestPrivateEndpointApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateEncryptionAtRestPrivateEndpointApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateEncryptionAtRestPrivateEndpointExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call struct {
	*mock.Call
}

// CreateEncryptionAtRestPrivateEndpointExecute is a helper method to define mock.On call
//   - r admin.CreateEncryptionAtRestPrivateEndpointApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) CreateEncryptionAtRestPrivateEndpointExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call{Call: _e.mock.On("CreateEncryptionAtRestPrivateEndpointExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call) Run(run func(r admin.CreateEncryptionAtRestPrivateEndpointApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateEncryptionAtRestPrivateEndpointApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call) Return(_a0 *admin.EARPrivateEndpoint, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call) RunAndReturn(run func(admin.CreateEncryptionAtRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateEncryptionAtRestPrivateEndpointWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) CreateEncryptionAtRestPrivateEndpointWithParams(ctx context.Context, args *admin.CreateEncryptionAtRestPrivateEndpointApiParams) admin.CreateEncryptionAtRestPrivateEndpointApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateEncryptionAtRestPrivateEndpointWithParams")
	}

	var r0 admin.CreateEncryptionAtRestPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateEncryptionAtRestPrivateEndpointApiParams) admin.CreateEncryptionAtRestPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateEncryptionAtRestPrivateEndpointApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateEncryptionAtRestPrivateEndpointWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call struct {
	*mock.Call
}

// CreateEncryptionAtRestPrivateEndpointWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateEncryptionAtRestPrivateEndpointApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) CreateEncryptionAtRestPrivateEndpointWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call{Call: _e.mock.On("CreateEncryptionAtRestPrivateEndpointWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateEncryptionAtRestPrivateEndpointApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateEncryptionAtRestPrivateEndpointApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call) Return(_a0 admin.CreateEncryptionAtRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateEncryptionAtRestPrivateEndpointApiParams) admin.CreateEncryptionAtRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateEncryptionAtRestPrivateEndpointWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRest provides a mock function with given fields: ctx, groupId
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRest(ctx context.Context, groupId string) admin.GetEncryptionAtRestApiRequest {
	ret := _m.Called(ctx, groupId)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRest")
	}

	var r0 admin.GetEncryptionAtRestApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string) admin.GetEncryptionAtRestApiRequest); ok {
		r0 = rf(ctx, groupId)
	} else {
		r0 = ret.Get(0).(admin.GetEncryptionAtRestApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRest'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call struct {
	*mock.Call
}

// GetEncryptionAtRest is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRest(ctx any, groupId any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call{Call: _e.mock.On("GetEncryptionAtRest", ctx, groupId)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call) Run(run func(ctx context.Context, groupId string)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call) Return(_a0 admin.GetEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call) RunAndReturn(run func(context.Context, string) admin.GetEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestExecute(r admin.GetEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestExecute")
	}

	var r0 *admin.EncryptionAtRest
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetEncryptionAtRestApiRequest) *admin.EncryptionAtRest); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.EncryptionAtRest)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetEncryptionAtRestApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetEncryptionAtRestApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call struct {
	*mock.Call
}

// GetEncryptionAtRestExecute is a helper method to define mock.On call
//   - r admin.GetEncryptionAtRestApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call{Call: _e.mock.On("GetEncryptionAtRestExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call) Run(run func(r admin.GetEncryptionAtRestApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetEncryptionAtRestApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call) Return(_a0 *admin.EncryptionAtRest, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call) RunAndReturn(run func(admin.GetEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestPrivateEndpoint provides a mock function with given fields: ctx, groupId, cloudProvider, endpointId
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestPrivateEndpoint(ctx context.Context, groupId string, cloudProvider string, endpointId string) admin.GetEncryptionAtRestPrivateEndpointApiRequest {
	ret := _m.Called(ctx, groupId, cloudProvider, endpointId)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestPrivateEndpoint")
	}

	var r0 admin.GetEncryptionAtRestPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.GetEncryptionAtRestPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, groupId, cloudProvider, endpointId)
	} else {
		r0 = ret.Get(0).(admin.GetEncryptionAtRestPrivateEndpointApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestPrivateEndpoint'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call struct {
	*mock.Call
}

// GetEncryptionAtRestPrivateEndpoint is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - cloudProvider string
//   - endpointId string
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestPrivateEndpoint(ctx any, groupId any, cloudProvider any, endpointId any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call{Call: _e.mock.On("GetEncryptionAtRestPrivateEndpoint", ctx, groupId, cloudProvider, endpointId)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call) Run(run func(ctx context.Context, groupId string, cloudProvider string, endpointId string)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call) Return(_a0 admin.GetEncryptionAtRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call) RunAndReturn(run func(context.Context, string, string, string) admin.GetEncryptionAtRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestPrivateEndpointExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestPrivateEndpointExecute(r admin.GetEncryptionAtRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestPrivateEndpointExecute")
	}

	var r0 *admin.EARPrivateEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetEncryptionAtRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetEncryptionAtRestPrivateEndpointApiRequest) *admin.EARPrivateEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.EARPrivateEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetEncryptionAtRestPrivateEndpointApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetEncryptionAtRestPrivateEndpointApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestPrivateEndpointExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call struct {
	*mock.Call
}

// GetEncryptionAtRestPrivateEndpointExecute is a helper method to define mock.On call
//   - r admin.GetEncryptionAtRestPrivateEndpointApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestPrivateEndpointExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call{Call: _e.mock.On("GetEncryptionAtRestPrivateEndpointExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call) Run(run func(r admin.GetEncryptionAtRestPrivateEndpointApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetEncryptionAtRestPrivateEndpointApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call) Return(_a0 *admin.EARPrivateEndpoint, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call) RunAndReturn(run func(admin.GetEncryptionAtRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestPrivateEndpointWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestPrivateEndpointWithParams(ctx context.Context, args *admin.GetEncryptionAtRestPrivateEndpointApiParams) admin.GetEncryptionAtRestPrivateEndpointApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestPrivateEndpointWithParams")
	}

	var r0 admin.GetEncryptionAtRestPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetEncryptionAtRestPrivateEndpointApiParams) admin.GetEncryptionAtRestPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetEncryptionAtRestPrivateEndpointApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestPrivateEndpointWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call struct {
	*mock.Call
}

// GetEncryptionAtRestPrivateEndpointWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetEncryptionAtRestPrivateEndpointApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestPrivateEndpointWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call{Call: _e.mock.On("GetEncryptionAtRestPrivateEndpointWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call) Run(run func(ctx context.Context, args *admin.GetEncryptionAtRestPrivateEndpointApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetEncryptionAtRestPrivateEndpointApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call) Return(_a0 admin.GetEncryptionAtRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetEncryptionAtRestPrivateEndpointApiParams) admin.GetEncryptionAtRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestPrivateEndpointsForCloudProvider provides a mock function with given fields: ctx, groupId, cloudProvider
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestPrivateEndpointsForCloudProvider(ctx context.Context, groupId string, cloudProvider string) admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest {
	ret := _m.Called(ctx, groupId, cloudProvider)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestPrivateEndpointsForCloudProvider")
	}

	var r0 admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest); ok {
		r0 = rf(ctx, groupId, cloudProvider)
	} else {
		r0 = ret.Get(0).(admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestPrivateEndpointsForCloudProvider'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call struct {
	*mock.Call
}

// GetEncryptionAtRestPrivateEndpointsForCloudProvider is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - cloudProvider string
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestPrivateEndpointsForCloudProvider(ctx any, groupId any, cloudProvider any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call{Call: _e.mock.On("GetEncryptionAtRestPrivateEndpointsForCloudProvider", ctx, groupId, cloudProvider)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call) Run(run func(ctx context.Context, groupId string, cloudProvider string)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call) Return(_a0 admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call) RunAndReturn(run func(context.Context, string, string) admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProvider_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute(r admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) (*admin.PaginatedApiAtlasEARPrivateEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute")
	}

	var r0 *admin.PaginatedApiAtlasEARPrivateEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) (*admin.PaginatedApiAtlasEARPrivateEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) *admin.PaginatedApiAtlasEARPrivateEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.PaginatedApiAtlasEARPrivateEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call struct {
	*mock.Call
}

// GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute is a helper method to define mock.On call
//   - r admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call{Call: _e.mock.On("GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call) Run(run func(r admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call) Return(_a0 *admin.PaginatedApiAtlasEARPrivateEndpoint, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call) RunAndReturn(run func(admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) (*admin.PaginatedApiAtlasEARPrivateEndpoint, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams(ctx context.Context, args *admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiParams) admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams")
	}

	var r0 admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiParams) admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call struct {
	*mock.Call
}

// GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call{Call: _e.mock.On("GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call) Run(run func(ctx context.Context, args *admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call) Return(_a0 admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiParams) admin.GetEncryptionAtRestPrivateEndpointsForCloudProviderApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestPrivateEndpointsForCloudProviderWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestWithParams(ctx context.Context, args *admin.GetEncryptionAtRestApiParams) admin.GetEncryptionAtRestApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestWithParams")
	}

	var r0 admin.GetEncryptionAtRestApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetEncryptionAtRestApiParams) admin.GetEncryptionAtRestApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetEncryptionAtRestApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call struct {
	*mock.Call
}

// GetEncryptionAtRestWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetEncryptionAtRestApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call{Call: _e.mock.On("GetEncryptionAtRestWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call) Run(run func(ctx context.Context, args *admin.GetEncryptionAtRestApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetEncryptionAtRestApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call) Return(_a0 admin.GetEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetEncryptionAtRestApiParams) admin.GetEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// RequestEncryptionAtRestPrivateEndpointDeletion provides a mock function with given fields: ctx, groupId, cloudProvider, endpointId
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) RequestEncryptionAtRestPrivateEndpointDeletion(ctx context.Context, groupId string, cloudProvider string, endpointId string) admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest {
	ret := _m.Called(ctx, groupId, cloudProvider, endpointId)

	if len(ret) == 0 {
		panic("no return value specified for RequestEncryptionAtRestPrivateEndpointDeletion")
	}

	var r0 admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest); ok {
		r0 = rf(ctx, groupId, cloudProvider, endpointId)
	} else {
		r0 = ret.Get(0).(admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestEncryptionAtRestPrivateEndpointDeletion'
type EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call struct {
	*mock.Call
}

// RequestEncryptionAtRestPrivateEndpointDeletion is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - cloudProvider string
//   - endpointId string
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) RequestEncryptionAtRestPrivateEndpointDeletion(ctx any, groupId any, cloudProvider any, endpointId any) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call{Call: _e.mock.On("RequestEncryptionAtRestPrivateEndpointDeletion", ctx, groupId, cloudProvider, endpointId)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call) Run(run func(ctx context.Context, groupId string, cloudProvider string, endpointId string)) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call) Return(_a0 admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call) RunAndReturn(run func(context.Context, string, string, string) admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletion_Call {
	_c.Call.Return(run)
	return _c
}

// RequestEncryptionAtRestPrivateEndpointDeletionExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) RequestEncryptionAtRestPrivateEndpointDeletionExecute(r admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) (any, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for RequestEncryptionAtRestPrivateEndpointDeletionExecute")
	}

	var r0 any
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) (any, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) any); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(any)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestEncryptionAtRestPrivateEndpointDeletionExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call struct {
	*mock.Call
}

// RequestEncryptionAtRestPrivateEndpointDeletionExecute is a helper method to define mock.On call
//   - r admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) RequestEncryptionAtRestPrivateEndpointDeletionExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call{Call: _e.mock.On("RequestEncryptionAtRestPrivateEndpointDeletionExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call) Run(run func(r admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call) Return(_a0 any, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call) RunAndReturn(run func(admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) (any, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionExecute_Call {
	_c.Call.Return(run)
	return _c
}

// RequestEncryptionAtRestPrivateEndpointDeletionWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) RequestEncryptionAtRestPrivateEndpointDeletionWithParams(ctx context.Context, args *admin.RequestEncryptionAtRestPrivateEndpointDeletionApiParams) admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for RequestEncryptionAtRestPrivateEndpointDeletionWithParams")
	}

	var r0 admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.RequestEncryptionAtRestPrivateEndpointDeletionApiParams) admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestEncryptionAtRestPrivateEndpointDeletionWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call struct {
	*mock.Call
}

// RequestEncryptionAtRestPrivateEndpointDeletionWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.RequestEncryptionAtRestPrivateEndpointDeletionApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) RequestEncryptionAtRestPrivateEndpointDeletionWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call{Call: _e.mock.On("RequestEncryptionAtRestPrivateEndpointDeletionWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call) Run(run func(ctx context.Context, args *admin.RequestEncryptionAtRestPrivateEndpointDeletionApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.RequestEncryptionAtRestPrivateEndpointDeletionApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call) Return(_a0 admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call) RunAndReturn(run func(context.Context, *admin.RequestEncryptionAtRestPrivateEndpointDeletionApiParams) admin.RequestEncryptionAtRestPrivateEndpointDeletionApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestEncryptionAtRestPrivateEndpointDeletionWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateEncryptionAtRest provides a mock function with given fields: ctx, groupId, encryptionAtRest
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) UpdateEncryptionAtRest(ctx context.Context, groupId string, encryptionAtRest *admin.EncryptionAtRest) admin.UpdateEncryptionAtRestApiRequest {
	ret := _m.Called(ctx, groupId, encryptionAtRest)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEncryptionAtRest")
	}

	var r0 admin.UpdateEncryptionAtRestApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.EncryptionAtRest) admin.UpdateEncryptionAtRestApiRequest); ok {
		r0 = rf(ctx, groupId, encryptionAtRest)
	} else {
		r0 = ret.Get(0).(admin.UpdateEncryptionAtRestApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateEncryptionAtRest'
type EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call struct {
	*mock.Call
}

// UpdateEncryptionAtRest is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - encryptionAtRest *admin.EncryptionAtRest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) UpdateEncryptionAtRest(ctx any, groupId any, encryptionAtRest any) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call{Call: _e.mock.On("UpdateEncryptionAtRest", ctx, groupId, encryptionAtRest)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call) Run(run func(ctx context.Context, groupId string, encryptionAtRest *admin.EncryptionAtRest)) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.EncryptionAtRest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call) Return(_a0 admin.UpdateEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call) RunAndReturn(run func(context.Context, string, *admin.EncryptionAtRest) admin.UpdateEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateEncryptionAtRestExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) UpdateEncryptionAtRestExecute(r admin.UpdateEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEncryptionAtRestExecute")
	}

	var r0 *admin.EncryptionAtRest
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.UpdateEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.UpdateEncryptionAtRestApiRequest) *admin.EncryptionAtRest); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.EncryptionAtRest)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.UpdateEncryptionAtRestApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.UpdateEncryptionAtRestApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateEncryptionAtRestExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call struct {
	*mock.Call
}

// UpdateEncryptionAtRestExecute is a helper method to define mock.On call
//   - r admin.UpdateEncryptionAtRestApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) UpdateEncryptionAtRestExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call{Call: _e.mock.On("UpdateEncryptionAtRestExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call) Run(run func(r admin.UpdateEncryptionAtRestApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.UpdateEncryptionAtRestApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call) Return(_a0 *admin.EncryptionAtRest, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call) RunAndReturn(run func(admin.UpdateEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateEncryptionAtRestWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) UpdateEncryptionAtRestWithParams(ctx context.Context, args *admin.UpdateEncryptionAtRestApiParams) admin.UpdateEncryptionAtRestApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEncryptionAtRestWithParams")
	}

	var r0 admin.UpdateEncryptionAtRestApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.UpdateEncryptionAtRestApiParams) admin.UpdateEncryptionAtRestApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.UpdateEncryptionAtRestApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateEncryptionAtRestWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call struct {
	*mock.Call
}

// UpdateEncryptionAtRestWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.UpdateEncryptionAtRestApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) UpdateEncryptionAtRestWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call{Call: _e.mock.On("UpdateEncryptionAtRestWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call) Run(run func(ctx context.Context, args *admin.UpdateEncryptionAtRestApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.UpdateEncryptionAtRestApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call) Return(_a0 admin.UpdateEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call) RunAndReturn(run func(context.Context, *admin.UpdateEncryptionAtRestApiParams) admin.UpdateEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewEncryptionAtRestUsingCustomerKeyManagementApi creates a new instance of EncryptionAtRestUsingCustomerKeyManagementApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEncryptionAtRestUsingCustomerKeyManagementApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *EncryptionAtRestUsingCustomerKeyManagementApi {
	mock := &EncryptionAtRestUsingCustomerKeyManagementApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
