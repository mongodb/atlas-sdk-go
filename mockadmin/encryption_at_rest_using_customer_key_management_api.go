// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20250312008/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// EncryptionAtRestUsingCustomerKeyManagementApi is an autogenerated mock type for the EncryptionAtRestUsingCustomerKeyManagementApi type
type EncryptionAtRestUsingCustomerKeyManagementApi struct {
	mock.Mock
}

type EncryptionAtRestUsingCustomerKeyManagementApi_Expecter struct {
	mock *mock.Mock
}

func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) EXPECT() *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_Expecter{mock: &_m.Mock}
}

// CreateRestPrivateEndpoint provides a mock function with given fields: ctx, groupId, cloudProvider, eARPrivateEndpoint
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) CreateRestPrivateEndpoint(ctx context.Context, groupId string, cloudProvider string, eARPrivateEndpoint *admin.EARPrivateEndpoint) admin.CreateRestPrivateEndpointApiRequest {
	ret := _m.Called(ctx, groupId, cloudProvider, eARPrivateEndpoint)

	if len(ret) == 0 {
		panic("no return value specified for CreateRestPrivateEndpoint")
	}

	var r0 admin.CreateRestPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.EARPrivateEndpoint) admin.CreateRestPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, groupId, cloudProvider, eARPrivateEndpoint)
	} else {
		r0 = ret.Get(0).(admin.CreateRestPrivateEndpointApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateRestPrivateEndpoint'
type EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call struct {
	*mock.Call
}

// CreateRestPrivateEndpoint is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - cloudProvider string
//   - eARPrivateEndpoint *admin.EARPrivateEndpoint
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) CreateRestPrivateEndpoint(ctx any, groupId any, cloudProvider any, eARPrivateEndpoint any) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call{Call: _e.mock.On("CreateRestPrivateEndpoint", ctx, groupId, cloudProvider, eARPrivateEndpoint)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call) Run(run func(ctx context.Context, groupId string, cloudProvider string, eARPrivateEndpoint *admin.EARPrivateEndpoint)) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.EARPrivateEndpoint))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call) Return(_a0 admin.CreateRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call) RunAndReturn(run func(context.Context, string, string, *admin.EARPrivateEndpoint) admin.CreateRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// CreateRestPrivateEndpointExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) CreateRestPrivateEndpointExecute(r admin.CreateRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateRestPrivateEndpointExecute")
	}

	var r0 *admin.EARPrivateEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateRestPrivateEndpointApiRequest) *admin.EARPrivateEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.EARPrivateEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateRestPrivateEndpointApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateRestPrivateEndpointApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateRestPrivateEndpointExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call struct {
	*mock.Call
}

// CreateRestPrivateEndpointExecute is a helper method to define mock.On call
//   - r admin.CreateRestPrivateEndpointApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) CreateRestPrivateEndpointExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call{Call: _e.mock.On("CreateRestPrivateEndpointExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call) Run(run func(r admin.CreateRestPrivateEndpointApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateRestPrivateEndpointApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call) Return(_a0 *admin.EARPrivateEndpoint, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call) RunAndReturn(run func(admin.CreateRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateRestPrivateEndpointWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) CreateRestPrivateEndpointWithParams(ctx context.Context, args *admin.CreateRestPrivateEndpointApiParams) admin.CreateRestPrivateEndpointApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateRestPrivateEndpointWithParams")
	}

	var r0 admin.CreateRestPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateRestPrivateEndpointApiParams) admin.CreateRestPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateRestPrivateEndpointApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateRestPrivateEndpointWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call struct {
	*mock.Call
}

// CreateRestPrivateEndpointWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateRestPrivateEndpointApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) CreateRestPrivateEndpointWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call{Call: _e.mock.On("CreateRestPrivateEndpointWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateRestPrivateEndpointApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateRestPrivateEndpointApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call) Return(_a0 admin.CreateRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateRestPrivateEndpointApiParams) admin.CreateRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_CreateRestPrivateEndpointWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRest provides a mock function with given fields: ctx, groupId
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRest(ctx context.Context, groupId string) admin.GetEncryptionAtRestApiRequest {
	ret := _m.Called(ctx, groupId)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRest")
	}

	var r0 admin.GetEncryptionAtRestApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string) admin.GetEncryptionAtRestApiRequest); ok {
		r0 = rf(ctx, groupId)
	} else {
		r0 = ret.Get(0).(admin.GetEncryptionAtRestApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRest'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call struct {
	*mock.Call
}

// GetEncryptionAtRest is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRest(ctx any, groupId any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call{Call: _e.mock.On("GetEncryptionAtRest", ctx, groupId)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call) Run(run func(ctx context.Context, groupId string)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call) Return(_a0 admin.GetEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call) RunAndReturn(run func(context.Context, string) admin.GetEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRest_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestExecute(r admin.GetEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestExecute")
	}

	var r0 *admin.EncryptionAtRest
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetEncryptionAtRestApiRequest) *admin.EncryptionAtRest); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.EncryptionAtRest)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetEncryptionAtRestApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetEncryptionAtRestApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call struct {
	*mock.Call
}

// GetEncryptionAtRestExecute is a helper method to define mock.On call
//   - r admin.GetEncryptionAtRestApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call{Call: _e.mock.On("GetEncryptionAtRestExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call) Run(run func(r admin.GetEncryptionAtRestApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetEncryptionAtRestApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call) Return(_a0 *admin.EncryptionAtRest, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call) RunAndReturn(run func(admin.GetEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetEncryptionAtRestWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetEncryptionAtRestWithParams(ctx context.Context, args *admin.GetEncryptionAtRestApiParams) admin.GetEncryptionAtRestApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionAtRestWithParams")
	}

	var r0 admin.GetEncryptionAtRestApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetEncryptionAtRestApiParams) admin.GetEncryptionAtRestApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetEncryptionAtRestApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEncryptionAtRestWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call struct {
	*mock.Call
}

// GetEncryptionAtRestWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetEncryptionAtRestApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetEncryptionAtRestWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call{Call: _e.mock.On("GetEncryptionAtRestWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call) Run(run func(ctx context.Context, args *admin.GetEncryptionAtRestApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetEncryptionAtRestApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call) Return(_a0 admin.GetEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetEncryptionAtRestApiParams) admin.GetEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetEncryptionAtRestWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetRestPrivateEndpoint provides a mock function with given fields: ctx, groupId, cloudProvider, endpointId
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetRestPrivateEndpoint(ctx context.Context, groupId string, cloudProvider string, endpointId string) admin.GetRestPrivateEndpointApiRequest {
	ret := _m.Called(ctx, groupId, cloudProvider, endpointId)

	if len(ret) == 0 {
		panic("no return value specified for GetRestPrivateEndpoint")
	}

	var r0 admin.GetRestPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.GetRestPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, groupId, cloudProvider, endpointId)
	} else {
		r0 = ret.Get(0).(admin.GetRestPrivateEndpointApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRestPrivateEndpoint'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call struct {
	*mock.Call
}

// GetRestPrivateEndpoint is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - cloudProvider string
//   - endpointId string
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetRestPrivateEndpoint(ctx any, groupId any, cloudProvider any, endpointId any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call{Call: _e.mock.On("GetRestPrivateEndpoint", ctx, groupId, cloudProvider, endpointId)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call) Run(run func(ctx context.Context, groupId string, cloudProvider string, endpointId string)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call) Return(_a0 admin.GetRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call) RunAndReturn(run func(context.Context, string, string, string) admin.GetRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// GetRestPrivateEndpointExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetRestPrivateEndpointExecute(r admin.GetRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetRestPrivateEndpointExecute")
	}

	var r0 *admin.EARPrivateEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetRestPrivateEndpointApiRequest) *admin.EARPrivateEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.EARPrivateEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetRestPrivateEndpointApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetRestPrivateEndpointApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRestPrivateEndpointExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call struct {
	*mock.Call
}

// GetRestPrivateEndpointExecute is a helper method to define mock.On call
//   - r admin.GetRestPrivateEndpointApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetRestPrivateEndpointExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call{Call: _e.mock.On("GetRestPrivateEndpointExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call) Run(run func(r admin.GetRestPrivateEndpointApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetRestPrivateEndpointApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call) Return(_a0 *admin.EARPrivateEndpoint, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call) RunAndReturn(run func(admin.GetRestPrivateEndpointApiRequest) (*admin.EARPrivateEndpoint, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetRestPrivateEndpointWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) GetRestPrivateEndpointWithParams(ctx context.Context, args *admin.GetRestPrivateEndpointApiParams) admin.GetRestPrivateEndpointApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetRestPrivateEndpointWithParams")
	}

	var r0 admin.GetRestPrivateEndpointApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetRestPrivateEndpointApiParams) admin.GetRestPrivateEndpointApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetRestPrivateEndpointApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRestPrivateEndpointWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call struct {
	*mock.Call
}

// GetRestPrivateEndpointWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetRestPrivateEndpointApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) GetRestPrivateEndpointWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call{Call: _e.mock.On("GetRestPrivateEndpointWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call) Run(run func(ctx context.Context, args *admin.GetRestPrivateEndpointApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetRestPrivateEndpointApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call) Return(_a0 admin.GetRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetRestPrivateEndpointApiParams) admin.GetRestPrivateEndpointApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_GetRestPrivateEndpointWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListRestPrivateEndpoints provides a mock function with given fields: ctx, groupId, cloudProvider
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) ListRestPrivateEndpoints(ctx context.Context, groupId string, cloudProvider string) admin.ListRestPrivateEndpointsApiRequest {
	ret := _m.Called(ctx, groupId, cloudProvider)

	if len(ret) == 0 {
		panic("no return value specified for ListRestPrivateEndpoints")
	}

	var r0 admin.ListRestPrivateEndpointsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.ListRestPrivateEndpointsApiRequest); ok {
		r0 = rf(ctx, groupId, cloudProvider)
	} else {
		r0 = ret.Get(0).(admin.ListRestPrivateEndpointsApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListRestPrivateEndpoints'
type EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call struct {
	*mock.Call
}

// ListRestPrivateEndpoints is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - cloudProvider string
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) ListRestPrivateEndpoints(ctx any, groupId any, cloudProvider any) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call{Call: _e.mock.On("ListRestPrivateEndpoints", ctx, groupId, cloudProvider)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call) Run(run func(ctx context.Context, groupId string, cloudProvider string)) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call) Return(_a0 admin.ListRestPrivateEndpointsApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call) RunAndReturn(run func(context.Context, string, string) admin.ListRestPrivateEndpointsApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpoints_Call {
	_c.Call.Return(run)
	return _c
}

// ListRestPrivateEndpointsExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) ListRestPrivateEndpointsExecute(r admin.ListRestPrivateEndpointsApiRequest) (*admin.PaginatedApiAtlasEARPrivateEndpoint, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListRestPrivateEndpointsExecute")
	}

	var r0 *admin.PaginatedApiAtlasEARPrivateEndpoint
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListRestPrivateEndpointsApiRequest) (*admin.PaginatedApiAtlasEARPrivateEndpoint, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListRestPrivateEndpointsApiRequest) *admin.PaginatedApiAtlasEARPrivateEndpoint); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.PaginatedApiAtlasEARPrivateEndpoint)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListRestPrivateEndpointsApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListRestPrivateEndpointsApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListRestPrivateEndpointsExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call struct {
	*mock.Call
}

// ListRestPrivateEndpointsExecute is a helper method to define mock.On call
//   - r admin.ListRestPrivateEndpointsApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) ListRestPrivateEndpointsExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call{Call: _e.mock.On("ListRestPrivateEndpointsExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call) Run(run func(r admin.ListRestPrivateEndpointsApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListRestPrivateEndpointsApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call) Return(_a0 *admin.PaginatedApiAtlasEARPrivateEndpoint, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call) RunAndReturn(run func(admin.ListRestPrivateEndpointsApiRequest) (*admin.PaginatedApiAtlasEARPrivateEndpoint, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListRestPrivateEndpointsWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) ListRestPrivateEndpointsWithParams(ctx context.Context, args *admin.ListRestPrivateEndpointsApiParams) admin.ListRestPrivateEndpointsApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListRestPrivateEndpointsWithParams")
	}

	var r0 admin.ListRestPrivateEndpointsApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListRestPrivateEndpointsApiParams) admin.ListRestPrivateEndpointsApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListRestPrivateEndpointsApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListRestPrivateEndpointsWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call struct {
	*mock.Call
}

// ListRestPrivateEndpointsWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListRestPrivateEndpointsApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) ListRestPrivateEndpointsWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call{Call: _e.mock.On("ListRestPrivateEndpointsWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call) Run(run func(ctx context.Context, args *admin.ListRestPrivateEndpointsApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListRestPrivateEndpointsApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call) Return(_a0 admin.ListRestPrivateEndpointsApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListRestPrivateEndpointsApiParams) admin.ListRestPrivateEndpointsApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_ListRestPrivateEndpointsWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// RequestPrivateEndpointDeletion provides a mock function with given fields: ctx, groupId, cloudProvider, endpointId
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) RequestPrivateEndpointDeletion(ctx context.Context, groupId string, cloudProvider string, endpointId string) admin.RequestPrivateEndpointDeletionApiRequest {
	ret := _m.Called(ctx, groupId, cloudProvider, endpointId)

	if len(ret) == 0 {
		panic("no return value specified for RequestPrivateEndpointDeletion")
	}

	var r0 admin.RequestPrivateEndpointDeletionApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.RequestPrivateEndpointDeletionApiRequest); ok {
		r0 = rf(ctx, groupId, cloudProvider, endpointId)
	} else {
		r0 = ret.Get(0).(admin.RequestPrivateEndpointDeletionApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestPrivateEndpointDeletion'
type EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call struct {
	*mock.Call
}

// RequestPrivateEndpointDeletion is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - cloudProvider string
//   - endpointId string
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) RequestPrivateEndpointDeletion(ctx any, groupId any, cloudProvider any, endpointId any) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call{Call: _e.mock.On("RequestPrivateEndpointDeletion", ctx, groupId, cloudProvider, endpointId)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call) Run(run func(ctx context.Context, groupId string, cloudProvider string, endpointId string)) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call) Return(_a0 admin.RequestPrivateEndpointDeletionApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call) RunAndReturn(run func(context.Context, string, string, string) admin.RequestPrivateEndpointDeletionApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletion_Call {
	_c.Call.Return(run)
	return _c
}

// RequestPrivateEndpointDeletionExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) RequestPrivateEndpointDeletionExecute(r admin.RequestPrivateEndpointDeletionApiRequest) (*http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for RequestPrivateEndpointDeletionExecute")
	}

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(admin.RequestPrivateEndpointDeletionApiRequest) (*http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.RequestPrivateEndpointDeletionApiRequest) *http.Response); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.RequestPrivateEndpointDeletionApiRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestPrivateEndpointDeletionExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call struct {
	*mock.Call
}

// RequestPrivateEndpointDeletionExecute is a helper method to define mock.On call
//   - r admin.RequestPrivateEndpointDeletionApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) RequestPrivateEndpointDeletionExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call{Call: _e.mock.On("RequestPrivateEndpointDeletionExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call) Run(run func(r admin.RequestPrivateEndpointDeletionApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.RequestPrivateEndpointDeletionApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call) Return(_a0 *http.Response, _a1 error) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call) RunAndReturn(run func(admin.RequestPrivateEndpointDeletionApiRequest) (*http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionExecute_Call {
	_c.Call.Return(run)
	return _c
}

// RequestPrivateEndpointDeletionWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) RequestPrivateEndpointDeletionWithParams(ctx context.Context, args *admin.RequestPrivateEndpointDeletionApiParams) admin.RequestPrivateEndpointDeletionApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for RequestPrivateEndpointDeletionWithParams")
	}

	var r0 admin.RequestPrivateEndpointDeletionApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.RequestPrivateEndpointDeletionApiParams) admin.RequestPrivateEndpointDeletionApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.RequestPrivateEndpointDeletionApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestPrivateEndpointDeletionWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call struct {
	*mock.Call
}

// RequestPrivateEndpointDeletionWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.RequestPrivateEndpointDeletionApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) RequestPrivateEndpointDeletionWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call{Call: _e.mock.On("RequestPrivateEndpointDeletionWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call) Run(run func(ctx context.Context, args *admin.RequestPrivateEndpointDeletionApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.RequestPrivateEndpointDeletionApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call) Return(_a0 admin.RequestPrivateEndpointDeletionApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call) RunAndReturn(run func(context.Context, *admin.RequestPrivateEndpointDeletionApiParams) admin.RequestPrivateEndpointDeletionApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_RequestPrivateEndpointDeletionWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateEncryptionAtRest provides a mock function with given fields: ctx, groupId, encryptionAtRest
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) UpdateEncryptionAtRest(ctx context.Context, groupId string, encryptionAtRest *admin.EncryptionAtRest) admin.UpdateEncryptionAtRestApiRequest {
	ret := _m.Called(ctx, groupId, encryptionAtRest)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEncryptionAtRest")
	}

	var r0 admin.UpdateEncryptionAtRestApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, *admin.EncryptionAtRest) admin.UpdateEncryptionAtRestApiRequest); ok {
		r0 = rf(ctx, groupId, encryptionAtRest)
	} else {
		r0 = ret.Get(0).(admin.UpdateEncryptionAtRestApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateEncryptionAtRest'
type EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call struct {
	*mock.Call
}

// UpdateEncryptionAtRest is a helper method to define mock.On call
//   - ctx context.Context
//   - groupId string
//   - encryptionAtRest *admin.EncryptionAtRest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) UpdateEncryptionAtRest(ctx any, groupId any, encryptionAtRest any) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call{Call: _e.mock.On("UpdateEncryptionAtRest", ctx, groupId, encryptionAtRest)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call) Run(run func(ctx context.Context, groupId string, encryptionAtRest *admin.EncryptionAtRest)) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*admin.EncryptionAtRest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call) Return(_a0 admin.UpdateEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call) RunAndReturn(run func(context.Context, string, *admin.EncryptionAtRest) admin.UpdateEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRest_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateEncryptionAtRestExecute provides a mock function with given fields: r
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) UpdateEncryptionAtRestExecute(r admin.UpdateEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEncryptionAtRestExecute")
	}

	var r0 *admin.EncryptionAtRest
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.UpdateEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.UpdateEncryptionAtRestApiRequest) *admin.EncryptionAtRest); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.EncryptionAtRest)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.UpdateEncryptionAtRestApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.UpdateEncryptionAtRestApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateEncryptionAtRestExecute'
type EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call struct {
	*mock.Call
}

// UpdateEncryptionAtRestExecute is a helper method to define mock.On call
//   - r admin.UpdateEncryptionAtRestApiRequest
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) UpdateEncryptionAtRestExecute(r any) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call{Call: _e.mock.On("UpdateEncryptionAtRestExecute", r)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call) Run(run func(r admin.UpdateEncryptionAtRestApiRequest)) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.UpdateEncryptionAtRestApiRequest))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call) Return(_a0 *admin.EncryptionAtRest, _a1 *http.Response, _a2 error) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call) RunAndReturn(run func(admin.UpdateEncryptionAtRestApiRequest) (*admin.EncryptionAtRest, *http.Response, error)) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestExecute_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateEncryptionAtRestWithParams provides a mock function with given fields: ctx, args
func (_m *EncryptionAtRestUsingCustomerKeyManagementApi) UpdateEncryptionAtRestWithParams(ctx context.Context, args *admin.UpdateEncryptionAtRestApiParams) admin.UpdateEncryptionAtRestApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEncryptionAtRestWithParams")
	}

	var r0 admin.UpdateEncryptionAtRestApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.UpdateEncryptionAtRestApiParams) admin.UpdateEncryptionAtRestApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.UpdateEncryptionAtRestApiRequest)
	}

	return r0
}

// EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateEncryptionAtRestWithParams'
type EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call struct {
	*mock.Call
}

// UpdateEncryptionAtRestWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.UpdateEncryptionAtRestApiParams
func (_e *EncryptionAtRestUsingCustomerKeyManagementApi_Expecter) UpdateEncryptionAtRestWithParams(ctx any, args any) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call {
	return &EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call{Call: _e.mock.On("UpdateEncryptionAtRestWithParams", ctx, args)}
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call) Run(run func(ctx context.Context, args *admin.UpdateEncryptionAtRestApiParams)) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.UpdateEncryptionAtRestApiParams))
	})
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call) Return(_a0 admin.UpdateEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call) RunAndReturn(run func(context.Context, *admin.UpdateEncryptionAtRestApiParams) admin.UpdateEncryptionAtRestApiRequest) *EncryptionAtRestUsingCustomerKeyManagementApi_UpdateEncryptionAtRestWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewEncryptionAtRestUsingCustomerKeyManagementApi creates a new instance of EncryptionAtRestUsingCustomerKeyManagementApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEncryptionAtRestUsingCustomerKeyManagementApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *EncryptionAtRestUsingCustomerKeyManagementApi {
	mock := &EncryptionAtRestUsingCustomerKeyManagementApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
