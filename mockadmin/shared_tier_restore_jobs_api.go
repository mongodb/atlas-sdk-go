// Code generated by mockery. DO NOT EDIT.

package mockadmin

import (
	context "context"

	admin "go.mongodb.org/atlas-sdk/v20250312001/admin"

	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// SharedTierRestoreJobsApi is an autogenerated mock type for the SharedTierRestoreJobsApi type
type SharedTierRestoreJobsApi struct {
	mock.Mock
}

type SharedTierRestoreJobsApi_Expecter struct {
	mock *mock.Mock
}

func (_m *SharedTierRestoreJobsApi) EXPECT() *SharedTierRestoreJobsApi_Expecter {
	return &SharedTierRestoreJobsApi_Expecter{mock: &_m.Mock}
}

// CreateBackupTenantRestore provides a mock function with given fields: ctx, clusterName, groupId, tenantRestore
func (_m *SharedTierRestoreJobsApi) CreateBackupTenantRestore(ctx context.Context, clusterName string, groupId string, tenantRestore *admin.TenantRestore) admin.CreateBackupTenantRestoreApiRequest {
	ret := _m.Called(ctx, clusterName, groupId, tenantRestore)

	if len(ret) == 0 {
		panic("no return value specified for CreateBackupTenantRestore")
	}

	var r0 admin.CreateBackupTenantRestoreApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *admin.TenantRestore) admin.CreateBackupTenantRestoreApiRequest); ok {
		r0 = rf(ctx, clusterName, groupId, tenantRestore)
	} else {
		r0 = ret.Get(0).(admin.CreateBackupTenantRestoreApiRequest)
	}

	return r0
}

// SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateBackupTenantRestore'
type SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call struct {
	*mock.Call
}

// CreateBackupTenantRestore is a helper method to define mock.On call
//   - ctx context.Context
//   - clusterName string
//   - groupId string
//   - tenantRestore *admin.TenantRestore
func (_e *SharedTierRestoreJobsApi_Expecter) CreateBackupTenantRestore(ctx any, clusterName any, groupId any, tenantRestore any) *SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call {
	return &SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call{Call: _e.mock.On("CreateBackupTenantRestore", ctx, clusterName, groupId, tenantRestore)}
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call) Run(run func(ctx context.Context, clusterName string, groupId string, tenantRestore *admin.TenantRestore)) *SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*admin.TenantRestore))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call) Return(_a0 admin.CreateBackupTenantRestoreApiRequest) *SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call) RunAndReturn(run func(context.Context, string, string, *admin.TenantRestore) admin.CreateBackupTenantRestoreApiRequest) *SharedTierRestoreJobsApi_CreateBackupTenantRestore_Call {
	_c.Call.Return(run)
	return _c
}

// CreateBackupTenantRestoreExecute provides a mock function with given fields: r
func (_m *SharedTierRestoreJobsApi) CreateBackupTenantRestoreExecute(r admin.CreateBackupTenantRestoreApiRequest) (*admin.TenantRestore, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for CreateBackupTenantRestoreExecute")
	}

	var r0 *admin.TenantRestore
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.CreateBackupTenantRestoreApiRequest) (*admin.TenantRestore, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.CreateBackupTenantRestoreApiRequest) *admin.TenantRestore); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.TenantRestore)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.CreateBackupTenantRestoreApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.CreateBackupTenantRestoreApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateBackupTenantRestoreExecute'
type SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call struct {
	*mock.Call
}

// CreateBackupTenantRestoreExecute is a helper method to define mock.On call
//   - r admin.CreateBackupTenantRestoreApiRequest
func (_e *SharedTierRestoreJobsApi_Expecter) CreateBackupTenantRestoreExecute(r any) *SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call {
	return &SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call{Call: _e.mock.On("CreateBackupTenantRestoreExecute", r)}
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call) Run(run func(r admin.CreateBackupTenantRestoreApiRequest)) *SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.CreateBackupTenantRestoreApiRequest))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call) Return(_a0 *admin.TenantRestore, _a1 *http.Response, _a2 error) *SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call) RunAndReturn(run func(admin.CreateBackupTenantRestoreApiRequest) (*admin.TenantRestore, *http.Response, error)) *SharedTierRestoreJobsApi_CreateBackupTenantRestoreExecute_Call {
	_c.Call.Return(run)
	return _c
}

// CreateBackupTenantRestoreWithParams provides a mock function with given fields: ctx, args
func (_m *SharedTierRestoreJobsApi) CreateBackupTenantRestoreWithParams(ctx context.Context, args *admin.CreateBackupTenantRestoreApiParams) admin.CreateBackupTenantRestoreApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for CreateBackupTenantRestoreWithParams")
	}

	var r0 admin.CreateBackupTenantRestoreApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.CreateBackupTenantRestoreApiParams) admin.CreateBackupTenantRestoreApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.CreateBackupTenantRestoreApiRequest)
	}

	return r0
}

// SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateBackupTenantRestoreWithParams'
type SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call struct {
	*mock.Call
}

// CreateBackupTenantRestoreWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.CreateBackupTenantRestoreApiParams
func (_e *SharedTierRestoreJobsApi_Expecter) CreateBackupTenantRestoreWithParams(ctx any, args any) *SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call {
	return &SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call{Call: _e.mock.On("CreateBackupTenantRestoreWithParams", ctx, args)}
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call) Run(run func(ctx context.Context, args *admin.CreateBackupTenantRestoreApiParams)) *SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.CreateBackupTenantRestoreApiParams))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call) Return(_a0 admin.CreateBackupTenantRestoreApiRequest) *SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call) RunAndReturn(run func(context.Context, *admin.CreateBackupTenantRestoreApiParams) admin.CreateBackupTenantRestoreApiRequest) *SharedTierRestoreJobsApi_CreateBackupTenantRestoreWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// GetBackupTenantRestore provides a mock function with given fields: ctx, clusterName, groupId, restoreId
func (_m *SharedTierRestoreJobsApi) GetBackupTenantRestore(ctx context.Context, clusterName string, groupId string, restoreId string) admin.GetBackupTenantRestoreApiRequest {
	ret := _m.Called(ctx, clusterName, groupId, restoreId)

	if len(ret) == 0 {
		panic("no return value specified for GetBackupTenantRestore")
	}

	var r0 admin.GetBackupTenantRestoreApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) admin.GetBackupTenantRestoreApiRequest); ok {
		r0 = rf(ctx, clusterName, groupId, restoreId)
	} else {
		r0 = ret.Get(0).(admin.GetBackupTenantRestoreApiRequest)
	}

	return r0
}

// SharedTierRestoreJobsApi_GetBackupTenantRestore_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetBackupTenantRestore'
type SharedTierRestoreJobsApi_GetBackupTenantRestore_Call struct {
	*mock.Call
}

// GetBackupTenantRestore is a helper method to define mock.On call
//   - ctx context.Context
//   - clusterName string
//   - groupId string
//   - restoreId string
func (_e *SharedTierRestoreJobsApi_Expecter) GetBackupTenantRestore(ctx any, clusterName any, groupId any, restoreId any) *SharedTierRestoreJobsApi_GetBackupTenantRestore_Call {
	return &SharedTierRestoreJobsApi_GetBackupTenantRestore_Call{Call: _e.mock.On("GetBackupTenantRestore", ctx, clusterName, groupId, restoreId)}
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestore_Call) Run(run func(ctx context.Context, clusterName string, groupId string, restoreId string)) *SharedTierRestoreJobsApi_GetBackupTenantRestore_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestore_Call) Return(_a0 admin.GetBackupTenantRestoreApiRequest) *SharedTierRestoreJobsApi_GetBackupTenantRestore_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestore_Call) RunAndReturn(run func(context.Context, string, string, string) admin.GetBackupTenantRestoreApiRequest) *SharedTierRestoreJobsApi_GetBackupTenantRestore_Call {
	_c.Call.Return(run)
	return _c
}

// GetBackupTenantRestoreExecute provides a mock function with given fields: r
func (_m *SharedTierRestoreJobsApi) GetBackupTenantRestoreExecute(r admin.GetBackupTenantRestoreApiRequest) (*admin.TenantRestore, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetBackupTenantRestoreExecute")
	}

	var r0 *admin.TenantRestore
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.GetBackupTenantRestoreApiRequest) (*admin.TenantRestore, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.GetBackupTenantRestoreApiRequest) *admin.TenantRestore); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.TenantRestore)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.GetBackupTenantRestoreApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.GetBackupTenantRestoreApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetBackupTenantRestoreExecute'
type SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call struct {
	*mock.Call
}

// GetBackupTenantRestoreExecute is a helper method to define mock.On call
//   - r admin.GetBackupTenantRestoreApiRequest
func (_e *SharedTierRestoreJobsApi_Expecter) GetBackupTenantRestoreExecute(r any) *SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call {
	return &SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call{Call: _e.mock.On("GetBackupTenantRestoreExecute", r)}
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call) Run(run func(r admin.GetBackupTenantRestoreApiRequest)) *SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.GetBackupTenantRestoreApiRequest))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call) Return(_a0 *admin.TenantRestore, _a1 *http.Response, _a2 error) *SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call) RunAndReturn(run func(admin.GetBackupTenantRestoreApiRequest) (*admin.TenantRestore, *http.Response, error)) *SharedTierRestoreJobsApi_GetBackupTenantRestoreExecute_Call {
	_c.Call.Return(run)
	return _c
}

// GetBackupTenantRestoreWithParams provides a mock function with given fields: ctx, args
func (_m *SharedTierRestoreJobsApi) GetBackupTenantRestoreWithParams(ctx context.Context, args *admin.GetBackupTenantRestoreApiParams) admin.GetBackupTenantRestoreApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for GetBackupTenantRestoreWithParams")
	}

	var r0 admin.GetBackupTenantRestoreApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.GetBackupTenantRestoreApiParams) admin.GetBackupTenantRestoreApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.GetBackupTenantRestoreApiRequest)
	}

	return r0
}

// SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetBackupTenantRestoreWithParams'
type SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call struct {
	*mock.Call
}

// GetBackupTenantRestoreWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.GetBackupTenantRestoreApiParams
func (_e *SharedTierRestoreJobsApi_Expecter) GetBackupTenantRestoreWithParams(ctx any, args any) *SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call {
	return &SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call{Call: _e.mock.On("GetBackupTenantRestoreWithParams", ctx, args)}
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call) Run(run func(ctx context.Context, args *admin.GetBackupTenantRestoreApiParams)) *SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.GetBackupTenantRestoreApiParams))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call) Return(_a0 admin.GetBackupTenantRestoreApiRequest) *SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call) RunAndReturn(run func(context.Context, *admin.GetBackupTenantRestoreApiParams) admin.GetBackupTenantRestoreApiRequest) *SharedTierRestoreJobsApi_GetBackupTenantRestoreWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// ListBackupTenantRestores provides a mock function with given fields: ctx, clusterName, groupId
func (_m *SharedTierRestoreJobsApi) ListBackupTenantRestores(ctx context.Context, clusterName string, groupId string) admin.ListBackupTenantRestoresApiRequest {
	ret := _m.Called(ctx, clusterName, groupId)

	if len(ret) == 0 {
		panic("no return value specified for ListBackupTenantRestores")
	}

	var r0 admin.ListBackupTenantRestoresApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, string, string) admin.ListBackupTenantRestoresApiRequest); ok {
		r0 = rf(ctx, clusterName, groupId)
	} else {
		r0 = ret.Get(0).(admin.ListBackupTenantRestoresApiRequest)
	}

	return r0
}

// SharedTierRestoreJobsApi_ListBackupTenantRestores_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListBackupTenantRestores'
type SharedTierRestoreJobsApi_ListBackupTenantRestores_Call struct {
	*mock.Call
}

// ListBackupTenantRestores is a helper method to define mock.On call
//   - ctx context.Context
//   - clusterName string
//   - groupId string
func (_e *SharedTierRestoreJobsApi_Expecter) ListBackupTenantRestores(ctx any, clusterName any, groupId any) *SharedTierRestoreJobsApi_ListBackupTenantRestores_Call {
	return &SharedTierRestoreJobsApi_ListBackupTenantRestores_Call{Call: _e.mock.On("ListBackupTenantRestores", ctx, clusterName, groupId)}
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestores_Call) Run(run func(ctx context.Context, clusterName string, groupId string)) *SharedTierRestoreJobsApi_ListBackupTenantRestores_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestores_Call) Return(_a0 admin.ListBackupTenantRestoresApiRequest) *SharedTierRestoreJobsApi_ListBackupTenantRestores_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestores_Call) RunAndReturn(run func(context.Context, string, string) admin.ListBackupTenantRestoresApiRequest) *SharedTierRestoreJobsApi_ListBackupTenantRestores_Call {
	_c.Call.Return(run)
	return _c
}

// ListBackupTenantRestoresExecute provides a mock function with given fields: r
func (_m *SharedTierRestoreJobsApi) ListBackupTenantRestoresExecute(r admin.ListBackupTenantRestoresApiRequest) (*admin.PaginatedTenantRestore, *http.Response, error) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for ListBackupTenantRestoresExecute")
	}

	var r0 *admin.PaginatedTenantRestore
	var r1 *http.Response
	var r2 error
	if rf, ok := ret.Get(0).(func(admin.ListBackupTenantRestoresApiRequest) (*admin.PaginatedTenantRestore, *http.Response, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(admin.ListBackupTenantRestoresApiRequest) *admin.PaginatedTenantRestore); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*admin.PaginatedTenantRestore)
		}
	}

	if rf, ok := ret.Get(1).(func(admin.ListBackupTenantRestoresApiRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	if rf, ok := ret.Get(2).(func(admin.ListBackupTenantRestoresApiRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListBackupTenantRestoresExecute'
type SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call struct {
	*mock.Call
}

// ListBackupTenantRestoresExecute is a helper method to define mock.On call
//   - r admin.ListBackupTenantRestoresApiRequest
func (_e *SharedTierRestoreJobsApi_Expecter) ListBackupTenantRestoresExecute(r any) *SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call {
	return &SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call{Call: _e.mock.On("ListBackupTenantRestoresExecute", r)}
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call) Run(run func(r admin.ListBackupTenantRestoresApiRequest)) *SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(admin.ListBackupTenantRestoresApiRequest))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call) Return(_a0 *admin.PaginatedTenantRestore, _a1 *http.Response, _a2 error) *SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call) RunAndReturn(run func(admin.ListBackupTenantRestoresApiRequest) (*admin.PaginatedTenantRestore, *http.Response, error)) *SharedTierRestoreJobsApi_ListBackupTenantRestoresExecute_Call {
	_c.Call.Return(run)
	return _c
}

// ListBackupTenantRestoresWithParams provides a mock function with given fields: ctx, args
func (_m *SharedTierRestoreJobsApi) ListBackupTenantRestoresWithParams(ctx context.Context, args *admin.ListBackupTenantRestoresApiParams) admin.ListBackupTenantRestoresApiRequest {
	ret := _m.Called(ctx, args)

	if len(ret) == 0 {
		panic("no return value specified for ListBackupTenantRestoresWithParams")
	}

	var r0 admin.ListBackupTenantRestoresApiRequest
	if rf, ok := ret.Get(0).(func(context.Context, *admin.ListBackupTenantRestoresApiParams) admin.ListBackupTenantRestoresApiRequest); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Get(0).(admin.ListBackupTenantRestoresApiRequest)
	}

	return r0
}

// SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListBackupTenantRestoresWithParams'
type SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call struct {
	*mock.Call
}

// ListBackupTenantRestoresWithParams is a helper method to define mock.On call
//   - ctx context.Context
//   - args *admin.ListBackupTenantRestoresApiParams
func (_e *SharedTierRestoreJobsApi_Expecter) ListBackupTenantRestoresWithParams(ctx any, args any) *SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call {
	return &SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call{Call: _e.mock.On("ListBackupTenantRestoresWithParams", ctx, args)}
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call) Run(run func(ctx context.Context, args *admin.ListBackupTenantRestoresApiParams)) *SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*admin.ListBackupTenantRestoresApiParams))
	})
	return _c
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call) Return(_a0 admin.ListBackupTenantRestoresApiRequest) *SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call) RunAndReturn(run func(context.Context, *admin.ListBackupTenantRestoresApiParams) admin.ListBackupTenantRestoresApiRequest) *SharedTierRestoreJobsApi_ListBackupTenantRestoresWithParams_Call {
	_c.Call.Return(run)
	return _c
}

// NewSharedTierRestoreJobsApi creates a new instance of SharedTierRestoreJobsApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSharedTierRestoreJobsApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *SharedTierRestoreJobsApi {
	mock := &SharedTierRestoreJobsApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
