name: Generate SDK
on:
 schedule:
   - cron: '30 8 * * *'
 workflow_dispatch:
  
jobs:
  generate-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch changes
        working-directory: ./tools
        run: make fetch_openapi
      - name: Run generation
        working-directory: ./tools
        run: |
          make clean_and_generate
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@3f2b60ffcdfba6155ff2585cab50b8d8a7c737e6
        id: verify-changed-files
        with:
          files: |
             ./admin/**/*
      - name: Run docs generation
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: make gen-docs
      - name: Release updates
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        working-directory: ./tools
        run: |
          make new-release  
      - uses: peter-evans/create-pull-request@v5
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        env:
           GITHUB_TOKEN: ${{ secrets.REPO_SCOPED_GITHUB_TOKEN }}
        with:
          title: "APIBot: SDK update based on recent changes in Atlas API"
          commit-message: "Automated openapi client update"
          delete-branch: true
          branch: api-bot-update
          body: |
            Automatic update for MongoDB Atlas Go Client based on OpenAPI changes.
            PR contains autogenerated changes for the MongoDB Atlas client.
            
            ## Automated checks

            1. Compilation and unit tests
            2. Documentation style
            3. Transformation engine linting

            ## Important Details

            1. If build is failing please check the logs and fix the issues in the OpenAPI file (openapi/atlas-api.yaml)
            2. Do not attempt to manually fix any issues in the Golang Codebase as all changes are automatically generated. 
            Fixes should be applied to the OpenAPI file (openapi/atlas-api.yaml) or ./tools engine in separate PR.

            ## Manual Review Procedure

            1. Review changes in the OpenAPI file (openapi/atlas-api.yaml)
            2. If we see any breaking changes without new resource version 
              - Checkout PR locally and run `make update-version`
              - Provide breaking changes infomation in generated ``./releaser/breaking_changes/{release_version}.md` file
              - Push your changes directly to the automation PR. 
            3. If we have major version release request feedback from additional reviewer if possible.
            4. Merge PR into main branch 
            5. After merge automated release process will be triggered. 
            
          


