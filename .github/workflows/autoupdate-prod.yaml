name: Generate SDK
on:
 schedule:
   - cron: '30 8 * * *'
 workflow_dispatch:
  
jobs:
  generate-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: 1.20
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch changes
        working-directory: ./tools
        run: make fetch_openapi
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v14
        id: verify-changed-files
        with:
          files: |
             **/atlas-api.yaml
      - name: Run generation
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        working-directory: ./tools
        run: make clean_and_generate
      - name: Run docs generation
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        working-directory: ./tools
        run: make generate_docs
      - uses: peter-evans/create-pull-request@v5
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        env:
           GITHUB_TOKEN: ${{ secrets.REPO_SCOPED_GITHUB_TOKEN }}
        with:
          title: "APIBot: SDK update based on recent changes in Atlas API"
          commit-message: "Automated openapi client update"
          delete-branch: true
          branch: api-bot-update
          body: |
            Automatic update for MongoDB Atlas Go Client based on OpenAPI changes.
            PR contains autogenerated changes for the MongoDB Atlas client.
            
            ## Automated checks

            1. Compilation and unit tests
            2. Documentation style
            3. Transformation engine linting

            ## Important Details

            1. If build is failing please check the logs and identify if issues 
            2. Do not attempt to manually fix any issues in the PR. 
            Fixes should be applied to the OpenAPI file (openapi/atlas-api.yaml) or ./tools engine in separate PR.

            ## Manual Review Procedure

            1. Review changes in the OpenAPI file (openapi/atlas-api.yaml)
            1.1 Do we see any breaking changes? Renames in methods or models that will affect customers.
            2. Check for new versions in openapi/versions.yaml file. 
            2.1 If new version is introduced we going to have new major release of the SDK.
            3. Merge PR into main branch 
            4. After merge automated release process will be triggered. 


